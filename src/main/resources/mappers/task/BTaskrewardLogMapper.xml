<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jk51.modules.task.mapper.BTaskrewardLogMapper">
  <resultMap id="BaseResultMap" type="com.jk51.model.task.BTaskrewardLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="site_id" jdbcType="INTEGER" property="siteId" />
    <result column="reward_id" jdbcType="INTEGER" property="rewardId" />
    <result column="join_type" jdbcType="TINYINT" property="joinType" />
    <result column="join_id" jdbcType="INTEGER" property="joinId" />
    <result column="execute_id" jdbcType="INTEGER" property="executeId" />
    <result column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="reward_type" jdbcType="TINYINT" property="rewardType" />
    <result column="value" jdbcType="INTEGER" property="value" />
    <result column="count_value" jdbcType="INTEGER" property="countValue" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, site_id, reward_id, join_type, join_id, execute_id, task_id, task_name, reward_type, 
    value, count_value, remark, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.jk51.model.task.BTaskrewardLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_taskreward_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from b_taskreward_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from b_taskreward_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jk51.model.task.BTaskrewardLogExample">
    delete from b_taskreward_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jk51.model.task.BTaskrewardLog">
    insert into b_taskreward_log (id, site_id, reward_id, 
      join_type, join_id, execute_id, 
      task_id, task_name, reward_type, 
      `value`, count_value, remark,
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{siteId,jdbcType=INTEGER}, #{rewardId,jdbcType=INTEGER}, 
      #{joinType,jdbcType=TINYINT}, #{joinId,jdbcType=INTEGER}, #{executeId,jdbcType=INTEGER}, 
      #{taskId,jdbcType=INTEGER}, #{taskName,jdbcType=VARCHAR}, #{rewardType,jdbcType=TINYINT}, 
      #{value,jdbcType=INTEGER}, #{countValue,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jk51.model.task.BTaskrewardLog">
    insert into b_taskreward_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="siteId != null">
        site_id,
      </if>
      <if test="rewardId != null">
        reward_id,
      </if>
      <if test="joinType != null">
        join_type,
      </if>
      <if test="joinId != null">
        join_id,
      </if>
      <if test="executeId != null">
        execute_id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="rewardType != null">
        reward_type,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="countValue != null">
        count_value,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="siteId != null">
        #{siteId,jdbcType=INTEGER},
      </if>
      <if test="rewardId != null">
        #{rewardId,jdbcType=INTEGER},
      </if>
      <if test="joinType != null">
        #{joinType,jdbcType=TINYINT},
      </if>
      <if test="joinId != null">
        #{joinId,jdbcType=INTEGER},
      </if>
      <if test="executeId != null">
        #{executeId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="rewardType != null">
        #{rewardType,jdbcType=TINYINT},
      </if>
      <if test="value != null">
        #{value,jdbcType=INTEGER},
      </if>
      <if test="countValue != null">
        #{countValue,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jk51.model.task.BTaskrewardLogExample" resultType="java.lang.Long">
    select count(*) from b_taskreward_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update b_taskreward_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.siteId != null">
        site_id = #{record.siteId,jdbcType=INTEGER},
      </if>
      <if test="record.rewardId != null">
        reward_id = #{record.rewardId,jdbcType=INTEGER},
      </if>
      <if test="record.joinType != null">
        join_type = #{record.joinType,jdbcType=TINYINT},
      </if>
      <if test="record.joinId != null">
        join_id = #{record.joinId,jdbcType=INTEGER},
      </if>
      <if test="record.executeId != null">
        execute_id = #{record.executeId,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.taskName != null">
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.rewardType != null">
        reward_type = #{record.rewardType,jdbcType=TINYINT},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=INTEGER},
      </if>
      <if test="record.countValue != null">
        count_value = #{record.countValue,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update b_taskreward_log
    set id = #{record.id,jdbcType=INTEGER},
      site_id = #{record.siteId,jdbcType=INTEGER},
      reward_id = #{record.rewardId,jdbcType=INTEGER},
      join_type = #{record.joinType,jdbcType=TINYINT},
      join_id = #{record.joinId,jdbcType=INTEGER},
      execute_id = #{record.executeId,jdbcType=INTEGER},
      task_id = #{record.taskId,jdbcType=INTEGER},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      reward_type = #{record.rewardType,jdbcType=TINYINT},
      value = #{record.value,jdbcType=INTEGER},
      count_value = #{record.countValue,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk51.model.task.BTaskrewardLog">
    update b_taskreward_log
    <set>
      <if test="siteId != null">
        site_id = #{siteId,jdbcType=INTEGER},
      </if>
      <if test="rewardId != null">
        reward_id = #{rewardId,jdbcType=INTEGER},
      </if>
      <if test="joinType != null">
        join_type = #{joinType,jdbcType=TINYINT},
      </if>
      <if test="joinId != null">
        join_id = #{joinId,jdbcType=INTEGER},
      </if>
      <if test="executeId != null">
        execute_id = #{executeId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="rewardType != null">
        reward_type = #{rewardType,jdbcType=TINYINT},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=INTEGER},
      </if>
      <if test="countValue != null">
        count_value = #{countValue,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk51.model.task.BTaskrewardLog">
    update b_taskreward_log
    set site_id = #{siteId,jdbcType=INTEGER},
      reward_id = #{rewardId,jdbcType=INTEGER},
      join_type = #{joinType,jdbcType=TINYINT},
      join_id = #{joinId,jdbcType=INTEGER},
      execute_id = #{executeId,jdbcType=INTEGER},
      task_id = #{taskId,jdbcType=INTEGER},
      task_name = #{taskName,jdbcType=VARCHAR},
      reward_type = #{rewardType,jdbcType=TINYINT},
      value = #{value,jdbcType=INTEGER},
      count_value = #{countValue,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>