<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jk51.modules.task.mapper.TCounttypeMapper">
  <resultMap id="BaseResultMap" type="com.jk51.model.task.TCounttype">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tbl_name" jdbcType="VARCHAR" property="tblName" />
    <result column="filter_condition" jdbcType="VARCHAR" property="filterCondition" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, group_id, name, tbl_name, filter_condition
  </sql>
  <select id="selectByExample" parameterType="com.jk51.model.task.TCounttypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_counttype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>

  <select id="conactTypeName" resultType="string">
    select GROUP_CONCAT(name) from t_counttype
    where id IN
    <foreach collection="ids" open="(" separator="," close=")" item="id">
      #{id}
    </foreach>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_counttype
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_counttype
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jk51.model.task.TCounttypeExample">
    delete from t_counttype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jk51.model.task.TCounttype">
    insert into t_counttype (id, group_id, name, 
      tbl_name, filter_condition)
    values (#{id,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{tblName,jdbcType=VARCHAR}, #{filterCondition,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jk51.model.task.TCounttype">
    insert into t_counttype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="tblName != null">
        tbl_name,
      </if>
      <if test="filterCondition != null">
        filter_condition,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tblName != null">
        #{tblName,jdbcType=VARCHAR},
      </if>
      <if test="filterCondition != null">
        #{filterCondition,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jk51.model.task.TCounttypeExample" resultType="java.lang.Long">
    select count(*) from t_counttype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_counttype
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.tblName != null">
        tbl_name = #{record.tblName,jdbcType=VARCHAR},
      </if>
      <if test="record.filterCondition != null">
        filter_condition = #{record.filterCondition,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_counttype
    set id = #{record.id,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      tbl_name = #{record.tblName,jdbcType=VARCHAR},
      filter_condition = #{record.filterCondition,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk51.model.task.TCounttype">
    update t_counttype
    <set>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tblName != null">
        tbl_name = #{tblName,jdbcType=VARCHAR},
      </if>
      <if test="filterCondition != null">
        filter_condition = #{filterCondition,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk51.model.task.TCounttype">
    update t_counttype
    set group_id = #{groupId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      tbl_name = #{tblName,jdbcType=VARCHAR},
      filter_condition = #{filterCondition,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectTCounttypeByByGroupId" resultMap="BaseResultMap">
    SELECT id,group_id,name FROM t_counttype
    <where>
      group_id = #{groupId}
    </where>
  </select>

</mapper>
