<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jk51.modules.task.mapper.BTaskcountMapper">
  <resultMap id="BaseResultMap" type="com.jk51.model.task.BTaskcount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="site_id" jdbcType="INTEGER" property="siteId" />
    <result column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="plan_id" jdbcType="INTEGER" property="planId" />
    <result column="execute_id" jdbcType="INTEGER" property="executeId" />
    <result column="join_type" jdbcType="TINYINT" property="joinType" />
    <result column="join_id" jdbcType="INTEGER" property="joinId" />
    <result column="count_value" jdbcType="INTEGER" property="countValue" />
    <result column="count_start" jdbcType="TIMESTAMP" property="countStart" />
    <result column="count_end" jdbcType="TIMESTAMP" property="countEnd" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, site_id, task_id, plan_id, execute_id, join_type, join_id, count_value, count_start, 
    count_end, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.jk51.model.task.BTaskcountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_taskcount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from b_taskcount
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from b_taskcount
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jk51.model.task.BTaskcountExample">
    delete from b_taskcount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jk51.model.task.BTaskcount">
    insert into b_taskcount (id, site_id, task_id, 
      plan_id, execute_id, join_type, 
      join_id, count_value, count_start, 
      count_end, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{siteId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, 
      #{planId,jdbcType=INTEGER}, #{executeId,jdbcType=INTEGER}, #{joinType,jdbcType=TINYINT}, 
      #{joinId,jdbcType=INTEGER}, #{countValue,jdbcType=INTEGER}, #{countStart,jdbcType=TIMESTAMP}, 
      #{countEnd,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.jk51.model.task.BTaskcount">
    insert into b_taskcount
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="siteId != null">
        site_id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="planId != null">
        plan_id,
      </if>
      <if test="executeId != null">
        execute_id,
      </if>
      <if test="joinType != null">
        join_type,
      </if>
      <if test="joinId != null">
        join_id,
      </if>
      <if test="countValue != null">
        count_value,
      </if>
      <if test="countStart != null">
        count_start,
      </if>
      <if test="countEnd != null">
        count_end,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="siteId != null">
        #{siteId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="planId != null">
        #{planId,jdbcType=INTEGER},
      </if>
      <if test="executeId != null">
        #{executeId,jdbcType=INTEGER},
      </if>
      <if test="joinType != null">
        #{joinType,jdbcType=TINYINT},
      </if>
      <if test="joinId != null">
        #{joinId,jdbcType=INTEGER},
      </if>
      <if test="countValue != null">
        #{countValue,jdbcType=INTEGER},
      </if>
      <if test="countStart != null">
        #{countStart,jdbcType=TIMESTAMP},
      </if>
      <if test="countEnd != null">
        #{countEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jk51.model.task.BTaskcountExample" resultType="java.lang.Long">
    select count(*) from b_taskcount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update b_taskcount
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.siteId != null">
        site_id = #{record.siteId,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.planId != null">
        plan_id = #{record.planId,jdbcType=INTEGER},
      </if>
      <if test="record.executeId != null">
        execute_id = #{record.executeId,jdbcType=INTEGER},
      </if>
      <if test="record.joinType != null">
        join_type = #{record.joinType,jdbcType=TINYINT},
      </if>
      <if test="record.joinId != null">
        join_id = #{record.joinId,jdbcType=INTEGER},
      </if>
      <if test="record.countValue != null">
        count_value = #{record.countValue,jdbcType=INTEGER},
      </if>
      <if test="record.countStart != null">
        count_start = #{record.countStart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.countEnd != null">
        count_end = #{record.countEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update b_taskcount
    set id = #{record.id,jdbcType=INTEGER},
      site_id = #{record.siteId,jdbcType=INTEGER},
      task_id = #{record.taskId,jdbcType=INTEGER},
      plan_id = #{record.planId,jdbcType=INTEGER},
      execute_id = #{record.executeId,jdbcType=INTEGER},
      join_type = #{record.joinType,jdbcType=TINYINT},
      join_id = #{record.joinId,jdbcType=INTEGER},
      count_value = #{record.countValue,jdbcType=INTEGER},
      count_start = #{record.countStart,jdbcType=TIMESTAMP},
      count_end = #{record.countEnd,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk51.model.task.BTaskcount">
    update b_taskcount
    <set>
      <if test="siteId != null">
        site_id = #{siteId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="planId != null">
        plan_id = #{planId,jdbcType=INTEGER},
      </if>
      <if test="executeId != null">
        execute_id = #{executeId,jdbcType=INTEGER},
      </if>
      <if test="joinType != null">
        join_type = #{joinType,jdbcType=TINYINT},
      </if>
      <if test="joinId != null">
        join_id = #{joinId,jdbcType=INTEGER},
      </if>
      <if test="countValue != null">
        count_value = #{countValue,jdbcType=INTEGER},
      </if>
      <if test="countStart != null">
        count_start = #{countStart,jdbcType=TIMESTAMP},
      </if>
      <if test="countEnd != null">
        count_end = #{countEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk51.model.task.BTaskcount">
    update b_taskcount
    set site_id = #{siteId,jdbcType=INTEGER},
      task_id = #{taskId,jdbcType=INTEGER},
      plan_id = #{planId,jdbcType=INTEGER},
      execute_id = #{executeId,jdbcType=INTEGER},
      join_type = #{joinType,jdbcType=TINYINT},
      join_id = #{joinId,jdbcType=INTEGER},
      count_value = #{countValue,jdbcType=INTEGER},
      count_start = #{countStart,jdbcType=TIMESTAMP},
      count_end = #{countEnd,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="sumByExample" parameterType="com.jk51.model.task.BTaskcountExample" resultType="int">
    select ifnull(sum(count_value), 0) from b_taskcount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <select id="queryTaskCountByExecuteId" resultType="Integer">
    SELECT ifnull(sum(count_value),0) FROM b_taskcount where execute_id =#{executeId}
    <choose>
      <when test="joinType != null and joinType == 20">
        and join_type = 20 and join_id = #{joinId}
      </when>
      <otherwise>
        and join_type = 10 and join_id = #{storeId}
      </otherwise>
    </choose>
  </select>

  <select id="queryTaskDescByJoinId" resultType="map">
    SELECT t2.id,t2.`name`,t3.reward FROM b_task_execute AS t1
    LEFT JOIN b_taskplan AS t2 ON (t1.plan_id = t2.id)
    left join b_taskreward t3 on t1.id=t3.execute_id
    WHERE
    t2.site_id = #{siteId}
    AND FIND_IN_SET(#{joinId}, t2.join_ids)
    and t3.join_id=#{joinId}
    group by t2.id
  </select>

  <select id="queryTaskListByJoinId" resultType="map">
    SELECT * FROM b_task_execute WHERE FIND_IN_SET(plan_id,(
    SELECT GROUP_CONCAT(id) FROM b_taskplan WHERE `status` = 20 AND ((join_type = 20 AND FIND_IN_SET(100897, join_ids)) OR (join_type = 10 AND FIND_IN_SET(1166, join_ids))))
    )and complete = 0 AND start_day <![CDATA[ <= ]]> CURRENT_DATE();

    <!--select t1.active_type,t1.day_num,t1.name plan_name,ifnull(SUM(t2.count_value),0) completes,t3.*,t4.start_day,t4.end_day,t5.`name` target_name-->
    <!--from b_taskplan t1-->
    <!--LEFT JOIN b_taskcount t2 on t2.plan_id=t1.id-->
    <!--left join b_task t3 on t3.id=t2.task_id-->
    <!--LEFT JOIN b_task_execute t4 on t4.task_id=t2.task_id-->
    <!--LEFT JOIN t_quota t5 on t3.target_id=t5.id-->
    <!--where t2.join_id = #{joinId}-->
    <!--<if test="adminType != null and adminType!= null">-->
      <!--and t3.admin_type = #{adminType}-->
    <!--</if>-->
    <!--<if test="joinType != null and joinType != ''">-->
     <!--and t3.object=#{joinType}-->
    <!--</if>-->
    <!--<if test="rewardType != null and rewardType != ''">-->
      <!--and t3.reward_type=#{rewardType}-->
    <!--</if>-->
    <!--<if test="start != null and start != ''">-->
      <!--and t4.start_day=#{start}-->
    <!--</if>-->
    <!--<if test="end != null and end != ''">-->
      <!--and t4.end_day=#{end}-->
    <!--</if>-->
    <!--<if test="complete != null and complete != ''">-->
      <!--and t4.complete=#{complete}-->
    <!--</if>-->
    <!--<if test="taskType != null and taskType != ''">-->
      <!--and t5.group_id=#{taskType}-->
    <!--</if>-->
    <!--group by t2.task_id-->
  </select>
    <select id="selectSiteIdByJoinType" resultType="_int">
      SELECT site_id FROM b_store_admin
      <where>
        <choose>
          <when test="joinType ==10">
            store_id = #{joinId}
          </when>
          <otherwise>
            id = #{joinId}
          </otherwise>
        </choose>
      </where>
      limit 1
    </select>
</mapper>
