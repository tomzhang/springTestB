<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jk51.modules.distribution.mapper.DFundsMapper">
  <resultMap id="BaseResultMap" type="com.jk51.model.distribute.DFunds">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="owner" jdbcType="INTEGER" property="owner" />
    <result column="distributor_id" jdbcType="INTEGER" property="distributorId" />
    <result column="trades_id" jdbcType="VARCHAR" property="tradesId" />
    <result column="store_amount" jdbcType="INTEGER" property="storeAmount" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="pay_type" jdbcType="TINYINT" property="payType" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, owner, distributor_id, trades_id, store_amount, amount, money, pay_type, type, 
    status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from d_funds
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByDistributorId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from d_funds
    where distributor_id = #{distributorId,jdbcType=INTEGER} order by id DESC limit 1
  </select>

  <insert id="insert" parameterType="com.jk51.model.distribute.DFunds">
    INSERT into d_funds (owner, distributor_id,
      trades_id, store_amount, amount,
      money, pay_type, type,
      status, create_time, update_time
      )
    values (#{owner,jdbcType=INTEGER}, #{distributorId,jdbcType=INTEGER},
      #{tradesId,jdbcType=VARCHAR}, #{storeAmount,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER},
      #{money,jdbcType=INTEGER}, #{payType,jdbcType=TINYINT}, #{type,jdbcType=TINYINT},
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>


</mapper>