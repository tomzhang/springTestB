<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jk51.modules.trades.mapper.RefundMapper">
    <resultMap id="RefundMap" type="com.jk51.model.order.Refund">
        <id column="site_id" jdbcType="INTEGER" property="siteId"/>
        <result column="operator_id" property="operatorId"/>
        <result column="operator_name" property="operatorName"/>
        <result column="merchant_id" property="merchantId"/>
        <result column="merchant_name" property="merchantName"/>
        <result column="pay_style" property="payStyle"/>
        <result column="store_id" property="storeId"/>
        <result column="trade_id" property="tradeId"/>
        <result column="trade_status" property="tradeStatus"/>
        <result column="real_pay" property="realPay"/>
        <result column="apply_refund_money" property="applyRefundMoney"/>
        <result column="refund_serial_no" property="refundSerialNo"/>
        <result column="real_refund_money" property="realRefundMoney"/>
        <result column="refund_cash" property="refundCash"/>
        <result column="refund_health_insurance" property="refundHealthInsurance"/>
        <result column="is_refund_goods" property="isRefundGoods"/>
        <result column="refund_express_no" property="refundExpressNo"/>
        <result column="deleted_at" property="deletedAt"/>
        <result column="refund_time" property="refundTime"/>
        <result column="account_checking_status" property="accountCheckingStatus"/>
        <result column="operator_type" property="operatorType"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="integral_used" property="integralUsed"/>
        <result column="is_refund_integral" property="isRefundIntegral"/>
        <result column="is_refund_coupon" property="isRefundCoupon"/>
    </resultMap>

    <insert id="addRefund" parameterType="com.jk51.model.order.Refund" useGeneratedKeys="true" keyProperty="id">
        insert INTO b_refund
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="siteId!=null">
                site_id,
            </if>
            <if test="operatorId!=null">
                operator_id,
            </if>
            <if test="operatorName!=null and operatorName!=''">
                operator_name,
            </if>
            <if test="merchantId!=null">
                merchant_id,
            </if>
            <if test="merchantName!=null and merchantName!=''">
                merchant_name,
            </if>
            <if test="payStyle!=null and payStyle!=''">
                pay_style,
            </if>
            <if test="status!=null">
                status,
            </if>
            <if test="storeId!=null">
                store_id,
            </if>
            <if test="tradeId!=null and tradeId!=''">
                trade_id,
            </if>
            <if test="tradeStatus!=null">
                trade_status,
            </if>
            <if test="realPay!=null">
                real_pay,
            </if>
            <if test="freight!=null">
                freight,
            </if>
            <if test="applyRefundMoney!=null">
                apply_refund_money,
            </if>
            <if test="refundSerialNo!=null and refundSerialNo!=''">
                refund_serial_no,
            </if>
            <if test="realRefundMoney!=null">
                real_refund_money,
            </if>
            <if test="refundCash!=null">
                refund_cash,
            </if>
            <if test="refundHealthInsurance!=null">
                refund_health_insurance,
            </if>
            <if test="isRefundGoods!=null">
                is_refund_goods,
            </if>
            <if test="refundExpressNo!=null and refundExpressNo!=''">
                refund_express_no,
            </if>
            <if test="reason!=null and reason!=''">
                reason,
            </if>
            <if test="explain!=null and explain!=''">
                `explain`,
            </if>
            <if test="voucher!=null and voucher!=''">
                voucher,
            </if>
            refund_time,
            <if test="accountCheckingStatus!=null">
                account_checking_status,
            </if>
            <if test="operatorType!=null">
                operator_type,
            </if>
            create_time,
            update_time,
            <if test="integralUsed!=null">
                integral_used,
            </if>
            <if test="isRefundIntegral!=null">
                is_refund_integral,
            </if>
            <if test="isRefundCoupon!=null">
                is_refund_coupon,
            </if>
        </trim>
        <trim prefix=" values (" suffix=")" suffixOverrides=",">
            <if test="siteId!=null">
                #{siteId},
            </if>
            <if test="operatorId!=null">
                #{operatorId},
            </if>
            <if test="operatorName!=null and operatorName!=''">
                #{operatorName},
            </if>
            <if test="merchantId!=null">
                #{merchantId},
            </if>
            <if test="merchantName!=null and merchantName!=''">
                #{merchantName},
            </if>
            <if test="payStyle!=null and payStyle!=''">
                #{payStyle},
            </if>
            <if test="status!=null">
                #{status},
            </if>
            <if test="storeId!=null">
                #{storeId},
            </if>
            <if test="tradeId!=null and tradeId!=''">
                #{tradeId},
            </if>
            <if test="tradeStatus!=null">
                #{tradeStatus},
            </if>
            <if test="realPay!=null">
                #{realPay},
            </if>
            <if test="freight!=null">
                #{freight},
            </if>
            <if test="applyRefundMoney!=null">
                #{applyRefundMoney},
            </if>
            <if test="refundSerialNo!=null and refundSerialNo!=''">
                #{refundSerialNo},
            </if>
            <if test="realRefundMoney!=null">
                #{realRefundMoney},
            </if>
            <if test="refundCash!=null">
                #{refundCash},
            </if>
            <if test="refundHealthInsurance!=null">
                #{refundHealthInsurance},
            </if>
            <if test="isRefundGoods!=null">
                #{isRefundGoods},
            </if>
            <if test="refundExpressNo!=null and refundExpressNo!=''">
                #{refundExpressNo},
            </if>
            <if test="reason!=null and reason!=''">
                #{reason},
            </if>
            <if test="explain!=null and explain!=''">
                #{explain},
            </if>
            <if test="voucher!=null and voucher!=''">
                #{voucher},
            </if>
            CURRENT_TIMESTAMP(),
            <if test="accountCheckingStatus!=null">
                #{accountCheckingStatus},
            </if>
            <if test="operatorType!=null">
                #{operatorType},
            </if>
            CURRENT_TIMESTAMP(),
            CURRENT_TIMESTAMP(),
            <if test="integralUsed!=null">
                #{integralUsed},
            </if>
            <if test="isRefundIntegral!=null">
                #{isRefundIntegral},
            </if>
            <if test="isRefundCoupon!=null">
                #{isRefundCoupon},
            </if>
        </trim>
    </insert>
    <select id="getByTradesId" resultMap="RefundMap" useCache="false">
                       SELECT
                        r.site_id,
                        r.id,
                        r.operator_id,
                        r.operator_name,
                        r.merchant_id,
                        r.merchant_name,
                        r.pay_style,
                        r.`status`,
                        r.store_id,
                        r.trade_id,
                        r.trade_status,
                        r.real_pay,
                        r.freight,
                        r.apply_refund_money,
                        r.refund_serial_no,
                        r.real_refund_money,
                        r.refund_cash,
                        r.refund_health_insurance,
                        r.is_refund_goods,
                        r.is_refund_integral,
                        r.is_refund_coupon,
                        r.refund_express_no,
                        r.reason,
                        r.`explain`,
                        r.voucher,
                        r.deleted_at,
                        r.refund_time,
                        r.account_checking_status,
                        r.operator_type,
                        r.create_time,
                        r.update_time,
                        te.integral_used,
                        t.deal_finish_status dealFinishStatus
                    FROM
                        b_refund r
                    LEFT JOIN b_trades t ON r.trade_id = t.trades_id
                    AND r.site_id = t.site_id
                    LEFT JOIN b_trades_ext te on t.trades_id = te.trades_id
                    AND t.site_id = te.site_id
                    WHERE
                        r.trade_id =#{1}
                    AND t.site_id =#{0}
                    limit 1
    </select>

    <select id="getByTradesId2" resultMap="RefundMap" >
        SELECT
        r.site_id,
        r.id,
        r.operator_id,
        r.operator_name,
        r.merchant_id,
        r.merchant_name,
        r.pay_style,
        r.`status`,
        r.store_id,
        r.trade_id,
        r.trade_status,
        r.real_pay,
        r.freight,
        r.apply_refund_money,
        r.refund_serial_no,
        r.real_refund_money,
        r.refund_cash,
        r.refund_health_insurance,
        r.is_refund_goods,
        r.is_refund_integral,
        r.is_refund_coupon,
        r.refund_express_no,
        r.reason,
        r.`explain`,
        r.voucher,
        r.deleted_at,
        r.refund_time,
        r.account_checking_status,
        r.operator_type,
        r.create_time,
        r.update_time
        FROM
        b_refund r
        LEFT JOIN b_trades t ON r.trade_id=t.trades_id AND r.site_id=t.site_id
        WHERE r.trade_id =#{tradesId} AND t.site_id =#{siteId} AND r.real_refund_money>0
        limit 1
    </select>

    <select id="getRefundByTradeId" resultMap="RefundMap" >
        SELECT
        site_id,id,operator_id,operator_name,merchant_id,merchant_name,pay_style,`status`,store_id,
        trade_id,trade_status,real_pay,freight,apply_refund_money,refund_serial_no,real_refund_money,
        refund_cash,refund_health_insurance,is_refund_goods,is_refund_integral,is_refund_coupon,refund_express_no,
        reason,`explain`,voucher,deleted_at,refund_time,account_checking_status,operator_type,create_time,update_time
        FROM
        b_refund
        WHERE site_id=#{siteId} AND trade_id=#{tradesId}
    </select>

    <select id="getRefundListByTradesId" resultMap="RefundMap" useCache="false">
        select id,trade_id,real_refund_money from b_refund where trade_id=#{trade_id}
    </select>

    <select id="getTradesRefundList" resultType="java.util.Map" >
        SELECT site_id, trade_id AS trades_id, real_refund_money
        FROM b_refund
        WHERE site_id=#{siteId} AND real_refund_money>0 AND trade_id IN
        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>


    <update id="updateStatus">
        update b_refund b set b.`status`=#{1},b.refund_serial_no=#{2},
        b.update_time=CURRENT_TIMESTAMP(),is_refund_integral=#{4},
        is_refund_coupon=#{3},refund_time=CURRENT_TIMESTAMP(),real_refund_money=#{5} where b.trade_id=#{0}
    </update>
    <update id="refusedStatus">
        update b_refund b set b.`status`=#{1}, b.update_time=CURRENT_TIMESTAMP() where b.trade_id=#{0}
    </update>
    <update id="updateAccountStatus">
        update b_refund set account_checking_status=1,update_time=CURRENT_TIMESTAMP() where trade_id=#{trade_id}
    </update>

    <select id="getRefundListByAccountCheckingStatus" resultMap="RefundMap" useCache="false">
        SELECT
        bf.* FROM	b_refund bf
        LEFT JOIN b_trades bs ON bf.site_id = bs.site_id AND bf.trade_id = bs.trades_id
        WHERE bf.account_checking_status = 0 AND bs.is_service_order = 1
        <if test="siteId!=null">
            AND bf.site_id=#{siteId}
        </if>
    </select>

    <select id="queryRefundList" resultType="com.jk51.model.order.Refund">
        SELECT
        site_id siteId, trades_id tradesId , refund_serial_no refundSerialNo ,
        merchant_name merchantName,trades_status tradeStatus,reason ,refund_time refundTime,
        real_pay realPay,real_refund_money realRefundMoney,apply_refund_money applyRefundMoney,
        pay_style payStyle,refund_time refundTime,create_time creatTime,status
        FROM
        b_refund
        <where>
            site_id=#{refundParams.siteId}
            <if test="refundParams.tradesId!=null and refundParams.tradesId!=''">
                AND trades_id = #{refundParams.tradesId}
            </if>
            <if test="refundParams.refundSerialNo!=null and refundParams.refundSerialNo!=''">
                AND refund_serial_no = #{refundParams.refundSerialNo}
            </if>
            <if test="refundParams.merchantName!=null and refundParams.merchantName!=''">
                AND merchant_name = #{refundParams.merchantName}
            </if>
            <if test="refundParams.tradeStatus!=null and refundParams.tradeStatus!=''">
                AND trades_status = #{refundParams.tradeStatus}
            </if>
            <if test="refundParams.reason!=null and refundParams.reason!=''">
                AND reason = #{refundParams.reason}
            </if>
            <if test="refundParams.refundTime!=null and refundParams.refundTime!=''">
                AND refund_time = #{refundParams.refundTime}
            </if>
        </where>
    </select>

    <!--+++++++++++++++++++++++++++++++++++++++++++++   mapper迁移  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <resultMap id="refundResultMap" type="com.jk51.model.order.Refund" >
        <id column="site_id" property="siteId" jdbcType="INTEGER" />
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="operator_id" property="operatorId" />
        <result column="operator_name" property="operatorName" />
        <result column="merchant_id" property="merchantId" />
        <result column="merchant_name" property="merchantName" />
        <result column="pay_style" property="payStyle" />
        <result column="store_id" property="storeId" />
        <result column="trade_id" property="tradeId" />
        <result column="trade_status" property="tradeStatus" />
        <result column="real_pay" property="realPay" />
        <result column="apply_refund_money" property="applyRefundMoney" />
        <result column="refund_serial_no" property="refundSerialNo" />
        <result column="real_refund_money" property="realRefundMoney" />
        <result column="refund_cash" property="refundCash" />
        <result column="refund_health_insurance" property="refundHealthInsurance" />
        <result column="is_refund_goods" property="isRefundGoods" />
        <result column="refund_express_no" property="refundExpressNo" />
        <result column="deleted_at" property="deletedAt" />
        <result column="refund_time" property="refundTime" />
        <result column="account_checking_status" property="accountCheckingStatus" />
        <result column="operator_type" property="operatorType" />
        <result column="buyer_id" property="buyerId"/>
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    <select id="getRefundList" parameterType="com.jk51.model.order.response.RefundQueryReq" resultMap="refundResultMap" useCache="false" flushCache="false">
        SELECT
        r.site_id,
        r.id,
        r.operator_id,
        r.operator_name,
        r.merchant_id,
        r.merchant_name,
        r.pay_style,
        r.status,
        r.store_id,
        r.trade_id,
        r.trade_status,
        r.real_pay,
        r.freight,
        r.apply_refund_money,
        r.refund_serial_no,
        r.real_refund_money,
        r.refund_cash,
        r.refund_health_insurance,
        r.is_refund_goods,
        r.refund_express_no,
        r.reason,
        r.explain,
        r.voucher,
        r.deleted_at,
        r.refund_time,
        r.account_checking_status,
        r.operator_type,
        r.create_time,
        r.update_time,
        t.buyer_id,b.mobile,t.trades_status tradesStatuss
        FROM b_refund r LEFT JOIN b_trades t on r.trade_id=t.trades_id
        left join b_member b on (t.buyer_id=b.buyer_id and t.site_id=b.site_id)

        <where>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.siteId)">r.site_id=#{refundQueryReq.siteId}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.storeId)">AND r.store_id=#{refundQueryReq.storeId}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.tradeId)">AND r.trade_id=#{refundQueryReq.tradeId}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.refundType)">AND r.operator_type=#{refundQueryReq.refundType}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.refundStatus)">AND r.status=#{refundQueryReq.refundStatus}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.createTimeStart)">AND r.create_time <![CDATA[ >= ]]> #{refundQueryReq.createTimeStart}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.createTimeEnd)">AND r.create_time <![CDATA[ <= ]]> ADDDATE(#{refundQueryReq.createTimeEnd},1)</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.sellerName)">AND r.merchant_name=#{refundQueryReq.sellerName}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.refundSerialNo)">AND r.refund_serial_no=#{refundQueryReq.refundSerialNo}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.mobile)">AND b.mobile=#{refundQueryReq.mobile}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.reason) and refundQueryReq.reason!='请选择' ">AND r.reason=#{refundQueryReq.reason}</if>

        </where>
        ORDER BY r.create_time desc
    </select>

    <select id="refundList" parameterType="com.jk51.model.order.response.RefundQueryReq" resultMap="refundResultMap">
        SELECT
        r.site_id,
        r.id,
        r.operator_id,
        r.operator_name,
        r.merchant_id,
        r.merchant_name,
        r.pay_style,
        r.status,
        r.store_id,
        r.trade_id,
        r.trade_status,
        r.real_pay,
        r.freight,
        r.apply_refund_money,
        r.refund_serial_no,
        r.real_refund_money,
        r.refund_cash,
        r.refund_health_insurance,
        r.is_refund_goods,
        r.refund_express_no,
        r.reason,
        r.explain,
        r.voucher,
        r.deleted_at,
        r.refund_time,
        r.account_checking_status,
        r.operator_type,
        r.create_time,
        r.update_time,
        t.buyer_id,b.mobile
        FROM b_refund r LEFT JOIN b_trades t on r.trade_id=t.trades_id
        left join b_member b on (t.buyer_id=b.buyer_id and t.site_id=b.site_id)

        <where>

            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.storeId)">AND r.store_id=#{refundQueryReq.storeId}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.tradeId)">AND r.trade_id=#{refundQueryReq.tradeId}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.refundType)">AND r.operator_type=#{refundQueryReq.refundType}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.refundStatus)">AND r.status=#{refundQueryReq.refundStatus}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.createTimeStart)">AND r.create_time <![CDATA[ >= ]]> #{refundQueryReq.createTimeStart}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.createTimeEnd)">AND r.create_time <![CDATA[ <= ]]> #{refundQueryReq.refundStatus}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.sellerName)">AND r.merchant_name=#{refundQueryReq.sellerName}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.refundSerialNo)">AND r.refund_serial_no=#{refundQueryReq.refundSerialNo}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.mobile)">AND b.mobile=#{refundQueryReq.mobile}</if>

        </where>
        order by b.create_time desc
    </select>


    <select id="getRefundById" parameterType="com.jk51.model.order.response.RefundQueryReq" resultMap="refundResultMap">
        SELECT * FROM b_refund
        <where>
            site_id=#{refundQueryReq.siteId}
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.storeId)">AND store_id=#{refundQueryReq.storeId}</if>
            <if test="@com.jk51.commons.string.StringUtil@isNotEmpty(refundQueryReq.tradeId)">AND trade_Id=#{refundQueryReq.tradeId}</if>
        </where>
    </select>
    <select id="getTradesRealPayTotal" resultType="com.jk51.model.order.Trades">
        select t.site_id,c.finance_type,sum(real_pay) - sum(t.trades_split) - sum(t.plat_split) - sum(case when is_refund = 120 then real_pay else 0 end) as realPay
        from b_trades t
       LEFT JOIN yb_settlementday_config c on t.site_id = c.site_id
        LEFT JOIN b_migrate m on t.site_id = m.site_id
        <where> t.site_id=#{siteId}
              and t.is_payment = 1 and t.pay_style in ('wx','ali') and (t.finance_no is null or t.finance_no = '')
              and IFNULL(m.create_time,'0000:00:00 00:00:00') <![CDATA[ <= ]]> t.create_time
        </where>
        GROUP BY t.site_id,c.finance_type
    </select>

    <update id="updateFinanceNo">
        update b_refund set finance_no=#{financesNo} where trade_id=#{tradesId}
    </update>

    <select id="getRefunds" resultType="com.jk51.model.account.models.SettlementDetailAndTrades">
        SELECT r.trade_id trades_id,r.pay_style,r.real_refund_money refund_fee,r.`status` is_refund,t.finance_no,t.deal_finish_status,t.site_id seller_id,t.trades_status,
               t.create_time,t.is_payment,t.pay_time,t.end_time,
               CASE WHEN t.finance_no='' OR t.finance_no IS NULL THEN t.real_pay ELSE 0 END real_pay,
			   CASE WHEN t.finance_no='' OR t.finance_no IS NULL THEN t.plat_split ELSE 0 END plat_split,
			   CASE WHEN t.finance_no='' OR t.finance_no IS NULL THEN t.trades_split ELSE 0 END trades_split,
			   CASE WHEN t.finance_no='' OR t.finance_no IS NULL THEN t.O2O_freight ELSE 0 END O2O_freight,
			   0 platform_refund_fee,
			   0 platform_payment_amount
          FROM b_trades t LEFT JOIN b_refund r ON t.trades_id= r.trade_id
          WHERE r.site_id = #{seller_id,jdbcType=INTEGER }
                                AND r.`status` = 120
                                AND (t.finance_no_refund='' OR t.finance_no_refund IS NULL)
                                AND (r.refund_time BETWEEN #{startDate,jdbcType=TIMESTAMP} AND #{endDate,jdbcType=TIMESTAMP})
    </select>

    <!--指定服务门店时，修改store_id-->
    <update id="updateRefundStoreId">
        update b_refund set store_id=#{store_id} where trade_id=#{trades_id}
    </update>

    <select id="getRefundByTradesId" resultMap="RefundMap" >
        SELECT real_refund_money,refund_time
        FROM b_refund
        WHERE trade_id=#{tradesId}
    </select>

</mapper>
