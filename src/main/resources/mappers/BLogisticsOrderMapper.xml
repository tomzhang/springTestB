<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk51.modules.tpl.mapper.BLogisticsOrderMapper" >
  <resultMap id="BaseResultMap" type="com.jk51.model.BLogisticsOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <id column="site_id" property="siteId" jdbcType="INTEGER" />
    <result column="waybill_number" property="waybillNumber" jdbcType="VARCHAR" />
    <result column="order_number" property="orderNumber" jdbcType="BIGINT" />
    <result column="logistics_id" property="logisticsId" jdbcType="INTEGER" />
    <result column="logistics_name" property="logisticsName" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="store_name" property="storeName" jdbcType="VARCHAR" />
    <result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
    <result column="order_amount" property="orderAmount" jdbcType="INTEGER" />
    <result column="distribution_distance" property="distributionDistance" jdbcType="INTEGER" />
    <result column="total_fee" property="totalFee" jdbcType="INTEGER" />
    <result column="total_weight" property="totalWeight" jdbcType="INTEGER" />
    <result column="starting_fare" property="startingFare" jdbcType="INTEGER" />
    <result column="surpass_distance_fare" property="surpassDistanceFare" jdbcType="INTEGER" />
    <result column="overweight_charge_fare" property="overweightChargeFare" jdbcType="INTEGER" />
    <result column="overtime_fare" property="overtimeFare" jdbcType="INTEGER" />
    <result column="chargeback_fare" property="chargebackFare" jdbcType="INTEGER" />
    <result column="diliveryman" property="diliveryman" jdbcType="VARCHAR" />
    <result column="distribution_phone" property="distributionPhone" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="error_code" property="errorCode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="operator_id" property="operatorId" jdbcType="INTEGER" />
    <result column="notify_mobile" property="notifyMobile" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, site_id, waybill_number, order_number, logistics_id, logistics_name, province, 
    city, store_id, store_name, order_time, order_amount, distribution_distance, total_fee, 
    total_weight, starting_fare, surpass_distance_fare, overweight_charge_fare, overtime_fare, 
    chargeback_fare, diliveryman, distribution_phone, status, error_code, create_time, 
    update_time, operator_id, notify_mobile
  </sql>

  <update id="updateStatusEq5" >
    update b_logistics_order
    set status = #{status}
    where order_number = #{orderNumber} AND status != 5
            <if test="siteId != null and siteId !=''" >
              and site_id = #{siteId}
            </if>
  </update>


  <select id="selectByTradesId" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from b_logistics_order
    where order_number = #{orderNumber,jdbcType=INTEGER}
    limit 1
  </select>

  <select id="getTradesLogisticsList" resultType="java.util.Map">
    select site_id, order_number AS trades_id, logistics_name, `status`
    from b_logistics_order
    where site_id=#{siteId} AND order_number IN
    <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>


  <select id="selectByTradesIdList" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from b_logistics_order
    where order_number = #{orderNumber,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from b_logistics_order
    where id = #{id,jdbcType=INTEGER}
      and site_id = #{siteId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" >
    delete from b_logistics_order
    where id = #{id,jdbcType=INTEGER}
      and site_id = #{siteId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jk51.model.BLogisticsOrder" >
    insert into b_logistics_order (id, site_id, waybill_number, 
      order_number, logistics_id, logistics_name, 
      province, city, store_id, 
      store_name, order_time, order_amount, 
      distribution_distance, total_fee, total_weight, 
      starting_fare, surpass_distance_fare, overweight_charge_fare, 
      overtime_fare, chargeback_fare, diliveryman, 
      distribution_phone, status, error_code, 
      create_time, update_time, operator_id, 
      notify_mobile)
    values (#{id,jdbcType=INTEGER}, #{siteId,jdbcType=INTEGER}, #{waybillNumber,jdbcType=VARCHAR}, 
      #{orderNumber,jdbcType=BIGINT}, #{logisticsId,jdbcType=INTEGER}, #{logisticsName,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{storeId,jdbcType=INTEGER}, 
      #{storeName,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP}, #{orderAmount,jdbcType=INTEGER}, 
      #{distributionDistance,jdbcType=INTEGER}, #{totalFee,jdbcType=INTEGER}, #{totalWeight,jdbcType=INTEGER}, 
      #{startingFare,jdbcType=INTEGER}, #{surpassDistanceFare,jdbcType=INTEGER}, #{overweightChargeFare,jdbcType=INTEGER}, 
      #{overtimeFare,jdbcType=INTEGER}, #{chargebackFare,jdbcType=INTEGER}, #{diliveryman,jdbcType=VARCHAR}, 
      #{distributionPhone,jdbcType=BIGINT}, #{status,jdbcType=TINYINT}, #{errorCode,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{operatorId,jdbcType=INTEGER}, 
      #{notifyMobile,jdbcType=BIGINT})
  </insert>
  <insert id="insertLog" parameterType="java.util.Map" >
    insert into b_logistics_log (id, site_id, waybill_number,
    order_number, status, inform_time,description)
    values (#{id,jdbcType=INTEGER}, #{siteId,jdbcType=INTEGER}, #{waybillNumber,jdbcType=VARCHAR},
    #{orderNumber,jdbcType=BIGINT},  #{status,jdbcType=TINYINT},CURRENT_TIMESTAMP() ,#{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertLogWithTime" parameterType="java.util.Map" >
    insert into b_logistics_log (id, site_id, waybill_number,
    order_number, status, inform_time,description)
    values (#{id,jdbcType=INTEGER}, #{siteId,jdbcType=INTEGER}, #{waybillNumber,jdbcType=VARCHAR},
    #{orderNumber,jdbcType=BIGINT},  #{status,jdbcType=DATE},#{time, jdbcType=TIMESTAMP} ,#{description,jdbcType=VARCHAR})
  </insert>
  <select id="selectByTradesIdLog" resultType="java.util.Map"  >
    select
    id, site_id as siteId, waybill_number as waybillNumber,
    order_number as orderNumber, status, inform_time as orderTime,description
    from b_logistics_log
    where order_number = #{orderNumber,jdbcType=INTEGER} group by status order by inform_time desc
  </select>
  <insert id="insertSelective" parameterType="com.jk51.model.BLogisticsOrder" >
    insert into b_logistics_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="siteId != null" >
        site_id,
      </if>
      <if test="waybillNumber != null" >
        waybill_number,
      </if>
      <if test="orderNumber != null" >
        order_number,
      </if>
      <if test="logisticsId != null" >
        logistics_id,
      </if>
      <if test="logisticsName != null" >
        logistics_name,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="storeName != null" >
        store_name,
      </if>
      <if test="orderTime != null" >
        order_time,
      </if>
      <if test="orderAmount != null" >
        order_amount,
      </if>
      <if test="distributionDistance != null" >
        distribution_distance,
      </if>
      <if test="totalFee != null" >
        total_fee,
      </if>
      <if test="totalWeight != null" >
        total_weight,
      </if>
      <if test="startingFare != null" >
        starting_fare,
      </if>
      <if test="surpassDistanceFare != null" >
        surpass_distance_fare,
      </if>
      <if test="overweightChargeFare != null" >
        overweight_charge_fare,
      </if>
      <if test="overtimeFare != null" >
        overtime_fare,
      </if>
      <if test="chargebackFare != null" >
        chargeback_fare,
      </if>
      <if test="diliveryman != null" >
        diliveryman,
      </if>
      <if test="distributionPhone != null" >
        distribution_phone,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="errorCode != null" >
        error_code,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="notifyMobile != null" >
        notify_mobile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="siteId != null" >
        #{siteId,jdbcType=INTEGER},
      </if>
      <if test="waybillNumber != null" >
        #{waybillNumber,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=BIGINT},
      </if>
      <if test="logisticsId != null" >
        #{logisticsId,jdbcType=INTEGER},
      </if>
      <if test="logisticsName != null" >
        #{logisticsName,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="storeName != null" >
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null" >
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null" >
        #{orderAmount,jdbcType=INTEGER},
      </if>
      <if test="distributionDistance != null" >
        #{distributionDistance,jdbcType=INTEGER},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="totalWeight != null" >
        #{totalWeight,jdbcType=INTEGER},
      </if>
      <if test="startingFare != null" >
        #{startingFare,jdbcType=INTEGER},
      </if>
      <if test="surpassDistanceFare != null" >
        #{surpassDistanceFare,jdbcType=INTEGER},
      </if>
      <if test="overweightChargeFare != null" >
        #{overweightChargeFare,jdbcType=INTEGER},
      </if>
      <if test="overtimeFare != null" >
        #{overtimeFare,jdbcType=INTEGER},
      </if>
      <if test="chargebackFare != null" >
        #{chargebackFare,jdbcType=INTEGER},
      </if>
      <if test="diliveryman != null" >
        #{diliveryman,jdbcType=VARCHAR},
      </if>
      <if test="distributionPhone != null" >
        #{distributionPhone,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="errorCode != null" >
        #{errorCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="notifyMobile != null" >
        #{notifyMobile,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk51.model.BLogisticsOrder" >
    update b_logistics_order
    <set >
      <if test="waybillNumber != null" >
        waybill_number = #{waybillNumber,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null" >
        order_number = #{orderNumber,jdbcType=BIGINT},
      </if>
      <if test="logisticsId != null" >
        logistics_id = #{logisticsId,jdbcType=INTEGER},
      </if>
      <if test="logisticsName != null" >
        logistics_name = #{logisticsName,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="storeName != null" >
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null" >
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null" >
        order_amount = #{orderAmount,jdbcType=INTEGER},
      </if>
      <if test="distributionDistance != null" >
        distribution_distance = #{distributionDistance,jdbcType=INTEGER},
      </if>
      <if test="totalFee != null" >
        total_fee = #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="totalWeight != null" >
        total_weight = #{totalWeight,jdbcType=INTEGER},
      </if>
      <if test="startingFare != null" >
        starting_fare = #{startingFare,jdbcType=INTEGER},
      </if>
      <if test="surpassDistanceFare != null" >
        surpass_distance_fare = #{surpassDistanceFare,jdbcType=INTEGER},
      </if>
      <if test="overweightChargeFare != null" >
        overweight_charge_fare = #{overweightChargeFare,jdbcType=INTEGER},
      </if>
      <if test="overtimeFare != null" >
        overtime_fare = #{overtimeFare,jdbcType=INTEGER},
      </if>
      <if test="chargebackFare != null" >
        chargeback_fare = #{chargebackFare,jdbcType=INTEGER},
      </if>
      <if test="diliveryman != null" >
        diliveryman = #{diliveryman,jdbcType=VARCHAR},
      </if>
      <if test="distributionPhone != null" >
        distribution_phone = #{distributionPhone,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="errorCode != null" >
        error_code = #{errorCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="notifyMobile != null" >
        notify_mobile = #{notifyMobile,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and site_id = #{siteId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk51.model.BLogisticsOrder" >
    update b_logistics_order
    set waybill_number = #{waybillNumber,jdbcType=VARCHAR},
      order_number = #{orderNumber,jdbcType=BIGINT},
      logistics_id = #{logisticsId,jdbcType=INTEGER},
      logistics_name = #{logisticsName,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      store_name = #{storeName,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      order_amount = #{orderAmount,jdbcType=INTEGER},
      distribution_distance = #{distributionDistance,jdbcType=INTEGER},
      total_fee = #{totalFee,jdbcType=INTEGER},
      total_weight = #{totalWeight,jdbcType=INTEGER},
      starting_fare = #{startingFare,jdbcType=INTEGER},
      surpass_distance_fare = #{surpassDistanceFare,jdbcType=INTEGER},
      overweight_charge_fare = #{overweightChargeFare,jdbcType=INTEGER},
      overtime_fare = #{overtimeFare,jdbcType=INTEGER},
      chargeback_fare = #{chargebackFare,jdbcType=INTEGER},
      diliveryman = #{diliveryman,jdbcType=VARCHAR},
      distribution_phone = #{distributionPhone,jdbcType=BIGINT},
      status = #{status,jdbcType=TINYINT},
      error_code = #{errorCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      operator_id = #{operatorId,jdbcType=INTEGER},
      notify_mobile = #{notifyMobile,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
      and site_id = #{siteId,jdbcType=INTEGER}
  </update>

  <select id="queryByOrderNumber" resultMap="BaseResultMap">
    select * from b_logistics_order where order_number = #{orderNumber} limit 1
  </select>

  <select id="queryTrade" parameterType="String" resultType="String" useCache="false">
    select assigned_stores as storeId from b_trades where trades_id = #{tradesId} limit 1
  </select>
  <update id="updateByWayBill" >
    update b_logistics_order
    set order_number = #{orderNumber}
    where site_id=#{siteId} and id = #{id}
  </update>

  <update id="hideRecord" >
    update b_logistics_order
    set order_number = CONCAT('-', order_number)
    where site_id = #{siteId}
    and order_number = #{orderNumber}
  </update>

  <update id="hideRecordLog" >
    update b_logistics_log
    set order_number = CONCAT('-', order_number)
    where site_id = #{siteId}
    and order_number = #{orderNumber}
  </update>

  <update id="updateTradeso2o" >
    update b_trades
    set O2O_freight = null
    where trades_id =  #{tradesId}
  </update>

  <select id="queryYesterdayBadLogisticOrder">
    select b.trades_id as trades_id,b.finance_no,a.status,a.create_time from b_logistics_order a left join b_trades b on a.site_id = b.site_id and a.order_number = b.trades_id
    where b.finance_no='' and a.status !=5 and to_days(now())-to_days(a.create_time) =1
  </select>
</mapper>
