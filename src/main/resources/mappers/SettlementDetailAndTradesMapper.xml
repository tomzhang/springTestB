<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jk51.modules.account.mapper.SettlementDetailAndTradesMapper">

    <sql id="whereForAccountRemit">
            1=1 and p.data_type = 3 and p.trades_status in ('在线支付','退费','交易退款','收费','SUCCESS','REFUND','REVOKED')
            <if test="account_remit.payStartTime!=null and account_remit.payStartTime!=''">
                AND p.pay_time <![CDATA[ >= ]]> CONCAT( #{account_remit.payStartTime},' 00:00:00')
            </if>
            <if test="account_remit.payEndTime!=null and account_remit.payEndTime!=''">
                AND p.pay_time <![CDATA[ <= ]]> CONCAT( #{account_remit.payEndTime},' 23:59:59')
            </if>
            <if test="account_remit.merchantId!=null and account_remit.merchantId!=''">
                AND m.merchant_id=#{account_remit.merchantId}
            </if>
            <if test="account_remit.merchantName!=null and account_remit.merchantName!=''">
                AND m.merchant_name like concat('%',#{account_remit.merchantName},'%')
            </if>
            <if test="account_remit.tradesId!=null and account_remit.tradesId!=''">
                AND t.trades_id = #{account_remit.tradesId}
            </if>
            <if test="account_remit.payNumber!=null and account_remit.payNumber!=''">
                AND p.business_order_sn = #{account_remit.payNumber}
            </if>
            <if test="account_remit.payStyle!=null and account_remit.payStyle!=''">
                AND p.pay_style = #{account_remit.payStyle}
            </if>
            <if test="account_remit.accountCheckingStatus==1">
                AND t.settlement_status = '250' and fi.STATUS > 100
            </if>
            <if test="account_remit.accountCheckingStatus==2">
                AND (t.settlement_status = '150' OR t.settlement_status = '200' OR (t.settlement_status = '250' AND (fi.STATUS &lt;= 100 OR fi.STATUS IS NULL )) )
            </if>
            <if test="account_remit.accountCheckingStatus==0">
                AND t.settlement_status = '100'
            </if>

            <if test="account_remit.accountStatus == 1">
                AND p.account_status = '1'
            </if>
    </sql>

    <sql id="whereForSettlementDetail">
            1=1
            <if test="account_params.site_id!=null and account_params.site_id!=''">
                AND b.site_id = #{account_params.site_id}
            </if>
<!--            <if test="account_params.sellerId!=null and account_params.sellerId!=''">
                AND b.seller_id = #{account_params.sellerId}
            </if>-->
            <if test="account_params.payType!=null and account_params.payType!=''">
                AND b.pay_style = #{account_params.payType}
            </if>

            <if test="account_params.serviceOrder!=null and account_params.serviceOrder!=''">
                AND b.is_service_order = #{account_params.serviceOrder}
            </if>

            <if test="account_params.accountStatus ==0">
                AND (b.finance_no is null or b.finance_no = '')
            </if>
            <if test="account_params.accountStatus == 1">
                AND (b.finance_no  is not null  and b.finance_no!='')
            </if>
            <if test="account_params.checkStatus== 0">
                AND (a.account_checking_status=0 or a.account_checking_status IS NULL)
            </if>
            <if test="account_params.checkStatus==1 ">
                AND ((a.account_checking_status=1 and a.refund_checking_status=-1 and b.is_refund !=120)
                or (a.refund_checking_status=1)
                or (a.account_checking_status=1 and a.refund_checking_status=1 and b.is_refund=120))
            </if>
            <if test="account_params.checkStatus==2 ">
                AND((a.account_checking_status=0 and a.refund_checking_status=0)
                or (a.account_checking_status=1 and a.refund_checking_status=0)
                or(a.account_checking_status=1 and a.refund_checking_status=-1 and b.is_refund=120)
                or (a.account_checking_status=2 and  a.refund_checking_status=-1)
                or(a.account_checking_status=2 and  a.refund_checking_status=1)
                )
            </if>
            <if test="account_params.tradesId!=null and account_params.tradesId!=''">
                AND b.trades_id = #{account_params.tradesId}
            </if>
            <if test="account_params.payNumber!=null and account_params.payNumber!=''">
                AND b.pay_number = #{account_params.payNumber}
            </if>

            <if test="account_params.refundStatus!=null and account_params.refundStatus!='' and account_params.refundStatus!=0">
                AND b.is_refund = #{account_params.refundStatus}
            </if>
            <if test="account_params.settlementStatus==100 ">
                AND b.settlement_status = #{account_params.settlementStatus}
            </if>
            <if test="account_params.settlementStatus==150">
                AND (b.settlement_status = #{account_params.settlementStatus} OR b.settlement_status = '200' or(b.settlement_status = '250' AND (f.STATUS &lt;= 100 OR f.STATUS IS NULL)))
            </if>
            <if test="account_params.settlementStatus==200 ">
                AND b.settlement_status !=100
            </if>
            <if test="account_params.settlementStatus==250">
                AND b.settlement_status = '250' AND f.STATUS > 100
            </if>

            <if test="account_params.orderStartTime!=null and account_params.orderStartTime!=''">
                AND b.create_time <![CDATA[ >= ]]> CONCAT(#{account_params.orderStartTime},' 00:00:00')
            </if>

            <if test="account_params.orderEndTime!=null and account_params.orderEndTime!=''">
                AND b.create_time <![CDATA[ <= ]]> CONCAT( #{account_params.orderEndTime},' 23:59:59')
            </if>

            <if test="account_params.dealStartTime!=null and account_params.dealStartTime!=''">
                AND b.end_time <![CDATA[ >= ]]> CONCAT(#{account_params.dealStartTime},' 00:00:00')
            </if>
            <if test="account_params.dealEndTime!=null and account_params.dealEndTime!=''">
                AND b.end_time <![CDATA[ <= ]]> CONCAT(#{account_params.dealEndTime},' 23:59:59')
            </if>
            <if test="account_params.paymentStartTime!=null and account_params.paymentStartTime!=''">
                AND b.pay_time <![CDATA[ >= ]]> CONCAT( #{account_params.paymentStartTime},' 00:00:00')
            </if>
            <if test="account_params.paymentEndTime!=null and account_params.paymentEndTime!=''">
                AND b.pay_time <![CDATA[ <= ]]> CONCAT( #{account_params.paymentEndTime},' 23:59:59')
            </if>
            <if test="account_params.merchantName!=null and account_params.merchantName!=''">
                AND m.merchant_name like concat('%',#{account_params.merchantName},'%')
            </if>
    </sql>
    <sql id="whereForStore">
        1=1
        <if test="site_id!=null and site_id!=''">
            AND b.site_id = #{site_id}
        </if>
        <if test="tradesStore!=null and tradesStore!=''">
            AND (sa.`name`=#{tradesStore}
        </if>
        <if test="tradesStore!=null and tradesStore!=''">
            or sb.`name`=#{tradesStore}
        </if>
        <if test="tradesStore!=null and tradesStore!=''">
            or sc.`name`=#{tradesStore}
        </if>
        <if test="tradesStore!=null and tradesStore!=''">
            or g.`name`=#{tradesStore})
        </if>
        <if test="sellerName!=null and sellerName!=''">
            AND b.seller_nick LIKE '%#{sellerName}%'
        </if>
        <if test="sellerId!=null and sellerId!=''">
            AND b.seller_id = #{sellerId}
        </if>
        <if test="payType!=null and payType!=''">
            AND b.pay_style = #{payType}
        </if>
        <if test="accountStatus!=null and accountStatus!=''">
            AND a.summary_status = #{accountStatus}
        </if>
        <if test="checkStatus!=null and checkStatus!=''">
            AND a.account_checking_status = #{checkStatus}
        </if>
        <if test="tradesId!=null and tradesId!=''">
            AND b.trades_id = #{tradesId}
        </if>
        <if test="payNumber!=null and payNumber!=''">
            AND b.pay_number = #{payNumber}
        </if>

        <if test="refundStatus!=null and refundStatus!='' and refundStatus!=0">
            AND b.is_refund = #{refundStatus}
        </if>
        <if test="settlementStatus==100 ">
            AND b.settlement_status = #{settlementStatus}
        </if>
        <if test="settlementStatus==150">
            AND (b.settlement_status = #{settlementStatus} OR b.settlement_status = '200' or (b.settlement_status = '250' and (f.STATUS &lt;= 100 OR f.STATUS IS NULL)))
        </if>
        <if test="settlementStatus==250">
            AND b.settlement_status = '250' AND f.STATUS > 100
        </if>


        <if test="orderStartTime!=null and orderStartTime!=''">
            AND b.create_time <![CDATA[ >= ]]> #{orderStartTime}
        </if>

        <if test="orderEndTime!=null and orderEndTime!=''">
            AND b.create_time <![CDATA[ <= ]]> #{orderEndTime}
        </if>

        <if test="dealStartTime!=null and dealStartTime!=''">
            AND b.end_time <![CDATA[ >= ]]> #{dealStartTime}
        </if>
        <if test="dealEndTime!=null and dealEndTime!=''">
            AND b.end_time <![CDATA[ <= ]]> #{dealEndTime}
        </if>
        <if test="paymentStartTime!=null and paymentStartTime!=''">
            AND b.pay_time <![CDATA[ >= ]]> #{paymentStartTime}
        </if>
        <if test="paymentEndTime!=null and paymentEndTime!=''">
            AND b.pay_time <![CDATA[ <= ]]> #{paymentEndTime}
        </if>
    </sql>
    <select id="getSettlementListByTradesId" resultType="com.jk51.model.account.models.SettlementDetailAndTrades"
            useCache="false">
  SELECT
        CASE WHEN trades.finance_no IS NULL OR trades.finance_no ='' THEN trades.real_pay ELSE 0 END real_pay,
		CASE WHEN trades.finance_no IS NULL OR trades.finance_no ='' THEN IFNULL(trades.trades_split,0) ELSE 0 END trades_split,
		CASE WHEN trades.finance_no IS NULL OR trades.finance_no ='' THEN IFNULL(trades.plat_split,0) ELSE 0 END plat_split,
		IFNULL(trades.O2O_freight,0) O2O_freight,
		CASE WHEN trades.is_refund=120 THEN IFNULL(trades.refund_fee,0) ELSE 0 END refund_fee,
        trades.*,detail.pay_style,detail.account_checking_status,
        detail.finance_no,
        IFNULL(detail.platform_refund_fee,0) platform_refund_fee,
        detail.refund_checking_status,
        IFNULL(detail.platform_payment_amount,0) platform_payment_amount
        FROM b_trades trades
        LEFT JOIN yb_settlement_detail detail ON detail.trades_id = trades.trades_id
        LEFT JOIN b_migrate m ON trades.seller_id=m.site_id
        WHERE
        trades.site_id = #{seller_id,jdbcType=INTEGER }
        AND trades.is_service_order = 0
        AND (trades.settlement_status =150 OR trades.settlement_status =200)
        AND (trades.finance_no_refund IS NULL  OR trades.finance_no_refund='')
        AND (trades.trades_status in(140,150,210,220,230,240,800) or (trades.trades_status=900 and trades.is_refund=120))
        AND trades.deal_finish_status=1
        and trades.is_payment=1
        AND trades.end_time
        BETWEEN #{startDate,jdbcType=TIMESTAMP} AND #{endDate,jdbcType=TIMESTAMP}
        AND trades.create_time>IFNULL(m.create_time,'0000-00-00 00:00:00')
        AND #{endDate,jdbcType=TIMESTAMP}  <![CDATA[ < ]]> CURRENT_DATE


    </select>
    <select id="getSettlementListByObj" resultType="java.util.Map">
        select a.account_checking_status as settlement_account_checking,a.business_types,b.finance_no financeNos,a.summary_status,
        IFNULL(b.refund_fee,0) refund_fee,a.refund_checking_status,a.platform_payment_amount,a.platform_fashionable_amount,a.platform_service_fee,
        a.platform_refund_fee,a.create_time,a.account_status,a.rate,a.remit_acount_time,b.trades_id,b.site_id,b.seller_nick,
        b.pay_number,b.end_time,b.trades_split,b.O2O_freight,b.settlement_status,b.settlement_final_time,
        b.is_payment,b.account_checking_status,b.pay_style,b.settlement_type,b.deal_finish_status,b.real_pay real_pay1,b.finance_no financenoss,
        case
        when (a.account_checking_status=0 OR a.account_checking_status IS NULL) then '未对账'
        when  ((a.account_checking_status=1 and a.refund_checking_status=-1 and b.deal_finish_status=1 and b.is_refund=0)
        or (a.account_checking_status=1 and a.refund_checking_status=-1 and b.deal_finish_status=1 and b.is_refund=110)
        or (a.refund_checking_status=1)
        or (a.account_checking_status=1 and a.refund_checking_status=1 and b.deal_finish_status=1 and b.is_refund=120)) then '对账成功'
        ELSE '对账失败'
        end account_statuss,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN 0.00
        ELSE format(b.real_pay/100,2) END real_payss,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN 0.00
        ELSE format(IFNULL(b.refund_fee,0)/100,2) END refund_feess,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN 0.00
        ELSE IFNULL(b.refund_fee,0) END refund_fees,
        case  b.pay_style
        WHEN 'wx' THEN '微信'
        when 'cash' then '现金'
        when 'ali' then '支付宝'
        when 'health_insurance' then '医保'
        when  'unionPay' then '银联'
        WHEN 'bil' THEN '快钱'
        ELSE '---'end pay_style_intro,
        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_payment_amount/100,2)
        when 'cash' then '---'
        when 'ali' then format(a.platform_payment_amount/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then format(a.platform_payment_amount/100,2)
        WHEN 'bil' THEN format(a.platform_payment_amount/100,2)
        ELSE '---'end  daishoujine,
        CASE f.finance_no
        when  null then '未出账' ELSE '已出账' end chargeStatus,
        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_refund_fee/100,2)
        when 'cash' then '---'
        when 'ali' then format(a.platform_refund_fee/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then format(a.platform_refund_fee/100,2)
        WHEN 'bil' THEN format(a.platform_refund_fee/100,2)
        ELSE '---'end  daituijine,
        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_service_fee/100,2)
        when 'cash' then '---'
        when 'ali' then  format(a.platform_service_fee/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then  format(a.platform_service_fee/100,2)
        WHEN 'bil' THEN  format(a.platform_service_fee/100,2)
        ELSE '---'end  daishoushouxufei,
        case when b.settlement_type=0
        then format(IFNULL(b.trades_split, 0) / 100,2)
        end zhixiaoyongjin,
        case when b.settlement_type=1
        then format(IFNULL(b.trades_split, 0) / 100,2)
        end fenxiaoyongjin,
        CASE f.finance_no
        when  null then '未出账' ELSE '已出账' end chargestatuss,
        format(IFNULL(b.trades_split,0)/100,2) As jiaoyiyongjin,
        format(IFNULL(b.O2O_freight,0)/100,2) As daishoupeisongfei,
        format(IFNULL(b.plat_split,0)/100,2) As shoufei,
        format(IFNULL(b.refund_fee,0)/100,2) real_refund_money,
        IFNULL(f.pay_day,'---') pay_day,
        b.plat_split,
        b.O2O_freight AS peisongfei,
        case b.settlement_type
        WHEN '0'THEN '直销'
        WHEN '1' THEN '分销'
        WHEN  '2' THEN  '预存金'
        ELSE  '---' end settlement_types,
        CASE
        WHEN b.settlement_status = '100' THEN '不结算'
        WHEN b.settlement_status = '150' OR b.settlement_status = '200' THEN '待结算'
        WHEN b.settlement_status = '250' and f.STATUS > 100 THEN '已结算'
        WHEN b.settlement_status = '250' and (f.STATUS <![CDATA[ <= ]]> 100 OR f.STATUS IS NULL) THEN '待结算'
        ELSE '其他'
        END settlement_statuss,
        CASE f.status
        WHEN '0' THEN '未处理'
        WHEN '100' THEN '未支付'
        WHEN '110' THEN '延期支付'
        WHEN '200' THEN '支付部分'
        WHEN '900' THEN '已结清'
        ELSE '---' end fstatus,
        CASE b.deal_finish_status
        WHEN '0' THEN '交易进行中'
        WHEN '1' THEN '交易结束'
        ELSE '---' end dealfinishstatus,
        CASE b.trades_status
        WHEN '110' THEN '等待买家付款'
        WHEN '120' THEN '等待卖家发货'
        WHEN '130' THEN '等待买家确认收货'
        WHEN '140' THEN '已签收'
        WHEN '150' THEN '交易成功'
        WHEN '160' THEN '用户未付款主动关闭'
        WHEN '170' THEN '超时关闭'
        WHEN '180' THEN '商家关闭订单'
        WHEN '200' THEN '待自提'
        WHEN '210' THEN '已取货'
        WHEN '900' THEN '已退款'
        WHEN '220' THEN '用户确认收货'
        WHEN '230' THEN '门店确认收货'
        WHEN '800' THEN '系统确认收货'
        WHEN '240' THEN '已取消'
        ELSE '---' end tradesstatus,
        format(b.real_pay/100,2) As real_pay_intro,
        date_format(b.create_time,'%Y-%m-%d %H:%i:%S') as create_times,
        date_format(b.pay_time,'%Y-%m-%d %H:%i:%S') as pay_times,
        date_format(b.end_time,'%Y-%m-%d %H:%i:%S') as end_times,
        b.create_time as order_create_time ,b.trades_status,b.pay_time,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN '0.00'
        ELSE b.real_pay END real_pay,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN 0.00
        ELSE format(b.real_pay/100,2) END real_pays,
        b.post_fee,b.is_refund,f.status,
        m.merchant_name,m.merchant_id,
        IFNULL(e.`name`,'总部')  fuwuname
        from b_trades b
        LEFT JOIN yb_settlement_detail a  on b.trades_id = a.trades_id
        LEFT JOIN yb_finances f on b.finance_no = f.finance_no
        LEFT JOIN yb_merchant m on b.seller_id = m.merchant_id
        LEFT JOIN b_stores e ON b.assigned_stores = e.id and e.site_id=b.site_id

        <where>
            1=1
            <if test="account_params.site_id!=null and account_params.site_id!=''">
                AND b.site_id = #{account_params.site_id}
            </if>
            <if test="account_params.financeNo!=null and account_params.financeNo!=''">
                AND b.finance_no = #{account_params.financeNo}
            </if>

            <if test="account_params.sellerId!=null and account_params.sellerId!=''">
                AND b.seller_id = #{account_params.sellerId}
            </if>
            <if test="account_params.payType!=null and account_params.payType!=''">
                AND b.pay_style = #{account_params.payType}
            </if>
            <if test="account_params.accountStatus == 0 ">
                AND (b.finance_no is null or b.finance_no=='')
            </if>
            <if test="account_params.accountStatus == 1">
                AND (b.finance_no  is not null  and b.finance_no!='')
            </if>
            <if test="account_params.checkStatus==0 ">
                AND (a.account_checking_status=0 or a.account_checking_status IS NULL)
            </if>
            <if test="account_params.checkStatus==1 ">
                AND ((a.account_checking_status=1 and a.refund_checking_status=-1 and b.deal_finish_status=1 and b.is_refund=0)
                or (a.account_checking_status=1 and a.refund_checking_status=-1 and b.deal_finish_status=1 and b.is_refund=110)
                or (a.refund_checking_status=1)
                or (a.account_checking_status=1 and a.refund_checking_status=1 and b.deal_finish_status=1 and b.is_refund=120))
            </if>
            <if test="account_params.checkStatus==2 ">
                AND((a.account_checking_status=0 and a.refund_checking_status=0)
                or (a.account_checking_status=1 and a.refund_checking_status=0)
                or(a.account_checking_status=1 and a.refund_checking_status=-1 and b.deal_finish_status=1 and b.is_refund=120)
                or (a.account_checking_status=2 and  a.refund_checking_status=-1)
                or(a.account_checking_status=2 and  a.refund_checking_status=1)
                )
            </if>
            <if test="account_params.tradesId!=null and account_params.tradesId!=''">
                AND b.trades_id = #{account_params.tradesId}
            </if>
            <if test="account_params.financeId!=null and account_params.financeId!=''">
                AND f.finance_no = #{account_params.financeId}
            </if>
            <if test="account_params.payNumber!=null and account_params.payNumber!=''">
                AND b.pay_number = #{account_params.payNumber}
            </if>

            <if test="account_params.refundStatus!=null and account_params.refundStatus!='' and account_params.refundStatus!=0">
                AND b.is_refund = #{account_params.refundStatus}
            </if>
            <if test="account_params.settlementStatus==100 ">
                AND b.settlement_status = #{account_params.settlementStatus}
            </if>
            <if test="account_params.settlementStatus==150">
                AND (b.settlement_status = #{account_params.settlementStatus} OR b.settlement_status = '200' or(b.settlement_status = '250' AND (f.STATUS &lt;= 100 OR f.STATUS IS NULL)))
            </if>
            <if test="account_params.settlementStatus==250">
                AND b.settlement_status = '250' AND f.STATUS > 100
            </if>

            <if test="account_params.orderStartTime!=null and account_params.orderStartTime!=''">
                AND b.create_time <![CDATA[ >= ]]> CONCAT(#{account_params.orderStartTime},' 00:00:00')
            </if>

            <if test="account_params.orderEndTime!=null and account_params.orderEndTime!=''">
                AND b.create_time <![CDATA[ <= ]]> CONCAT( #{account_params.orderEndTime},' 23:59:59')
            </if>

            <if test="account_params.dealStartTime!=null and account_params.dealStartTime!=''">
                AND b.end_time <![CDATA[ >= ]]> CONCAT(#{account_params.dealStartTime},' 00:00:00')
            </if>
            <if test="account_params.dealEndTime!=null and account_params.dealEndTime!=''">
                AND b.end_time <![CDATA[ <= ]]> CONCAT(#{account_params.dealEndTime},' 23:59:59')
            </if>
            <if test="account_params.paymentStartTime!=null and account_params.paymentStartTime!=''">
                AND b.pay_time <![CDATA[ >= ]]> CONCAT( #{account_params.paymentStartTime},' 00:00:00')
            </if>
            <if test="account_params.paymentEndTime!=null and account_params.paymentEndTime!=''">
                AND b.pay_time <![CDATA[ <= ]]> CONCAT( #{account_params.paymentEndTime},' 23:59:59')
            </if>
            <if test="account_params.merchantName!=null and account_params.merchantName!=''">
                AND m.merchant_name like concat('%',#{account_params.merchantName},'%')
            </if>
        </where>
        ORDER BY b.create_time desc
    </select>
<!--51结算明细，商户后台 明细按订单查询，及导出-->
    <select id="getSettlementListByObjByexport" resultType="java.util.Map" parameterType="com.jk51.model.account.requestParams.AccountParams">
        select a.account_checking_status as settlement_account_checking,a.business_types,b.finance_no financeNos,a.summary_status,
        IFNULL(b.refund_fee,0) refund_fee,a.refund_checking_status,a.platform_payment_amount,a.platform_fashionable_amount,a.platform_service_fee,
        a.platform_refund_fee,a.create_time,a.account_status,a.rate,a.remit_acount_time,b.trades_id,b.site_id,b.seller_nick,
        b.pay_number,b.end_time,b.trades_split,b.O2O_freight,b.settlement_status,b.settlement_final_time,
        b.is_payment,b.account_checking_status,b.pay_style,b.settlement_type,b.deal_finish_status,b.real_pay real_pay1,b.finance_no financenoss,
        case
        when (a.account_checking_status=0 OR a.account_checking_status IS NULL) then '未对账'
        when  ((a.account_checking_status=1 and a.refund_checking_status=-1 and b.deal_finish_status=1 and b.is_refund=0)
        or (a.account_checking_status=1 and a.refund_checking_status=-1 and b.deal_finish_status=1 and b.is_refund=110)
        or (a.refund_checking_status=1)
        or (a.account_checking_status=1 and a.refund_checking_status=1 and b.deal_finish_status=1 and b.is_refund=120)) then '对账成功'
        ELSE '对账失败'
        end account_statuss,
        round(round(IFNULL(case when b.pay_style in ('cash','health_insurance') then 0 else b.real_pay end,0)/100,2)
        -round(IFNULL(b.trades_split,0)/100,2)
        -round(IFNULL(b.O2O_freight,0)/100,2)
        -round(IFNULL(b.plat_split,0)/100,2)
        -round(IFNULL(case when b.pay_style in ('cash','health_insurance') then 0 else b.refund_fee end,0)/100,2),2)  lastpay,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN 0.00
        ELSE format(b.real_pay/100,2) END real_payss,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN 0.00
        ELSE format(IFNULL(b.refund_fee,0)/100,2) END refund_feess,
        case  b.pay_style
        WHEN 'wx' THEN '微信'
        when 'cash' then '现金'
        when 'ali' then '支付宝'
        when 'health_insurance' then '医保'
        when  'unionPay' then '银联'
        WHEN 'bil' THEN '快钱'
        ELSE '---'end pay_style_intro,
        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_payment_amount/100,2)
        when 'cash' then '---'
        when 'ali' then format(a.platform_payment_amount/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then format(a.platform_payment_amount/100,2)
        WHEN 'bil' THEN format(a.platform_payment_amount/100,2)
        ELSE '---'end  daishoujine,
        CASE f.finance_no
        when  null then '未出账' ELSE '已出账' end chargeStatus,
        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_refund_fee/100,2)
        when 'cash' then '---'
        when 'ali' then format(a.platform_refund_fee/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then format(a.platform_refund_fee/100,2)
        WHEN 'bil' THEN format(a.platform_refund_fee/100,2)
        ELSE '---'end  daituijine,
        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_service_fee/100,2)
        when 'cash' then '---'
        when 'ali' then  format(a.platform_service_fee/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then  format(a.platform_service_fee/100,2)
        WHEN 'bil' THEN  format(a.platform_service_fee/100,2)
        ELSE '---'end  daishoushouxufei,
        case when b.settlement_type=0
        then format(IFNULL(b.trades_split, 0) / 100,2)
        end zhixiaoyongjin,
        case when b.settlement_type=1
        then format(IFNULL(b.trades_split, 0) / 100,2)
        end fenxiaoyongjin,
        CASE f.finance_no
        when  null then '未出账' ELSE '已出账' end chargestatuss,
        format(IFNULL(b.trades_split,0)/100,2) As jiaoyiyongjin,
        format(IFNULL(b.O2O_freight,0)/100,2) As daishoupeisongfei,
        format(IFNULL(b.plat_split,0)/100,2) As shoufei,
        format(IFNULL(b.refund_fee,0)/100,2) real_refund_money,
        IFNULL(f.pay_day,'---') pay_day,
        b.plat_split,
        b.O2O_freight AS peisongfei,
        case b.settlement_type
        WHEN '0'THEN '直销'
        WHEN '1' THEN '分销'
        WHEN  '2' THEN  '预存金'
        ELSE  '---' end settlement_types,
        CASE
        WHEN b.settlement_status = '100' THEN '不结算'
        WHEN b.settlement_status = '150' OR b.settlement_status = '200' THEN '待结算'
        WHEN b.settlement_status = '250' and f.STATUS > 100 THEN '已结算'
        WHEN b.settlement_status = '250' and (f.STATUS <![CDATA[ <= ]]> 100 OR f.STATUS IS NULL) THEN '待结算'
        ELSE '其他'
        END settlement_statuss,
        CASE f.status
        WHEN '0' THEN '未处理'
        WHEN '100' THEN '未支付'
        WHEN '110' THEN '延期支付'
        WHEN '200' THEN '支付部分'
        WHEN '900' THEN '已结清'
        ELSE '---' end fstatus,
        CASE b.deal_finish_status
        WHEN '0' THEN '交易进行中'
        WHEN '1' THEN '交易结束'
        ELSE '---' end dealfinishstatus,
        CASE b.trades_status
        WHEN '110' THEN '等待买家付款'
        WHEN '120' THEN '等待卖家发货'
        WHEN '130' THEN '等待买家确认收货'
        WHEN '140' THEN '已签收'
        WHEN '150' THEN '交易成功'
        WHEN '160' THEN '用户未付款主动关闭'
        WHEN '170' THEN '超时关闭'
        WHEN '180' THEN '商家关闭订单'
        WHEN '200' THEN '待自提'
        WHEN '210' THEN '已取货'
        WHEN '900' THEN '已退款'
        WHEN '220' THEN '用户确认收货'
        WHEN '230' THEN '门店确认收货'
        WHEN '800' THEN '系统确认收货'
        WHEN '240' THEN '已取消'
        ELSE '---' end tradesstatus,
        format(IFNULL(b.real_pay,0)/100,2) real_pay_intro,
        IFNULL(b.real_pay,0) real_pay_intros,
        date_format(b.create_time,'%Y-%m-%d %H:%i:%S') as create_times,
        date_format(b.pay_time,'%Y-%m-%d %H:%i:%S') as pay_times,
        date_format(b.end_time,'%Y-%m-%d %H:%i:%S') as end_times,
        b.create_time as order_create_time ,b.trades_status,b.pay_time,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN '0.00'
        ELSE b.real_pay END real_pay,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN 0.00
        ELSE format(b.real_pay/100,2) END real_pays,
        format(b.real_pay/100,2) real_payz,
        b.post_fee,b.is_refund,f.status,
        m.merchant_name,m.merchant_id,
        IFNULL(e.`name`,'总部')  fuwuname
        from b_trades b
        LEFT JOIN yb_settlement_detail a  on b.trades_id = a.trades_id
        LEFT JOIN yb_finances f on b.finance_no = f.finance_no
        LEFT JOIN yb_merchant m on b.seller_id = m.merchant_id
        LEFT JOIN b_stores e ON b.assigned_stores = e.id and e.site_id=b.site_id

        <where>
            1=1
            <if test="site_id!=null and site_id!=''">
                AND b.site_id = #{site_id}
            </if>
            <if test="financeNo!=null and financeNo!=''">
                AND b.finance_no = #{financeNo}
            </if>

            <if test="sellerId!=null and sellerId!=''">
                AND b.seller_id = #{sellerId}
            </if>
            <if test="payType!=null and payType!=''">
                AND b.pay_style = #{payType}
            </if>
            <if test="accountStatus!='' and accountStatus == 0 ">
                AND b.finance_no is null
            </if>
            <if test="accountStatus == 1">
                AND b.finance_no  is not null
            </if>
            <if test="checkStatus != '' and checkStatus==0 ">
                AND (a.account_checking_status=0 OR a.account_checking_status IS NULL)
            </if>
            <if test="checkStatus==1 ">
                AND ((a.account_checking_status=1 and a.refund_checking_status=-1 and b.deal_finish_status=1 and b.is_refund=0)
                or (a.account_checking_status=1 and a.refund_checking_status=-1 and b.deal_finish_status=1 and b.is_refund=110)
                or (a.refund_checking_status=1)
                or (a.account_checking_status=1 and a.refund_checking_status=1 and b.deal_finish_status=1 and b.is_refund=120))
            </if>
            <if test="checkStatus==2 ">
                AND((a.account_checking_status=0 and a.refund_checking_status=0)
                or (a.account_checking_status=1 and a.refund_checking_status=0)
                or(a.account_checking_status=1 and a.refund_checking_status=-1 and b.deal_finish_status=1 and b.is_refund=120)
                or (a.account_checking_status=2 and  a.refund_checking_status=-1)
                or(a.account_checking_status=2 and  a.refund_checking_status=1)
                )
            </if>

            <if test="tradesId!=null and tradesId!=''">
                AND b.trades_id = #{tradesId}
            </if>
            <if test="financeId!=null and financeId!=''">
                AND f.finance_no = #{financeId}
            </if>
            <if test="payNumber!=null and payNumber!=''">
                AND b.pay_number = #{payNumber}
            </if>

            <if test="refundStatus!=null and refundStatus!='' and refundStatus!=0">
                AND b.is_refund = #{refundStatus}
            </if>
            <!--<if test="settlementStatus!=null and settlementStatus!='' and settlementStatus!=0">
                AND b.settlement_status = #{settlementStatus}
            </if>-->

            <if test="settlementStatus==100 ">
                AND b.settlement_status = #{settlementStatus}
            </if>
            <if test="settlementStatus==150">
                AND (b.settlement_status = #{settlementStatus} OR b.settlement_status = '200' or(b.settlement_status = '250' AND (f.STATUS &lt;= 100 OR f.STATUS IS NULL)))
            </if>
            <if test="settlementStatus==250">
                AND b.settlement_status = '250' AND f.STATUS > 100
            </if>


            <if test="orderStartTime!=null and orderStartTime!=''">
                AND b.create_time <![CDATA[ >= ]]> CONCAT(#{orderStartTime},' 00:00:00')
            </if>

            <if test="orderEndTime!=null and orderEndTime!=''">
                AND b.create_time <![CDATA[ <= ]]> CONCAT( #{orderEndTime},' 23:59:59')
            </if>

            <if test="dealStartTime!=null and dealStartTime!=''">
                AND b.end_time <![CDATA[ >= ]]> CONCAT(#{dealStartTime},' 00:00:00')
            </if>
            <if test="dealEndTime!=null and dealEndTime!=''">
                AND b.end_time <![CDATA[ <= ]]> CONCAT(#{dealEndTime},' 23:59:59')
            </if>
            <if test="paymentStartTime!=null and paymentStartTime!=''">
                AND b.pay_time <![CDATA[ >= ]]> CONCAT( #{paymentStartTime},' 00:00:00')
            </if>
            <if test="paymentEndTime!=null and paymentEndTime!=''">
                AND b.pay_time <![CDATA[ <= ]]> CONCAT( #{paymentEndTime},' 23:59:59')
            </if>
            <if test="merchantName!=null and merchantName!=''">
                AND m.merchant_name like concat('%',#{merchantName},'%')
            </if>
        </where>
        ORDER BY b.create_time desc
    </select>



    <select id="findSettlementDetailById" resultType="java.util.Map">
        SELECT
        a.trades_id,
        a.platform_payment_amount,
        a.platform_refund_fee,
        a.create_time,
        a.account_checking_status,
        a.refund_checking_status,
        a.refund_fee,
        b.create_time AS trades_time,
        b.update_time AS trades_update_time,
        b.trades_status,
        b.settlement_status,
        b.pay_style,
        b.pay_number,
        b.pay_time,
        b.total_fee,
        b.real_pay,
        b.trades_split,
        b.plat_split,
        c.refund_serial_no,
        c.real_refund_money,
        c.refund_time
        FROM
        yb_settlement_detail a
        LEFT JOIN b_trades b ON a.trades_id = b.trades_id
        LEFT JOIN b_refund c ON b.trades_id = c.trade_id
        WHERE
        a.trades_id = #{0}
    </select>



    <select id="getStoreSettlementListByObj" resultType="java.util.Map">

        select  b.finance_no,a.summary_status,a.refund_fee,b.trades_id,b.site_id,
        date_format(b.end_time,'%Y-%m-%d %H:%i:%S') as end_times,b.end_time,b.pay_style,
        date_format(b.create_time,'%Y-%m-%d %H:%i:%S') as create_times,b.create_time as order_create_time,
        date_format(b.pay_time,'%Y-%m-%d %H:%i:%S') as pay_times,b.plat_split,b.trades_split,
        b.pay_time,b.real_pay real_pay1,b.trades_store,b.self_taken_store,b.assigned_stores,
        b.settlement_status,
        IFNULL(f.pay_day,'---') pay_day,
        IFNULL(b.finance_no, '---') finance_nos,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN '0.00'
        ELSE b.real_pay END real_pay,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN '0.00'
        ELSE ifnull(b.refund_fee,0) END refund_fees,
        ifnull(b.O2O_freight,0) as peisongfei,
        CASE
        WHEN b.settlement_status = '100' THEN '不结算'
        WHEN b.settlement_status = '150' OR b.settlement_status = '200' THEN '待结算'
        WHEN b.settlement_status = '250' and f.STATUS > 100 THEN '已结算'
        WHEN b.settlement_status = '250' and (f.STATUS &lt;= 100 OR f.STATUS IS NULL) THEN '待结算'
        ELSE '其他'
        END settlement_statuss,
        case  b.pay_style
        WHEN 'wx' THEN '微信'
        when 'cash' then '现金'
        when 'ali' then '支付宝'
        when 'health_insurance' then '医保'
        when  'unionPay' then '银联'
        else '---' end pay_style_intro,
        m.register_stores,g.id as focus_stores,
        sa.id as source_id,sa.name as source_name,
        sc.id as arayacak_id,IFNULL(sc.`name`,'总部') as arayacak_name,
        sb.id as send_id,sb.`name` as send_name,
        g.id as register_id,
        g.`name` as register_name,
        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_payment_amount/100,2)
        when 'cash' then '---'
        when 'ali' then format(a.platform_payment_amount/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then format(a.platform_payment_amount/100,2)
        WHEN 'bil' THEN format(a.platform_payment_amount/100,2)
        ELSE '---'end  daishoujine,

        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_refund_fee/100,2)
        when 'cash' then '---'
        when 'ali' then format(a.platform_refund_fee/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then format(a.platform_refund_fee/100,2)
        WHEN 'bil' THEN format(a.platform_refund_fee/100,2)
        ELSE '---'end  daituijine,

        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_service_fee/100,2)
        when 'cash' then '---'
        when 'ali' then  format(a.platform_service_fee/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then  format(a.platform_service_fee/100,2)
        WHEN 'bil' THEN  format(a.platform_service_fee/100,2)
        ELSE '---'end  daishoushouxufei,

        format(IFNULL(b.trades_split/100,0),2) As jiaoyiyongjin,
        format(IFNULL(b.plat_split/100,0),2)  platsplit1,
        format(IFNULL(b.O2O_freight/100,0),2)  as daishoupeisongfei,
        format(IFNULL(b.refund_fee/100,0),2)  as tuikuanjine1,
        format(IFNULL(b.real_pay/100,0),2)  as real_pay_intro,
        IFNULL(b.refund_fee,0) tuikuanjine


        from b_trades b
        LEFT JOIN yb_settlement_detail a  on b.trades_id =a.trades_id
        LEFT JOIN yb_finances f on b.finance_no = f.finance_no
        LEFT JOIN b_stores sb on b.self_taken_store = sb.id and b.site_id=sb.site_id
        LEFT JOIN b_stores sc on b.assigned_stores = sc.id and b.site_id=sc.site_id
        LEFT JOIN b_member m on b.buyer_id = m.buyer_id and b.site_id = m.site_id
        LEFT JOIN b_stores g on m.register_stores = g.id and m.site_id = g.site_id
        LEFT JOIN b_store_adminext e on e.storeadmin_id = b.store_user_id and b.site_id = e.site_id
        LEFT JOIN b_stores sa on e.store_id = sa.id and e.site_id=sa.site_id

        <where>
            1=1
            <if test="account_params.site_id!=null and account_params.site_id!=''">
                AND b.site_id = #{account_params.site_id}
            </if>
            <if test="account_params.financeId!=null and account_params.financeId!=''">
                AND b.finance_no = #{account_params.financeId}
            </if>
            <if test="account_params.tradesStore!=null and account_params.tradesStore!=''">
                AND (sa.`name`=#{account_params.tradesStore}
            </if>
            <if test="account_params.tradesStore!=null and account_params.tradesStore!=''">
                or sb.`name`=#{account_params.tradesStore}
            </if>
            <if test="account_params.tradesStore!=null and account_params.tradesStore!=''">
                or sc.`name`=#{account_params.tradesStore}
            </if>
            <if test="account_params.tradesStore!=null and account_params.tradesStore!=''">
                or g.`name`=#{account_params.tradesStore})
            </if>
            <if test="account_params.sellerName!=null and account_params.sellerName!=''">
                AND b.seller_nick LIKE '%#{account_params.sellerName}%'
            </if>
            <if test="account_params.sellerId!=null and account_params.sellerId!=''">
                AND b.seller_id = #{account_params.sellerId}
            </if>
            <if test="account_params.payType!=null and account_params.payType!=''">
                AND b.pay_style = #{account_params.payType}
            </if>
            <if test="account_params.accountStatus!=null and account_params.accountStatus!=''">
                AND a.summary_status = #{account_params.accountStatus}
            </if>
            <if test="account_params.checkStatus!=null and account_params.checkStatus!=''">
                AND a.account_checking_status = #{account_params.checkStatus}
            </if>
            <if test="account_params.tradesId!=null and account_params.tradesId!=''">
                AND b.trades_id = #{account_params.tradesId}
            </if>
            <if test="account_params.payNumber!=null and account_params.payNumber!=''">
                AND b.pay_number = #{account_params.payNumber}
            </if>

            <if test="account_params.refundStatus!=null and account_params.refundStatus!='' and account_params.refundStatus!=0">
                AND b.is_refund = #{account_params.refundStatus}
            </if>
            <!--<if test="account_params.settlementStatus!=null and account_params.settlementStatus!='' and account_params.settlementStatus!=0">
                AND b.settlement_status = #{account_params.settlementStatus}
            </if>-->
            <if test="account_params.settlementStatus==100 ">
                AND b.settlement_status = #{account_params.settlementStatus}
            </if>
            <if test="account_params.settlementStatus==150">
                AND (b.settlement_status = #{account_params.settlementStatus} OR b.settlement_status = '200' or (b.settlement_status = '250' and (f.STATUS &lt;= 100 OR f.STATUS IS NULL)))
            </if>
            <if test="account_params.settlementStatus==250">
                AND b.settlement_status = '250' AND f.STATUS > 100
            </if>


            <if test="account_params.orderStartTime!=null and account_params.orderStartTime!=''">
                AND b.create_time <![CDATA[ >= ]]> #{account_params.orderStartTime}
            </if>

            <if test="account_params.orderEndTime!=null and account_params.orderEndTime!=''">
                AND b.create_time <![CDATA[ <= ]]> #{account_params.orderEndTime}
            </if>

            <if test="account_params.dealStartTime!=null and account_params.dealStartTime!=''">
                AND b.end_time <![CDATA[ >= ]]> #{account_params.dealStartTime}
            </if>
            <if test="account_params.dealEndTime!=null and account_params.dealEndTime!=''">
                AND b.end_time <![CDATA[ <= ]]> #{account_params.dealEndTime}
            </if>
            <if test="account_params.paymentStartTime!=null and account_params.paymentStartTime!=''">
                AND b.pay_time <![CDATA[ >= ]]> #{account_params.paymentStartTime}
            </if>
            <if test="account_params.paymentEndTime!=null and account_params.paymentEndTime!=''">
                AND b.pay_time <![CDATA[ <= ]]> #{account_params.paymentEndTime}
            </if>
            ORDER BY b.create_time desc
        </where>

    </select>
<!--商户后台 按门店查询及导出-->
    <select id="getStoreSettlementListByObjs" resultType="java.util.Map" parameterType="com.jk51.model.account.requestParams.AccountParams">
SELECT *FROM
    (select  b.trades_id,
             b.site_id,
        CASE b.pay_style WHEN 'wx' THEN '微信'
                         WHEN 'cash' THEN '现金'
                         WHEN 'ali' THEN '支付宝'
                         WHEN 'health_insurance' THEN '医保'
                         WHEN  'unionPay' THEN '银联'
                         ELSE '---'
        END pay_style_intro,
        FORMAT(IFNULL(b.real_pay/100,0),2)real_pay_intro,
        b.real_pay real_pay1,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN '0.00'
              ELSE b.real_pay
        END real_pay,

        CASE WHEN b.finance_no!=b.finance_no_refund OR b.is_refund!=120 THEN 0.00 ELSE FORMAT(IFNULL(b.refund_fee/100,0),2) END tuikuanjine1,
        CASE WHEN b.finance_no!=b.finance_no_refund OR b.is_refund!=120 THEN 0.00 ELSE IFNULL(b.refund_fee,0) END tuikuanjine,
        CASE WHEN b.pay_style='cash' OR b.pay_style='health_insurance' OR b.finance_no!=b.finance_no_refund OR b.is_refund!=120 THEN '0.00'
             ELSE IFNULL(b.refund_fee,0)
        END refund_fees,

        FORMAT(IFNULL(b.plat_split/100,0),2)platsplit1,
        b.plat_split,

        FORMAT(IFNULL(b.trades_split/100,0),2)jiaoyiyongjin,
        b.trades_split,

        CASE WHEN b.finance_no!=b.finance_no_refund OR b.deal_finish_status=0 THEN 0.00 ELSE IFNULL(b.O2O_freight, 0) END peisongfei,

        round(round(IFNULL(CASE WHEN b.pay_style IN ('cash','health_insurance') THEN 0 ELSE b.real_pay END,0)/100,2)
                    -round((CASE WHEN b.finance_no!=b.finance_no_refund OR b.deal_finish_status=0 THEN 0.00 ELSE IFNULL(b.O2O_freight, 0) END)/100,2)
                    -round(IFNULL(b.trades_split,0)/100,2)
                    -round(IFNULL(b.plat_split,0)/100,2)
                    -round(IFNULL(CASE WHEN b.pay_style IN ('cash','health_insurance') OR b.finance_no!=b.finance_no_refund OR b.is_refund!=120 THEN 0 ELSE b.refund_fee END,0)/100,2),2)lastpay,
        DATE_FORMAT(b.create_time,'%Y-%m-%d %H:%i:%S')create_times,
        DATE_FORMAT(b.pay_time,'%Y-%m-%d %H:%i:%S')pay_times,
        DATE_FORMAT(b.end_time,'%Y-%m-%d %H:%i:%S')end_times,
        CASE
            WHEN b.settlement_status = '100' THEN '不结算'
            WHEN b.settlement_status = '150' OR b.settlement_status = '200' THEN '待结算'
            WHEN b.settlement_status = '250' AND f.STATUS > 100 THEN '已结算'
            WHEN b.settlement_status = '250' AND (f.STATUS <![CDATA[ <= ]]>100 OR f.STATUS IS NULL) THEN '待结算'
            ELSE '其他'
        END settlement_statuss,
        b.settlement_status,

        sa.name source_name,
        g.`name` register_name,
        IFNULL(sc.`name`,'总部') arayacak_name,
        IFNULL(f.pay_day,'---') pay_day,
        IFNULL(b.finance_no, '---') finance_nos,
        b.finance_no

        from b_trades b
        LEFT JOIN yb_settlement_detail a  on b.trades_id =a.trades_id
        LEFT JOIN yb_finances f on b.finance_no = f.finance_no
        LEFT JOIN b_stores sb on b.self_taken_store = sb.id and b.site_id=sb.site_id
        LEFT JOIN b_stores sc on b.assigned_stores = sc.id and b.site_id=sc.site_id
        LEFT JOIN b_member m on b.buyer_id = m.buyer_id and b.site_id = m.site_id
        LEFT JOIN b_stores g on m.register_stores = g.id and m.site_id = g.site_id
        LEFT JOIN b_store_adminext e on e.storeadmin_id = b.store_user_id and b.site_id = e.site_id
        LEFT JOIN b_stores sa on e.store_id = sa.id and e.site_id=sa.site_id
        <where>
           <include refid="whereForStore"/>
           <if test="financeId!=null and financeId!=''">
              AND b.finance_no = #{financeId}
           </if>
        </where>

  UNION ALL

    select  b.trades_id,
             b.site_id,
        CASE b.pay_style WHEN 'wx' THEN '微信'
             WHEN 'cash' THEN '现金'
             WHEN 'ali' THEN '支付宝'
             WHEN 'health_insurance' THEN '医保'
             WHEN  'unionPay' THEN '银联'
             ELSE '---'
        END pay_style_intro,
        0.00 real_pay_intro,
        0.00 real_pay1,
        0.00 real_pay,

        CASE WHEN b.is_refund=120 THEN FORMAT(IFNULL(b.refund_fee/100,0),2) ELSE 0.00 END tuikuanjine1,
        CASE WHEN b.is_refund=120 THEN IFNULL(b.refund_fee,0) ELSE 0.00 END tuikuanjine,
        CASE WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN '0.00'
             WHEN b.is_refund=120 THEN IFNULL(b.refund_fee,0.00)
             ELSE IFNULL(b.refund_fee,0)
        END refund_fees,

        0.00 platsplit1,
        0.00 plat_split,

        0.00 jiaoyiyongjin,
        0.00 trades_split,

        CASE WHEN b.deal_finish_status=1 THEN IFNULL(b.O2O_freight, 0) ELSE 0.00 END peisongfei,

        round(-round((CASE WHEN b.deal_finish_status=1 THEN IFNULL(b.O2O_freight, 0) ELSE 0.00 END)/100,2)
              -round(IFNULL(CASE WHEN b.pay_style IN ('cash','health_insurance') THEN 0 ELSE IFNULL(b.refund_fee,0) END,0)/100,2),2)  lastpay,
        DATE_FORMAT(b.create_time,'%Y-%m-%d %H:%i:%S')create_times,
        DATE_FORMAT(b.pay_time,'%Y-%m-%d %H:%i:%S')pay_times,
        DATE_FORMAT(b.end_time,'%Y-%m-%d %H:%i:%S')end_times,
        CASE
            WHEN b.settlement_status = '100' THEN '不结算'
            WHEN b.settlement_status = '150' OR b.settlement_status = '200' THEN '待结算'
            WHEN b.settlement_status = '250' AND f.STATUS > 100 THEN '已结算'
            WHEN b.settlement_status = '250' AND (f.STATUS <![CDATA[ <= ]]> 100 OR f.STATUS IS NULL) THEN '待结算'
            ELSE '其他'
        END settlement_statuss,
        b.settlement_status,

        sa.name source_name,
        g.`name` register_name,
        IFNULL(sc.`name`,'总部') arayacak_name,
        IFNULL(f.pay_day,'---') pay_day,
        IFNULL(b.finance_no_refund, '---') finance_nos,
        b.finance_no_refund finance_no

        from b_trades b
        LEFT JOIN yb_settlement_detail a  on b.trades_id =a.trades_id
        LEFT JOIN yb_finances f on b.finance_no = f.finance_no
        LEFT JOIN b_stores sb on b.self_taken_store = sb.id and b.site_id=sb.site_id
        LEFT JOIN b_stores sc on b.assigned_stores = sc.id and b.site_id=sc.site_id
        LEFT JOIN b_member m on b.buyer_id = m.buyer_id and b.site_id = m.site_id
        LEFT JOIN b_stores g on m.register_stores = g.id and m.site_id = g.site_id
        LEFT JOIN b_store_adminext e on e.storeadmin_id = b.store_user_id and b.site_id = e.site_id
        LEFT JOIN b_stores sa on e.store_id = sa.id and e.site_id=sa.site_id
        <where>
            <include refid="whereForStore"/>
                AND b.finance_no!=b.finance_no_refund
            <if test="financeId!=null and financeId!=''">
                AND b.finance_no_refund = #{financeId}
            </if>
        </where>
      ) r ORDER BY r.create_times DESC

    </select>

    <select id="getTotalAwardByTradesId" resultType="java.util.Map">
        SELECT d.order_id,format(d.total_award/100,2) totalAward FROM b_trades b
        LEFT JOIN d_reward d ON b.trades_id = d.order_id WHERE b.trades_id=#{0}
    </select>

    <sql id="getClerkSettlementListByObjSql">
            1=1
            <if test="account_params.site_id!=null and account_params.site_id!=''">
                AND b.site_id = #{account_params.site_id}
            </if>
            <if test="account_params.storeAdminCode!=null and account_params.storeAdminCode!=''">
                AND (s.clerk_invitation_code = #{account_params.storeAdminCode}
                OR h.clerk_invitation_code = #{account_params.storeAdminCode}
                OR f.clerk_invitation_code = #{account_params.storeAdminCode})
            </if>
            <if test="account_params.storeAdminName!=null and account_params.storeAdminName!=''">
                AND (s.name LIKE '%#{account_params.storeAdminName}%'
                OR h.name LIKE '%#{account_params.storeAdminName}%'
                OR f.name LIKE '%#{account_params.storeAdminName}%')
            </if>
            <if test="account_params.sellerId!=null and account_params.sellerId!=''">
                AND b.seller_id = #{account_params.sellerId}
            </if>
            <if test="account_params.payType!=null and account_params.payType!=''">
                AND b.pay_style = #{account_params.payType}
            </if>
            <if test="account_params.accountStatus!=null and account_params.accountStatus!=''">
                AND a.summary_status = #{account_params.accountStatus}
            </if>
            <if test="account_params.checkStatus!=null and account_params.checkStatus!=''">
                AND a.account_checking_status = #{account_params.checkStatus}
            </if>
            <if test="account_params.tradesId!=null and account_params.tradesId!=''">
                AND b.trades_id = #{account_params.tradesId}
            </if>
            <if test="account_params.payNumber!=null and account_params.payNumber!=''">
                AND a.pay_number = #{account_params.payNumber}
            </if>

            <if test="account_params.refundStatus!=null and account_params.refundStatus!='' and account_params.refundStatus!=0">
                AND b.is_refund = #{account_params.refundStatus}
            </if>

            <if test="account_params.settlementStatus==100 ">
                AND b.settlement_status = #{account_params.settlementStatus}
            </if>
            <if test="account_params.settlementStatus==150">
                AND (b.settlement_status = #{account_params.settlementStatus} OR b.settlement_status = '200' OR ( b.settlement_status = '250' AND (fi.STATUS &lt;= 100 OR fi.STATUS IS NULL )) )
            </if>
            <if test="account_params.settlementStatus==250">
                AND b.settlement_status ='250' AND fi.STATUS > 100
            </if>


            <if test="account_params.orderStartTime!=null and account_params.orderStartTime!=''">
                AND b.create_time <![CDATA[ >= ]]> #{account_params.orderStartTime}
            </if>

            <if test="account_params.orderEndTime!=null and account_params.orderEndTime!=''">
                AND b.create_time <![CDATA[ <= ]]> #{account_params.orderEndTime}
            </if>

            <if test="account_params.dealStartTime!=null and account_params.dealStartTime!=''">
                AND b.end_time <![CDATA[ >= ]]> #{account_params.dealStartTime}
            </if>
            <if test="account_params.dealEndTime!=null and account_params.dealEndTime!=''">
                AND b.end_time <![CDATA[ <= ]]> #{account_params.dealEndTime}
            </if>
            <if test="account_params.paymentStartTime!=null and account_params.paymentStartTime!=''">
                AND b.pay_time <![CDATA[ >= ]]> #{account_params.paymentStartTime}
            </if>
            <if test="account_params.paymentEndTime!=null and account_params.paymentEndTime!=''">
                AND b.pay_time <![CDATA[ <= ]]> #{account_params.paymentEndTime}
            </if>
    </sql>

    <select id="getClerkSettlementListByObj" resultType="java.util.Map">
        select  b.finance_no,a.summary_status,a.refund_fee,b.trades_id,b.site_id,b.plat_split,b.trades_split,
        date_format(b.end_time,'%Y-%m-%d %H:%i:%S') as end_times,b.end_time,b.pay_style,b.settlement_status,
        b.O2O_freight as peisongfei,s.storeadmin_id,
        CASE
        WHEN b.settlement_status = '100' THEN '不结算'
        WHEN b.settlement_status = '150' OR b.settlement_status = '200' THEN '待结算'
        WHEN b.settlement_status = '250' and fi.STATUS > 100 THEN '已结算'
        WHEN b.settlement_status = '250' AND (fi.STATUS &lt;= 100 OR fi.STATUS IS NULL) THEN '待结算'
        ELSE '其他'
        END settlement_statuss,
        case  b.pay_style
        WHEN 'wx' THEN '微信'
        when 'cash' then '现金'
        when 'ali' then '支付宝'
        when 'health_insurance' then '医保'
        when  'unionPay' then '银联'
        else '---' end pay_style_intro,
        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_payment_amount/100,2)
        when 'cash' then '---'
        when 'ali' then format(a.platform_payment_amount/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then format(a.platform_payment_amount/100,2)
        WHEN 'bil' THEN format(a.platform_payment_amount/100,2)
        ELSE '---'end  daishoujine,

        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_refund_fee/100,2)
        when 'cash' then '---'
        when 'ali' then format(a.platform_refund_fee/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then format(a.platform_refund_fee/100,2)
        WHEN 'bil' THEN format(a.platform_refund_fee/100,2)
        ELSE '---'end  daituijine,

        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_service_fee/100,2)
        when 'cash' then '---'
        when 'ali' then  format(a.platform_service_fee/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then  format(a.platform_service_fee/100,2)
        WHEN 'bil' THEN  format(a.platform_service_fee/100,2)
        ELSE '---'end  daishoushouxufei,
        IFNULL(b.finance_no, '---') finance_nos,
        IFNULL(fi.pay_day,'---') pay_day,


        IFNULL( format(b.trades_split/100,2),0) As jiaoyiyongjin,
        IFNULL( format(b.plat_split/100,2),0)  platsplit1,
        IFNULL( format(b.O2O_freight/100,2),0)  as daishoupeisongfei,
        IFNULL( format(b.refund_fee/100,2),0)  as tuikuanjine1,
        IFNULL( format(b.real_pay/100,2),0)  as real_pay_intro,
        b.refund_fee tuikuanjine,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN '0.00'
        ELSE b.real_pay END real_pay,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN '0.00'
        ELSE ifnull(b.refund_fee,0) END refund_feess,
        date_format(b.create_time,'%Y-%m-%d %H:%i:%S') as create_times,b.create_time as order_create_time,
        date_format(b.pay_time,'%Y-%m-%d %H:%i:%S') as pay_times,b.pay_time,b.real_pay real_pay1,b.trades_store,b.self_taken_store,
        b.store_user_id,b.store_shipping_clerk_id,b.assigned_stores,m.register_stores,m.register_clerks,
        s.storeadmin_id as delivery_id,s.name as delivery_name,s.clerk_invitation_code as delivery_code,
        h.storeadmin_id as service_id,h.name as service_name,h.clerk_invitation_code as service_code,
        f.storeadmin_id as invite_id,f.name as invite_name,f.clerk_invitation_code as invite_code,
        IFNULL(sb.`name`,'总部') as arayacak_name

        <include refid="getClerkSettlementListByObjSql"/>
        ORDER BY b.create_time desc
    </select>
<!--商户后台 按店员查询及导出-->
    <select id="getClerkSettlementListByObjs" resultType="java.util.Map" parameterType="com.jk51.model.account.requestParams.AccountParams">
    SELECT  *FROM
      (select b.trades_id,
        b.site_id,
        CASE  b.pay_style
            WHEN 'wx' THEN '微信'
            WHEN 'cash' THEN '现金'
            WHEN 'ali' THEN '支付宝'
            WHEN 'health_insurance' THEN '医保'
            WHEN  'unionPay' THEN '银联'
            ELSE '---'
        END pay_style_intro,
        DATE_FORMAT(b.create_time,'%Y-%m-%d %H:%i:%S') create_times,
        DATE_FORMAT(b.pay_time,'%Y-%m-%d %H:%i:%S') pay_times,
        DATE_FORMAT(b.end_time,'%Y-%m-%d %H:%i:%S') end_times,
        f.name invite_name,
        h.name service_name,
        s.name delivery_name,
        CASE
            WHEN b.settlement_status = '100' THEN '不结算'
            WHEN b.settlement_status = '150' OR b.settlement_status = '200' THEN '待结算'
            WHEN b.settlement_status = '250' AND fi.STATUS > 100 THEN '已结算'
            WHEN b.settlement_status = '250' AND (fi.STATUS <![CDATA[ <= ]]> 100 OR fi.STATUS IS NULL) THEN '待结算'
            ELSE '其他'
        END settlement_statuss,
        b.settlement_status,

        IFNULL(sb.`name`,'总部') arayacak_name,
        IFNULL(fi.pay_day,'---') pay_day,
        IFNULL(b.finance_no, '---') finance_nos,

        IFNULL( format(b.real_pay/100,2),0) real_pay_intro,
        b.real_pay real_pay1,
        CASE WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN '0.00' ELSE b.real_pay END real_pay,
        CASE WHEN b.finance_no!=b.finance_no_refund OR b.is_refund!=120 THEN 0.00 ELSE FORMAT(IFNULL(b.refund_fee,0)/100,2) END tuikuanjine1,
        CASE WHEN b.finance_no!=b.finance_no_refund OR b.is_refund!=120 THEN 0.00 ELSE IFNULL(b.refund_fee,0) END tuikuanjine,

        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' OR b.finance_no!=b.finance_no_refund OR b.is_refund!=120 THEN '0.00'
              ELSE IFNULL(b.refund_fee,0)
        END refund_feess,

        IFNULL( format(b.plat_split/100,2),0) platsplit1,
        b.plat_split,

        IFNULL( format(b.trades_split/100,2),0) jiaoyiyongjin,
        b.trades_split,

        CASE WHEN b.finance_no!=b.finance_no_refund AND b.deal_finish_status=1 THEN 0.00 ELSE IFNULL(b.O2O_freight, 0) END peisongfei,

        round(round(IFNULL(CASE WHEN b.pay_style IN ('cash','health_insurance') THEN 0 ELSE b.real_pay END,0)/100,2)
            -round((CASE WHEN b.finance_no!=b.finance_no_refund OR b.deal_finish_status=0 THEN 0.00 ELSE IFNULL(b.O2O_freight, 0) END)/100,2)
            -round(IFNULL(b.trades_split,0)/100,2)
            -round(IFNULL(b.plat_split,0)/100,2)
            -round(IFNULL(CASE WHEN b.pay_style IN ('cash','health_insurance') OR b.finance_no!=b.finance_no_refund OR b.is_refund!=120 THEN 0 ELSE b.refund_fee END,0)/100,2),2)  lastpay

        from b_trades b
        LEFT JOIN yb_settlement_detail a  ON b.trades_id =a.trades_id
        LEFT JOIN yb_finances fi ON b.finance_no = fi.finance_no
        LEFT JOIN b_member m ON b.buyer_id = m.buyer_id AND b.site_id = m.site_id
        LEFT JOIN b_member_info i ON i.member_id = m.buyer_id AND b.site_id = i.site_id
        LEFT JOIN b_store_adminext s ON b.store_shipping_clerk_id = s.storeadmin_id AND b.site_id=s.site_id AND b.store_shipping_clerk_id != 0
        LEFT JOIN b_store_adminext h ON b.store_user_id= h.storeadmin_id AND b.site_id=h.site_id AND b.store_user_id!=0
        LEFT JOIN b_store_adminext f ON SUBSTRING_INDEX(i.invite_code,'_',-1) = SUBSTRING_INDEX(f.clerk_invitation_code,'_',-1) AND m.site_id=f.site_id
        LEFT JOIN b_stores sb ON b.self_taken_store = sb.id AND b.site_id=sb.site_id
        <where>
            <include refid="getClerkSettlementListByObjSql"/>
            <if test="account_params.financeId!=null and account_params.financeId!=''">
                AND b.finance_no = #{account_params.financeId}
            </if>
        </where>

  UNION ALL

     select  b.trades_id,
        b.site_id,
        CASE  b.pay_style
        WHEN 'wx' THEN '微信'
        WHEN 'cash' THEN '现金'
        WHEN 'ali' THEN '支付宝'
        WHEN 'health_insurance' THEN '医保'
        WHEN  'unionPay' THEN '银联'
        ELSE '---'
        END pay_style_intro,

        DATE_FORMAT(b.create_time,'%Y-%m-%d %H:%i:%S') create_times,
        DATE_FORMAT(b.pay_time,'%Y-%m-%d %H:%i:%S') pay_times,
        DATE_FORMAT(b.end_time,'%Y-%m-%d %H:%i:%S') end_times,
        f.name invite_name,
        h.name service_name,
        s.name delivery_name,
        CASE
        WHEN b.settlement_status = '100' THEN '不结算'
        WHEN b.settlement_status = '150' OR b.settlement_status = '200' THEN '待结算'
        WHEN b.settlement_status = '250' AND fi.STATUS > 100 THEN '已结算'
        WHEN b.settlement_status = '250' AND (fi.STATUS <![CDATA[ <= ]]> 100 OR fi.STATUS IS NULL) THEN '待结算'
        ELSE '其他'
        END settlement_statuss,
        b.settlement_status,

        IFNULL(sb.`name`,'总部') arayacak_name,
        IFNULL(fi.pay_day,'---') pay_day,
        IFNULL(b.finance_no_refund, '---') finance_nos,

        0.00 real_pay_intro,
        0.00 real_pay1,
        0.00 real_pay,

        CASE WHEN b.is_refund=120 THEN FORMAT(IFNULL(b.refund_fee,0)/100,2) ELSE 0.00 END tuikuanjine1,
        CASE WHEN b.is_refund=120 THEN IFNULL(b.refund_fee,0.00) ELSE 0.00 END tuikuanjine,
        CASE WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN '0.00'
             WHEN b.is_refund=120 THEN IFNULL(b.refund_fee,0.00)
             ELSE IFNULL(b.refund_fee,0)
        END refund_feess,

        0.00 platsplit1,
        0.00 plat_split,

        0.00 jiaoyiyongjin,
        0.00 trades_split,

        CASE WHEN b.deal_finish_status=1 THEN IFNULL(b.O2O_freight, 0) ELSE 0.00 END peisongfei,
        round(-round((CASE WHEN b.deal_finish_status=1 THEN IFNULL(b.O2O_freight, 0) ELSE 0.00 END)/100,2)
              -round(IFNULL(CASE WHEN b.pay_style IN ('cash','health_insurance') THEN 0 ELSE IFNULL(b.refund_fee,0) END,0)/100,2),2)  lastpay

        from b_trades b
        LEFT JOIN yb_settlement_detail a  ON b.trades_id =a.trades_id
        LEFT JOIN yb_finances fi ON b.finance_no = fi.finance_no
        LEFT JOIN b_member m ON b.buyer_id = m.buyer_id AND b.site_id = m.site_id
        LEFT JOIN b_member_info i ON i.member_id = m.buyer_id AND b.site_id = i.site_id
        LEFT JOIN b_store_adminext s ON b.store_shipping_clerk_id = s.storeadmin_id AND b.site_id=s.site_id AND b.store_shipping_clerk_id != 0
        LEFT JOIN b_store_adminext h ON b.store_user_id= h.storeadmin_id AND b.site_id=h.site_id AND b.store_user_id!=0
        LEFT JOIN b_store_adminext f ON SUBSTRING_INDEX(i.invite_code,'_',-1) = SUBSTRING_INDEX(f.clerk_invitation_code,'_',-1) AND m.site_id=f.site_id
        LEFT JOIN b_stores sb ON b.self_taken_store = sb.id AND b.site_id=sb.site_id
        <where>
            <include refid="getClerkSettlementListByObjSql"/>
                AND b.finance_no_refund != b.finance_no
                <if test="account_params.financeId!=null and account_params.financeId!=''">
                    AND b.finance_no_refund = #{account_params.financeId}
                </if>
        </where>
       ) r ORDER BY r.create_times DESC
    </select>
    <select id="getAccountByException" resultType="com.jk51.model.account.requestParams.AccountException">
        select
        trades_id,
        date_format(order_time,'%Y-%m-%d') order_time,
        date_format(pay_time,'%Y-%m-%d') pay_time,
        date_format(end_time,'%Y-%m-%d') end_time,
        date_format(consign_time,'%Y-%m-%d') consign_time,
        format(real_pay/100,2) realpay,
        format(refund_fee/100,2) refundfee,
        format(plat_split/100,2) platsplit,
        case when settlement_type=0
        then format(IFNULL(trades_split, 0) / 100,2)
        end zhixiaoyongjin,
        case when settlement_type=1
        then format(IFNULL(trades_split, 0) / 100,2)
        end fenxiaoyongjin,
        format(O2O_freight/100,2) O2Ofreight,
        case deal_finish_status
        when '0' then '交易进行中'
        when '1' then '交易结束'
        else '---' end dealfinishstatus,
        case  pay_style
        WHEN 'wx' THEN '微信'
        when 'cash' then '现金'
        when 'ali' then '支付宝'
        when 'health_insurance' then '医保'
        ELSE '---'end paystyle,
        CASE settlement_type
        when '0' then '直购'
        when '1' then '分销'
        when '2' then '预存金'
        else '---' end settlementtype,
        CASE is_payment
        when '0' then '未付款'
        when '1' then '已付款'
        else '---' end ispayment,
        case error_code
        when '1' then '订单类型'
        when '2' then '支付方式(付款成功支付为空)'
        when '3' then '付款方式'
        when '4' then '手续费'
        when '5' then '佣金'
        when '6' then '配送费'
        when '7' then '订单状态'
        when '8' then '结束状态'
        else '---' end error_code,
        CASE trades_status
        WHEN '110' THEN '等待买家付款'
        WHEN '120' THEN '等待卖家发货'
        WHEN '130' THEN '等待买家确认收货'
        WHEN '140' THEN '已签收'
        WHEN '150' THEN '交易成功'
        WHEN '160' THEN '用户未付款主动关闭'
        WHEN '170' THEN '超时关闭'
        WHEN '180' THEN '商家关闭订单'
        WHEN '200' THEN '待自提'
        WHEN '210' THEN '已取货'
        WHEN '900' THEN '已退款'
        WHEN '220' THEN '用户确认收货'
        WHEN '230' THEN '门店确认收货'
        WHEN '800' THEN '系统确认收货'
        WHEN '240' THEN '已取消'
        ELSE '---' end tradesstatus
        from yb_account_exception
        <where>
            1=1
            <if test="account_exception.error_code!=null and account_exception.error_code!=''">
                AND  error_code= #{account_exception.error_code}
            </if>
        </where>
    </select>

    <select id="getAccountRemit" resultType="java.util.Map">
        select merchant_id,merchant_name,trades_id,pay_number,pay_style,round(real_pay,2) as real_pay,trades_status,order_time,pay_time,end_time,settlement_status,
            huazhang_time,round(income_amount,2) as income_amount,refund_pay_fee,remit_shouxu_fee,refund_fee,remit_fee,fee_rate,daoru_time,
            case when real_pay = income_amount then '划账成功'
              when real_pay != income_amount then '划账失败'
            else '未划账' end as huazhang_status,account_status
        from (
        select m.merchant_id,
        m.merchant_name,
        SUBSTRING_INDEX(p.trades_id,'_',1) as trades_id,
        p.business_order_sn as pay_number,
        case  p.pay_style
        WHEN 'wx' THEN '微信'
        when 'ali' then '支付宝'
        ELSE '---'end as pay_style,
        round(t.real_pay/100,2) as real_pay,
        CASE t.trades_status
        WHEN '110' THEN '等待买家付款'
        WHEN '120' THEN '等待卖家发货'
        WHEN '130' THEN '等待买家确认收货'
        WHEN '140' THEN '已签收'
        WHEN '150' THEN '交易成功'
        WHEN '160' THEN '用户未付款主动关闭'
        WHEN '170' THEN '超时关闭'
        WHEN '180' THEN '商家关闭订单'
        WHEN '200' THEN '待自提'
        WHEN '210' THEN '已取货'
        WHEN '900' THEN '已退款'
        WHEN '220' THEN '用户确认收货'
        WHEN '230' THEN '门店确认收货'
        WHEN '800' THEN '系统确认收货'
        WHEN '240' THEN '已取消'
        ELSE '---' end as trades_status,
        date_format(t.create_time,'%Y-%m-%d %H:%i:%S') as order_time,
        date_format(t.pay_time,'%Y-%m-%d %H:%i:%S') as pay_time,
        date_format(t.end_time,'%Y-%m-%d %H:%i:%S') as end_time,
        CASE
        WHEN t.settlement_status = '100' THEN '不结算'
        WHEN t.settlement_status = '150' OR t.settlement_status = '200' THEN '待结算'
        WHEN t.settlement_status = '250' and fi.STATUS > 100 THEN '已结算'
        WHEN t.settlement_status = '250' AND (fi.STATUS <![CDATA[ <= ]]> 100 OR fi.STATUS IS NULL) THEN '待结算'
        ELSE '---'
        END as settlement_status,
        date_format(min(p.pay_time),'%Y-%m-%d %H:%i:%S') as huazhang_time,
        round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2) as income_amount,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '交易退款' then p.spending_amount when p.pay_style = 'wx' then p.spending_amount else 0 end)/100,2)) as refund_pay_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '收费' then p.platform_payment_amount when p.pay_style = 'wx' and p.trades_status in ('SUCCESS','REVOKED') then p.platform_payment_amount else 0 end)/100,2)) as remit_shouxu_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '退费' then p.income_amount when p.pay_style = 'wx' and p.trades_status = 'REFUND' then p.platform_payment_amount else 0 end)/100,2)) as refund_fee,
        round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2)
        - abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '交易退款' then p.spending_amount when p.pay_style = 'wx' then p.spending_amount else 0 end)/100,2))
        - abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '收费' then p.platform_payment_amount when p.pay_style = 'wx' and p.trades_status in ('SUCCESS','REVOKED') then p.platform_payment_amount else 0 end)/100,2))
        + abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '退费' then p.income_amount when p.pay_style = 'wx' and p.trades_status = 'REFUND' then p.platform_payment_amount else 0 end)/100,2))
        as remit_fee,
        p.platform_service_fee as fee_rate,
        date_format(max(p.create_time),'%Y-%m-%d %H:%i:%S') as daoru_time,
        case when round(t.real_pay/100,2) = round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2) then '划账成功'
        when round(t.real_pay/100,2) != round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2) then '划账失败'
        else '未划账' end as huazhang_status,
        CASE when p.account_status = '1' THEN '是' ELSE '否' END as account_status
        from yb_pay_data_import p
        LEFT JOIN b_trades t on t.trades_id = p.trades_id
        LEFT JOIN yb_merchant m on ifnull(t.site_id,left(p.trades_id,6)) = m.merchant_id
        LEFT JOIN yb_finances fi on t.finance_no = fi.finance_no
        <where>
            <include refid="whereForAccountRemit"/>
        </where>
        GROUP BY m.merchant_id,m.merchant_name,p.trades_id,pay_number,pay_style,real_pay,trades_status,order_time,pay_time,end_time,settlement_status,fee_rate
        ) a
        <where>
            <include refid="whereHuaZhangStatus"/>
        </where>
        ORDER BY order_time DESC
    </select>
    <sql id="whereHuaZhangStatus">
        1=1 and remit_shouxu_fee is not null
        <if test="account_remit.remitAccountStatus==1">
            AND real_pay = income_amount
        </if>
        <if test="account_remit.remitAccountStatus==2">
            AND real_pay != income_amount
        </if>
        <if test="account_remit.remitAccountStatus==0">
            AND real_pay is null and (income_amount = 0 OR income_amount is null)
        </if>
    </sql>

    <select id="getAccountRemitSum" parameterType="map" resultType="java.util.Map">
        select  m.merchant_id,m.merchant_name,p.pay_style,
        round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2) as income_amount,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '交易退款' then p.spending_amount when p.pay_style = 'wx' then p.spending_amount else 0 end)/100,2)) as refund_pay_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '收费' then p.platform_payment_amount when p.pay_style = 'wx' and p.trades_status in ('SUCCESS','REVOKED') then p.platform_payment_amount else 0 end)/100,2)) as remit_shouxu_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '退费' then p.income_amount when p.pay_style = 'wx' and p.trades_status = 'REFUND' then p.platform_payment_amount else 0 end)/100,2)) as refund_fee
        from yb_pay_data_import p
        /*LEFT JOIN b_trades t on p.business_order_sn = t.pay_number*/
        LEFT JOIN yb_merchant m on left(p.trades_id,6) = m.merchant_id
        <where>
            1=1 and p.data_type = 3 and p.trades_status in ('在线支付','退费','交易退款','收费','SUCCESS','REFUND','REVOKED')
            <if test="account_remitsum.payStartTime!=null and account_remitsum.payStartTime!=''">
                AND date_format(p.pay_time,'%Y-%m-%d') <![CDATA[ >= ]]> #{account_remitsum.payStartTime}
            </if>
            <if test="account_remitsum.payEndTime!=null and account_remitsum.payEndTime!=''">
                AND date_format(p.pay_time,'%Y-%m-%d') <![CDATA[ <= ]]> #{account_remitsum.payEndTime}
            </if>
            <if test="account_remitsum.payStyle!=null and account_remitsum.payStyle!=''">
                AND p.pay_style = #{account_remitsum.payStyle}
            </if>
            <if test="account_remitsum.merchantId!=null and account_remitsum.merchantId!=''">
                AND m.merchant_id=#{account_remitsum.merchantId}
            </if>
            <if test="account_remitsum.merchantName!=null and account_remitsum.merchantName!=''">
                AND m.merchant_name like concat('%',#{account_remitsum.merchantName},'%')
            </if>
        </where>
        group by m.merchant_id,m.merchant_name,p.pay_style
        order by m.merchant_id
    </select>

    <select id="getTotalClerkSettlementListByObj" resultType="long">
        SELECT COUNT(1)
        <include refid="getClerkSettlementListByObjSql"/>
    </select>
    <select id="getRefundByTradesId" resultType="java.util.Map">
        SELECT
        IFNULL(FORMAT(r.real_refund_money/100,2) ,0)real_refund_money
        FROM
        b_trades b
        LEFT JOIN b_refund r ON b.trades_id = r.trade_id
        WHERE
        b.trades_id=#{0}
    </select>
    <select id="getTotalTrades" resultType="long">
        SELECT COUNT(1) from b_trades
    </select>
    <select id="getSettlementListByObjForExport" resultType="java.util.Map">
        select
        b.trades_id,date_format(b.create_time,'%Y-%m-%d %H:%i:%S')create_time,date_format(b.pay_time,'%Y-%m-%d %H:%i:%S')pay_time,date_format(b.end_time,'%Y-%m-%d %H:%i:%S')end_time,
        format(b.real_pay/100,2) real_pays,f.status fstatus,
        IFNULL(f.pay_day,'---') pay_day,
        CASE f.finance_no
        when  null then '未出账' ELSE '已出账' end chargestatuss,
        case  b.pay_style
        WHEN 'wx' THEN '微信'
        when 'cash' then '现金'
        when 'ali' then '支付宝'
        when 'health_insurance' then '医保'
        when  'unionPay' then '银联'
        WHEN 'bil' THEN '快钱'
        ELSE '---'end pay_style,
        format(IFNULL(b.refund_fee,0)/100,2) refund_fee,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN 0.00
        ELSE format(b.real_pay/100,2) END real_pay,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN 0.00
        ELSE format(IFNULL(b.refund_fee,0)/100,2) END refund_fees,
        format(IFNULL(b.plat_split,0)/100,2)plat_split,
        format(IFNULL(b.trades_split,0)/100,2)trades_split,
        format(IFNULL(b.O2O_freight,0)/100,2)o2o_freight,
        IFNULL(b.finance_no,'---')finance_no,
        IFNULL(e.`name`,'总部')  fuwuname,
        CASE
        WHEN b.settlement_status = '100' THEN '不结算'
        WHEN b.settlement_status = '150' OR b.settlement_status = '200' THEN '待结算'
        WHEN b.settlement_status = '250' and f.STATUS > 100 THEN '已结算'
        WHEN b.settlement_status = '250' and (f.STATUS &lt;= 100 OR f.STATUS IS NULL) THEN '待结算'
        ELSE '其他'  END settlement_statuss,
        case deal_finish_status
        when '0' then '交易进行中'
        when '1' then '交易结束'
        else '---' end dealfinishstatus,
        case when b.settlement_type=0
        then format(IFNULL(b.trades_split, 0) / 100,2)
        end zhixiaoyongjin,
        case when b.settlement_type=1
        then format(IFNULL(b.trades_split, 0) / 100,2)
        end fenxiaoyongjin,
        case
        when a.account_checking_status =0 then '未对账'
        when a.account_checking_status =1 and (a.refund_checking_status=-1 or a.refund_checking_status=1) then '对账成功'
        when a.account_checking_status =2 then '对账失败'
        ELSE '未对账'
        end account_statuss

        from b_trades b
        LEFT JOIN yb_settlement_detail a  on b.trades_id = a.trades_id
        LEFT JOIN yb_finances f on b.finance_no = f.finance_no
        LEFT JOIN b_stores e ON b.assigned_stores = e.id and e.site_id=b.site_id
        <where>
            1=1
            <if test="account_params.site_id!=null and account_params.site_id!=''">
                AND b.site_id = #{account_params.site_id}
            </if>
            <if test="account_params.financeNo!=null and account_params.financeNo!=''">
                AND b.finance_no = #{account_params.financeNo}
            </if>

            <if test="account_params.sellerId!=null and account_params.sellerId!=''">
                AND b.seller_id = #{account_params.sellerId}
            </if>
            <if test="account_params.payType!=null and account_params.payType!=''">
                AND b.pay_style = #{account_params.payType}
            </if>
            <if test="account_params.accountStatus == 0 ">
                AND b.finance_no is null

            </if>
            <if test="account_params.accountStatus == 1">
                AND b.finance_no  is not null
            </if>
            <if test="account_params.checkStatus==0 ">
                AND (a.account_checking_status=0 OR a.account_checking_status IS NULL)
            </if>
            <if test="account_params.checkStatus==1 ">
                AND a.account_checking_status=1
                AND (a.refund_checking_status = -1 OR a.refund_checking_status = 1)
            </if>
            <if test="account_params.checkStatus==2 ">
                AND a.account_checking_status=2
            </if>

            <if test="account_params.tradesId!=null and account_params.tradesId!=''">
                AND b.trades_id = #{account_params.tradesId}
            </if>
            <if test="account_params.financeId!=null and account_params.financeId!=''">
                AND f.finance_no = #{account_params.financeId}
            </if>
            <if test="account_params.payNumber!=null and account_params.payNumber!=''">
                AND b.pay_number = #{account_params.payNumber}
            </if>

            <if test="account_params.refundStatus!=null and account_params.refundStatus!='' and account_params.refundStatus!=0">
                AND b.is_refund = #{account_params.refundStatus}
            </if>

            <if test="account_params.settlementStatus==100 ">
                AND b.settlement_status = #{account_params.settlementStatus}
            </if>
            <if test="account_params.settlementStatus==150">
                AND (b.settlement_status = #{account_params.settlementStatus} OR b.settlement_status = '200' or(b.settlement_status = '250' AND (f.STATUS &lt;= 100 OR f.STATUS IS NULL)))
            </if>
            <if test="account_params.settlementStatus==250">
                AND b.settlement_status = '250' AND f.STATUS > 100
            </if>


            <if test="account_params.orderStartTime!=null and account_params.orderStartTime!=''">
                AND b.create_time <![CDATA[ >= ]]> #{account_params.orderStartTime}
            </if>

            <if test="account_params.orderEndTime!=null and account_params.orderEndTime!=''">
                AND b.create_time <![CDATA[ <= ]]> ADDDATE(#{account_params.orderEndTime},1)
            </if>

            <if test="account_params.dealStartTime!=null and account_params.dealStartTime!=''">
                AND b.end_time <![CDATA[ >= ]]> #{account_params.dealStartTime}
            </if>
            <if test="account_params.dealEndTime!=null and account_params.dealEndTime!=''">
                AND b.end_time <![CDATA[ <= ]]> ADDDATE(#{account_params.dealEndTime},1)
            </if>
            <if test="account_params.paymentStartTime!=null and account_params.paymentStartTime!=''">
                AND b.pay_time <![CDATA[ >= ]]> #{account_params.paymentStartTime}
            </if>
            <if test="account_params.paymentEndTime!=null and account_params.paymentEndTime!=''">
                AND b.pay_time <![CDATA[ <= ]]> ADDDATE(#{account_params.paymentEndTime},1)
            </if>

        </where>
        ORDER BY b.create_time desc
    </select>



    <select id="getPreSettlementLst" resultType="java.util.Map">

        select b.trades_id,b.site_id,b.trades_split,b.settlement_type,b.real_pay real_pay1,b.finance_no financeNos,b.pay_style,
        format(b.real_pay/100,2) As real_pay_intro,
        date_format(b.create_time,'%Y-%m-%d %H:%i:%S') as create_times,
        date_format(b.pay_time,'%Y-%m-%d %H:%i:%S') as pay_times,
        m.merchant_name,m.merchant_id,y.set_type,y.set_value,
        date_format(f.pay_day,'%Y-%m-%d') as pay_day,
        date_format(f.pay_date,'%Y-%m-%d') as pay_date,
        case  b.pay_style
        WHEN 'wx' THEN '微信'
        when 'cash' then '现金'
        when 'ali' then '支付宝'
        when 'health_insurance' then '医保'
        when  'unionPay' then '银联'
        WHEN 'bil' THEN '快钱'
        ELSE '---'end pay_style_intro,
        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_payment_amount/100,2)
        when 'cash' then '---'
        when 'ali' then format(a.platform_payment_amount/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then format(a.platform_payment_amount/100,2)
        WHEN 'bil' THEN format(a.platform_payment_amount/100,2)
        ELSE '---'end  daishoujine,
        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_refund_fee/100,2)
        when 'cash' then '---'
        when 'ali' then format(a.platform_refund_fee/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then format(a.platform_refund_fee/100,2)
        WHEN 'bil' THEN format(a.platform_refund_fee/100,2)
        ELSE '---'end  daituijine,
        case  b.pay_style
        WHEN 'wx' THEN  format(a.platform_service_fee/100,2)
        when 'cash' then '---'
        when 'ali' then  format(a.platform_service_fee/100,2)
        when 'health_insurance' then '---'
        when  'unionPay' then  format(a.platform_service_fee/100,2)
        WHEN 'bil' THEN  format(a.platform_service_fee/100,2)
        ELSE '---'end  daishoushouxufei,
        case when b.settlement_type=0
        then format(IFNULL(b.trades_split, 0) / 100,2)
        end zhixiaoyongjin,
        case when b.settlement_type=1
        then format(IFNULL(b.trades_split, 0) / 100,2)
        end fenxiaoyongjin,
        format(IFNULL(b.trades_split,0)/100,2) As jiaoyiyongjin,
        format(IFNULL(b.O2O_freight,0)/100,2) As daishoupeisongfei,
        format(IFNULL(b.plat_split,0)/100,2) As shoufei,
        format(IFNULL(b.refund_fee,0)/100,2) real_refund_money,
        b.plat_split,
        b.O2O_freight AS peisongfei,
        CASE
        WHEN b.settlement_status = '100' THEN '不结算'
        WHEN b.settlement_status = '150' OR b.settlement_status = '200' THEN '待结算'
        WHEN b.settlement_status = '250' and f.STATUS > 100 THEN '已结算'
        WHEN b.settlement_status = '250' and (f.STATUS <![CDATA[ <= ]]> 100 OR f.STATUS IS NULL) THEN '待结算'
        ELSE '其他'
        END settlement_statuss,
        CASE b.trades_status
        WHEN '110' THEN '等待买家付款'
        WHEN '120' THEN '等待卖家发货'
        WHEN '130' THEN '等待买家确认收货'
        WHEN '140' THEN '已签收'
        WHEN '150' THEN '交易成功'
        WHEN '160' THEN '用户未付款主动关闭'
        WHEN '170' THEN '超时关闭'
        WHEN '180' THEN '商家关闭订单'
        WHEN '200' THEN '待自提'
        WHEN '210' THEN '已取货'
        WHEN '900' THEN '已退款'
        WHEN '220' THEN '用户确认收货'
        WHEN '230' THEN '门店确认收货'
        WHEN '800' THEN '系统确认收货'
        WHEN '240' THEN '已取消'
        ELSE '---' end tradesstatus,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN 0.00
        ELSE format(b.real_pay/100,2) END real_pays,
        CASE  WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN '0.00'
        ELSE b.real_pay END real_pay
        from b_trades b
        LEFT JOIN yb_settlement_detail a  on b.trades_id = a.trades_id
        LEFT JOIN yb_finances f on b.finance_no = f.finance_no
        LEFT JOIN yb_merchant m on b.seller_id = m.merchant_id
        LEFT JOIN yb_settlementday_config y ON m.merchant_id = y.site_id

        <where>

            <if test="parm.merchantId!=null and parm.merchantId!=''">
                AND b.site_id = #{parm.merchantId}
            </if>
            <if test="parm.merchantName!=null and parm.merchantName!=''">
                AND m.merchant_name like concat('%',#{parm.merchantName},'%')
            </if>
            <if test="parm.tradesId!=null and parm.tradesId!=''">
                AND b.trades_id = #{parm.tradesId}
            </if>
            <if test="parm.settlementStatus==100 ">
                AND b.settlement_status = #{parm.settlementStatus}
            </if>
            <if test="parm.settlementStatus==150">
                AND (b.settlement_status = #{parm.settlementStatus} OR b.settlement_status = '200' or(b.settlement_status = '250' AND (f.STATUS &lt;= 100 OR f.STATUS IS NULL)))
            </if>
            <if test="parm.settlementStatus==250">
                AND b.settlement_status = '250' AND f.STATUS > 100
            </if>
            <if test="parm.financeNo!=null and parm.financeNo!=''">
                AND b.finance_no = #{parm.financeNo}
            </if>

            <if test="parm.payDayStartTime!=null and parm.payDayStartTime!=''">
                AND f.pay_day <![CDATA[ >= ]]> #{parm.payDayStartTime}
            </if>
            <if test="parm.payDayEndTime!=null and parm.payDayEndTime!=''">
                AND f.pay_day <![CDATA[ <= ]]> ADDDATE(#{parm.payDayEndTime},1)
            </if>

            <if test="parm.payDateStartTime!=null and parm.payDateStartTime!=''">
                AND f.pay_date <![CDATA[ >= ]]> #{parm.payDateStartTime}
            </if>
            <if test="parm.payDateEndTime!=null and parm.payDateEndTime!=''">
                AND f.pay_date <![CDATA[ <= ]]> ADDDATE(#{parm.payDateEndTime},1)
            </if>


            <if test="parm.setType!=null and parm.setType!=''">
                AND y.set_type=#{parm.setType}
            </if>
            <if test="parm.setValueStart!=null and parm.setValueEnd!=null">
                AND y.set_value BETWEEN #{parm.setValueStart} AND #{parm.setValueEnd}
            </if>


        </where>

        ORDER BY b.create_time desc

    </select>
    <select id="getAccountRemitStastic" resultType="java.util.Map">
        select sum(income_amount) as income_amount,
        sum(refund_pay_fee) as refund_pay_fee,
        sum(remit_shouxu_fee) as remit_shouxu_fee,
        sum(refund_fee) as refund_fee,
        sum(income_amount) - sum(refund_pay_fee) - sum(remit_shouxu_fee) + sum(refund_fee) as remit_fee
        from (
        select  m.merchant_id,m.merchant_name,p.pay_style,
        round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2) as income_amount,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '交易退款' then p.spending_amount when p.pay_style = 'wx' then p.spending_amount else 0 end)/100,2)) as refund_pay_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '收费' then p.platform_payment_amount when p.pay_style = 'wx' and p.trades_status in ('SUCCESS','REVOKED') then p.platform_payment_amount else 0 end)/100,2)) as remit_shouxu_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '退费' then p.income_amount when p.pay_style = 'wx' and p.trades_status = 'REFUND' then p.platform_payment_amount else 0 end)/100,2)) as refund_fee
        from yb_pay_data_import p
        /*LEFT JOIN b_trades t on p.business_order_sn = t.pay_number*/
        LEFT JOIN yb_merchant m on left(p.trades_id,6) = m.merchant_id
        <where>
            1=1 and p.data_type = 3 and p.trades_status in ('在线支付','退费','交易退款','收费','SUCCESS','REFUND','REVOKED')
            <if test="account_remitsum.payStartTime!=null and account_remitsum.payStartTime!=''">
                AND date_format(p.pay_time,'%Y-%m-%d') <![CDATA[ >= ]]> #{account_remitsum.payStartTime}
            </if>
            <if test="account_remitsum.payEndTime!=null and account_remitsum.payEndTime!=''">
                AND date_format(p.pay_time,'%Y-%m-%d') <![CDATA[ <= ]]> #{account_remitsum.payEndTime}
            </if>
            <if test="account_remitsum.payStyle!=null and account_remitsum.payStyle!=''">
                AND p.pay_style = #{account_remitsum.payStyle}
            </if>
            <if test="account_remitsum.merchantId!=null and account_remitsum.merchantId!=''">
                AND m.merchant_id=#{account_remitsum.merchantId}
            </if>
            <if test="account_remitsum.merchantName!=null and account_remitsum.merchantName!=''">
                AND m.merchant_name like concat('%',#{account_remitsum.merchantName},'%')
            </if>
        </where>
        group by m.merchant_id,m.merchant_name,p.pay_style
        ) a
        order by merchant_id
    </select>

    <select id="getAccountRun" resultType="map">
        SELECT a.site_id,
        m.merchant_name,
        a.trades_id,
        ifnull(a.real_pay,0) real_pay,
        ifnull(a.refund_fee,0) refund_fee,
        ifnull(a.plat_split,0) plat_split,
        ifnull(a.trades_split,0) trades_split,
        ifnull(a.O2O_freight,0) O2O_freight,
        case when a.settlement_type = 0 then '直购'
        when a.settlement_type = 1 then '分销'
        when a.settlement_type = 2 then '预存金'
        end as settlement_type,
        date_format(a.create_time,'%Y-%m-%d %H:%i:%S') as create_time,
        date_format(a.pay_time,'%Y-%m-%d %H:%i:%S') as pay_time,
        date_format(a.end_time,'%Y-%m-%d %H:%i:%S') as end_time,
        date_format(f.pay_date,'%Y-%m-%d') as pay_date,
        format(ifnull(a.real_pay,0)/100,2) as real_pays,
        format(ifnull(a.refund_fee,0)/100,2) as daitui_fee,
        format(ifnull(a.plat_split,0)/100,2) as plat_splits,
        case when a.settlement_type=0
        then format(ifnull(a.trades_split,0)/100,2)
        end zhixiaoyongjin,
        case when a.settlement_type=1
        then format(ifnull(a.trades_split,0)/100,2)
        end fenxiaoyongjin,
        format(ifnull(a.O2O_freight,0)/100,2) as O2O_freights,
        a.finance_no,
        case  a.pay_style
        WHEN 'wx' THEN '微信'
        when 'cash' then '现金'
        when 'ali' then '支付宝'
        when 'health_insurance' then '医保'
        ELSE '---'end pay_style_intro,
        CASE f.status
        WHEN '0' THEN '未处理'
        WHEN '100' THEN '未支付'
        WHEN '110' THEN '延期支付'
        WHEN '200' THEN '支付部分'
        WHEN '900' THEN '已结清'
        ELSE '---' end fstatus
        <include refid="getSelectAccountRun"/>
    </select>

    <select id="getAccountRunTotal" resultType="long">
        SELECT COUNT(*)
      <include refid="getSelectAccountRun"/>
    </select>

    <sql id="getSelectAccountRun">
      from b_trades a
        LEFT JOIN yb_finances f on a.finance_no = f.finance_no
        LEFT JOIN yb_merchant m on a.site_id = m.merchant_id
        LEFT JOIN b_migrate c on a.site_id=c.site_id
        where (a.pay_style = 'wx' or a.pay_style = 'ali') and a.trades_status in (140,150,210,900,220,230,800,240) and a.create_time>c.create_time
        <if test="accountRun.merchantName!=null and accountRun.merchantName!=''">
            AND m.merchant_name like concat('%',#{accountRun.merchantName},'%')
        </if>
        <if test="accountRun.sellerId!=null and accountRun.sellerId!=''">
            AND a.site_id = #{accountRun.sellerId}
        </if>
        <if test="accountRun.payType!=null and accountRun.payType!=''">
            AND a.pay_style = #{accountRun.payType}
        </if>
        <if test="accountRun.tradesId!=null and accountRun.tradesId!=''">
            AND a.trades_id = #{accountRun.tradesId}
        </if>
        <if test="accountRun.financeNo!=null and accountRun.financeNo!=''">
            AND f.finance_no= #{accountRun.financeNo}
        </if>
        <if test="accountRun.payStatus!=null and accountRun.payStatus!=''">
            AND f.status= #{accountRun.payStatus}
        </if>
        <if test="accountRun.createStartTime!=null and accountRun.createStartTime!=''">
            AND a.create_time <![CDATA[ >= ]]> CONCAT( #{accountRun.createStartTime},' 00:00:00')
        </if>
        <if test="accountRun.createEndTime!=null and accountRun.createEndTime!=''">
            AND a.create_time <![CDATA[ <= ]]> CONCAT( #{accountRun.createEndTime},' 23:59:59')
        </if>
        <if test="accountRun.payStartTime!=null and accountRun.payStartTime!=''">
            AND a.pay_time <![CDATA[ >= ]]> CONCAT( #{accountRun.payStartTime},' 00:00:00')
        </if>
        <if test="accountRun.payEndTime!=null and accountRun.payEndTime!=''">
            AND a.pay_time <![CDATA[ <= ]]> CONCAT( #{accountRun.payEndTime},' 23:59:59')
        </if>
        <if test="accountRun.dealStartTime!=null and accountRun.dealStartTime!=''">
            AND a.end_time <![CDATA[ >= ]]> CONCAT( #{accountRun.dealStartTime},' 00:00:00')
        </if>
        <if test="accountRun.dealEndTime!=null and accountRun.dealEndTime!=''">
            AND a.pay_time <![CDATA[ <= ]]> CONCAT( #{accountRun.dealEndTime},' 23:59:59')
        </if>
        <if test="accountRun.moneyStartTime!=null and accountRun.moneyStartTime!=''">
            AND f.pay_date <![CDATA[ >= ]]> CONCAT( #{accountRun.moneyStartTime},' 00:00:00')
        </if>
        <if test="accountRun.moneyEndTime!=null and accountRun.moneyEndTime!=''">
            AND f.pay_date <![CDATA[ <= ]]> CONCAT( #{accountRun.moneyEndTime},' 23:59:59')
        </if>
        order by a.create_time desc
    </sql>

    <select id="getRemitMoney" resultType="map">
        select substring_index(trades_id,'_',1) as trades_id,
        IFNULL(abs(sum(case when pay_style = 'ali' and trades_status = '退费' then income_amount when pay_style = 'wx' and trades_status = 'REFUND' then platform_payment_amount else 0 end)),0) as remit_refund_fee,
        IFNULL(abs(sum(case when pay_style = 'ali' and trades_status = '收费' then platform_payment_amount when pay_style = 'wx' and trades_status = 'SUCCESS' then platform_payment_amount else 0 end)),0) as remit_shouxu_fee
        from yb_pay_data_import
        where data_type = 3 and substring_index(trades_id,'_',1) =#{0}
        GROUP BY trades_id
    </select>

    <select id="getAccountCollect" resultType="map">
        select a.site_id,a.merchant_name,date_format(a.create_time,'%Y-%m-%d %H:%i:%S') as create_time,
        a.real_pay,
        a.refund_fee,
        a.plat_split,
        a.trades_split,
        a.O2O_freight,
        IFNULL(b.pay_fee,0) as pay_fee,
        IFNULL(c.remit_fee,0) as remit_fee
        from (
        select t.site_id,mi.create_time,
        m.merchant_name,
        round(sum(case when t.pay_style in ('wx','ali') then t.real_pay else 0 end),2) as real_pay,
        round(sum(case when t.pay_style in ('wx','ali') then t.refund_fee else 0 end),2) as refund_fee,
        round(sum(case when t.pay_style in ('wx','ali') then t.plat_split else 0 end),2) as plat_split,
        round(sum(t.trades_split),2) as trades_split,
        ifnull(round(sum(case when t.deal_finish_status = 1 then t.O2O_freight else 0 end),2),0) as O2O_freight
        from b_trades t
        LEFT JOIN yb_merchant m on t.site_id = m.merchant_id
        LEFT JOIN b_migrate mi on t.site_id = mi.site_id
        <where>
            1=1 and t.create_time>IFNULL(mi.create_time,'0000-00-00 00:00:00') and t.is_payment = 1
            <if test="accountCollect.payStartTime!=null and accountCollect.payStartTime!=''">
                AND t.pay_time <![CDATA[ >= ]]> CONCAT( #{accountCollect.payStartTime},' 00:00:00')
            </if>
            <if test="accountCollect.payEndTime!=null and accountCollect.payEndTime!=''">
                AND t.pay_time <![CDATA[ <= ]]> CONCAT( #{accountCollect.payEndTime},' 23:59:59')
            </if>
        </where>
        group by t.site_id,mi.create_time,m.merchant_name
        ) a
        LEFT JOIN (
        select seller_id ,
        sum(case when status = 900 then real_pay else 0 end) as pay_fee
        from yb_finances
        <where>
            <if test="accountCollect.payStartTime!=null and accountCollect.payStartTime!=''">
                AND pay_date <![CDATA[ >= ]]> CONCAT( #{accountCollect.payStartTime},' 00:00:00')
            </if>
            <if test="accountCollect.payEndTime!=null and accountCollect.payEndTime!=''">
                AND pay_date <![CDATA[ <= ]]> CONCAT( #{accountCollect.payEndTime},' 23:59:59')
            </if>
        </where>
        group by seller_id
        ) b on a.site_id = b.seller_id
        LEFT JOIN (
        select  merchant_id,
        merchant_name,
        round(sum(real_pay),2) as real_pay,
        round(sum(income_amount),2) as income_amount,
        round(sum(refund_pay_fee),2) as refund_pay_fee,
        round(sum(remit_shouxu_fee),2) as remit_shouxu_fee,
        round(sum(remit_fee),2) as remit_fee
        from (
        select m.merchant_id,
        m.merchant_name,
        p.trades_id,
        p.business_order_sn as pay_number,
        case  p.pay_style
        WHEN 'wx' THEN '微信'
        when 'ali' then '支付宝'
        ELSE '---'end as pay_style,
        round(t.real_pay/100,2) as real_pay,
        CASE t.trades_status
        WHEN '110' THEN '等待买家付款'
        WHEN '120' THEN '等待卖家发货'
        WHEN '130' THEN '等待买家确认收货'
        WHEN '140' THEN '已签收'
        WHEN '150' THEN '交易成功'
        WHEN '160' THEN '用户未付款主动关闭'
        WHEN '170' THEN '超时关闭'
        WHEN '180' THEN '商家关闭订单'
        WHEN '200' THEN '待自提'
        WHEN '210' THEN '已取货'
        WHEN '900' THEN '已退款'
        WHEN '220' THEN '用户确认收货'
        WHEN '230' THEN '门店确认收货'
        WHEN '800' THEN '系统确认收货'
        WHEN '240' THEN '已取消'
        ELSE '---' end as trades_status,
        date_format(t.create_time,'%Y-%m-%d') as order_time,
        date_format(t.pay_time,'%Y-%m-%d') as pay_time,
        date_format(t.end_time,'%Y-%m-%d') as end_time,
        CASE
        WHEN t.settlement_status = '100' THEN '不结算'
        WHEN t.settlement_status = '150' OR t.settlement_status = '200' THEN '待结算'
        WHEN t.settlement_status = '250' and fi.STATUS > 100 THEN '已结算'
        WHEN t.settlement_status = '250' AND (fi.STATUS <![CDATA[ <= ]]> 100 OR fi.STATUS IS NULL) THEN '待结算'
        ELSE '其他'
        END as settlement_status,
        min(p.pay_time) as huazhang_time,
        round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end),2) as income_amount,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '交易退款' then p.spending_amount when p.pay_style = 'wx' then p.spending_amount else 0 end),2)) as refund_pay_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '收费' then p.platform_payment_amount when p.pay_style = 'wx' and p.trades_status in ('SUCCESS','REVOKED') then p.platform_payment_amount else 0 end),2)) as remit_shouxu_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '退费' then p.income_amount when p.pay_style = 'wx' and p.trades_status = 'REFUND' then p.platform_payment_amount else 0 end),2)) as refund_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end),2))
        - abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '交易退款' then p.spending_amount when p.pay_style = 'wx' then p.spending_amount else 0 end),2))
        - abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '收费' then p.platform_payment_amount when p.pay_style = 'wx' and p.trades_status in ('SUCCESS','REVOKED') then p.platform_payment_amount else 0 end),2))
        + abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '退费' then p.income_amount when p.pay_style = 'wx' and p.trades_status = 'REFUND' then p.platform_payment_amount else 0 end),2))
        as remit_fee,
        p.platform_service_fee as fee_rate,
        max(p.create_time) as daoru_time,
        case when round(t.real_pay,2) = round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end),2) then '划账成功'
        when round(t.real_pay,2) != round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end),2) then '划账失败'
        else '未划账' end as huazhang_status
        from yb_pay_data_import p
        LEFT JOIN b_trades t on t.trades_id = p.trades_id
        LEFT JOIN yb_merchant m on ifnull(t.site_id,left(p.trades_id,6)) = m.merchant_id
        LEFT JOIN yb_finances fi on t.finance_no = fi.finance_no
        <where>
            1=1 and p.data_type = 3 and p.trades_status in ('在线支付','退费','交易退款','收费','SUCCESS','REFUND','REVOKED')
            <if test="accountCollect.payStartTime!=null and accountCollect.payStartTime!=''">
                AND p.pay_time <![CDATA[ >= ]]> CONCAT( #{accountCollect.payStartTime},' 00:00:00')
            </if>
            <if test="accountCollect.payEndTime!=null and accountCollect.payEndTime!=''">
                AND p.pay_time <![CDATA[ <= ]]> CONCAT( #{accountCollect.payEndTime},' 23:59:59')
            </if>
        </where>
        GROUP BY m.merchant_id,m.merchant_name,p.trades_id,pay_number,pay_style,real_pay,trades_status,order_time,pay_time,end_time,settlement_status,fee_rate
        ) a
        GROUP BY merchant_id,merchant_name
        ) c on a.site_id = c.merchant_id
        <where>
            1 = 1
            <if test="accountCollect.merchantId!=null and accountCollect.merchantId!=''">
                AND a.site_id = #{accountCollect.merchantId}
            </if>
            <if test="accountCollect.merchantName!=null and accountCollect.merchantName!=''">
                AND a.merchant_name like concat('%',#{accountCollect.merchantName},'%')
            </if>
        </where>
        limit #{pageNum},#{pageSize}
    </select>

    <select id="getTradesForFinances" resultType="com.jk51.model.account.models.SettlementDetailAndTrades">
        SELECT t.trades_id,t.pay_style,t.finance_no,t.finance_no_refund,t.is_refund,t.deal_finish_status,t.pay_time,t.end_time,t.settlement_type,
               t.trades_status,t.is_payment,t.create_time,t.site_id seller_id,
        CASE WHEN t.finance_no IS NULL OR t.finance_no ='' THEN t.real_pay ELSE 0 END real_pay,
		CASE WHEN t.finance_no IS NULL OR t.finance_no ='' THEN IFNULL(t.trades_split,0) ELSE 0 END trades_split,
		CASE WHEN t.finance_no IS NULL OR t.finance_no ='' THEN IFNULL(t.plat_split,0) ELSE 0 END plat_split,
		CASE WHEN (t.finance_no IS NULL OR t.finance_no ='') AND t.deal_finish_status=1 THEN IFNULL(t.O2O_freight,0) ELSE 0 END O2O_freight,
		CASE WHEN t.is_refund=120 THEN IFNULL(t.refund_fee,0) ELSE 0 END refund_fee,
		d.account_checking_status,
        IFNULL(d.platform_refund_fee,0) platform_refund_fee,
        d.refund_checking_status,
        IFNULL(d.platform_payment_amount,0) platform_payment_amount
        FROM b_trades t
        LEFT JOIN yb_settlement_detail d ON d.trades_id = t.trades_id
        LEFT JOIN b_migrate m ON t.seller_id=m.site_id
        WHERE
        t.site_id = #{seller_id,jdbcType=INTEGER }
        AND (t.finance_no_refund IS NULL OR t.finance_no_refund='')
        AND t.trades_status NOT IN(110,160,170,180)
        AND t.is_payment=1
		AND t.pay_style!='integral'
        AND t.create_time>IFNULL(m.create_time,'0000-00-00 00:00:00')
        AND (t.pay_time BETWEEN #{startDate,jdbcType=TIMESTAMP} AND #{endDate,jdbcType=TIMESTAMP})
    </select>
    <select id="getNoSettlementTrades" resultType="com.jk51.model.account.models.SettlementDetailAndTrades">
      SELECT t.trades_id,t.pay_style,t.finance_no,t.finance_no_refund,t.is_refund,t.deal_finish_status,t.pay_time,t.end_time,t.settlement_type,
               t.trades_status,t.is_payment,t.create_time,t.site_id seller_id,
            CASE WHEN t.finance_no IS NULL OR t.finance_no ='' THEN t.real_pay ELSE 0 END real_pay,
            CASE WHEN t.finance_no IS NULL OR t.finance_no ='' THEN IFNULL(t.trades_split,0) ELSE 0 END trades_split,
            CASE WHEN t.finance_no IS NULL OR t.finance_no ='' THEN IFNULL(t.plat_split,0) ELSE 0 END plat_split,
            CASE WHEN (t.finance_no IS NULL OR t.finance_no ='') AND t.deal_finish_status=1 THEN IFNULL(t.O2O_freight,0) ELSE 0 END O2O_freight,
            CASE WHEN t.is_refund=120 THEN IFNULL(t.refund_fee,0) ELSE 0 END refund_fee,
            d.account_checking_status,
            IFNULL(d.platform_refund_fee,0) platform_refund_fee,
            d.refund_checking_status,
            IFNULL(d.platform_payment_amount,0) platform_payment_amount
            FROM b_trades t
            LEFT JOIN yb_settlement_detail d ON d.trades_id = t.trades_id
            LEFT JOIN b_migrate m ON t.seller_id=m.site_id
            WHERE
            t.site_id = #{seller_id,jdbcType=INTEGER }
            AND (t.finance_no_refund IS NULL OR t.finance_no_refund='')
            AND t.trades_status NOT IN(110,160,170,180)
            AND t.is_payment=1
            AND t.pay_style!='integral'
            AND t.create_time>IFNULL(m.create_time,'0000-00-00 00:00:00')
            AND t.pay_time <![CDATA[ <= ]]>#{startDate,jdbcType=TIMESTAMP}
    </select>
    <select id="getNoSettlementPostfee" resultType="com.jk51.model.account.models.SettlementDetailAndTrades">
        SELECT t.trades_id,t.pay_style,t.finance_no,t.finance_no_refund,t.is_refund,t.create_time,t.site_id,t.trades_status,t.is_payment,
               t.pay_time,t.end_time,0 real_pay,0 trades_split,0 plat_split,
               IFNULL(t.O2O_freight,0) O2O_freight,0 platform_payment_amount,0 platform_refund_fee,0 refund_fee,t.deal_finish_status
	    FROM b_trades t LEFT JOIN b_migrate m ON t.seller_id=m.site_id
        WHERE t.site_id=#{seller_id}
          AND t.deal_finish_status=1
          AND t.pay_style!='integral'
          AND t.is_payment=1
          AND t.finance_no!=''
          AND (t.finance_no_refund='' OR t.finance_no_refund IS NULL)
          AND t.create_time>IFNULL(m.create_time,'0000-00-00 00:00:00')
    </select>

    <sql id="selectInfoForSettlement">
        b.trades_id,
        b.site_id,
        b.pay_number,
        m.merchant_name,
        date_format(b.create_time,'%Y-%m-%d %H:%i:%S') create_times,
        date_format(b.pay_time,'%Y-%m-%d %H:%i:%S') pay_times,
        date_format(b.end_time,'%Y-%m-%d %H:%i:%S') end_times,
        CASE b.pay_style
            WHEN 'wx' THEN '微信'
            WHEN 'cash' THEN'现金'
            WHEN 'ali' THEN '支付宝'
            WHEN 'health_insurance' THEN'医保'
            WHEN 'unionPay' THEN '银联'
            WHEN 'bil' THEN '快钱'
            ELSE '---'
        END pay_style_intro,
        CASE b.trades_status
            WHEN '110' THEN '等待买家付款'
            WHEN '120' THEN '等待卖家发货'
            WHEN '130' THEN '等待买家确认收货'
            WHEN '140' THEN '已签收'
            WHEN '150' THEN '交易成功'
            WHEN '160' THEN '用户未付款主动关闭'
            WHEN '170' THEN '超时关闭'
            WHEN '180' THEN '商家关闭订单'
            WHEN '200' THEN '待自提'
            WHEN '210' THEN '已取货'
            WHEN '900' THEN '已退款'
            WHEN '220' THEN '用户确认收货'
            WHEN '230' THEN '门店确认收货'
            WHEN '800' THEN '系统确认收货'
            WHEN '240' THEN '已取消'
            ELSE '---'
        END tradesstatus,
        CASE b.deal_finish_status
            WHEN '0' THEN '交易进行中'
            WHEN '1' THEN '交易结束'
            ELSE '---'
        END dealfinishstatus,
        CASE WHEN (a.account_checking_status=0 OR a.account_checking_status IS NULL) THEN '未对账'
             WHEN ((a.account_checking_status=1 AND a.refund_checking_status=-1 AND b.is_refund !=120)
                OR (a.refund_checking_status=1)
                OR (a.account_checking_status=1 AND a.refund_checking_status=1 AND b.is_refund=120)) THEN '对账成功'
            ELSE '对账失败'
        END account_statuss,
        CASE f.status
            WHEN '0' THEN '未处理'
            WHEN '100' THEN '未支付'
            WHEN '110' THEN '延期支付'
            WHEN '200' THEN '支付部分'
            WHEN '900' THEN '已结清'
            ELSE '---'
        END fstatus,
        CASE WHEN b.is_service_order = 0 THEN '否' ELSE '是' END AS service_order,
        CASE
            WHEN b.settlement_status = '100' THEN '不结算'
            WHEN b.settlement_status = '150' OR b.settlement_status = '200' THEN '待结算'
            WHEN b.settlement_status = '250' AND f.STATUS > 100 THEN '已结算'
            WHEN b.settlement_status = '250' AND (f.STATUS <![CDATA[ <= ]]> 100 OR f.STATUS IS NULL) THEN '待结算'
            ELSE '其他'
        END settlement_statuss,
      CASE b.settlement_type
            WHEN '0' THEN '直销'
            WHEN '1' THEN '分销'
            WHEN '2' THEN '预存金'
            ELSE '---'
        END settlement_types,
      CASE f.finance_no WHEN  NULL THEN '未出账' ELSE '已出账' END chargestatuss,
    </sql>
<!--51结算明细，商户后台按订单查询，及其导出sql-->
    <select id="getSettlementList"  resultType="java.util.Map" parameterType="com.jk51.model.account.requestParams.AccountParams">
  SELECT * FROM
      (SELECT
        <include refid="selectInfoForSettlement"/>
        CASE WHEN (b.finance_no!=b.finance_no_refund OR b.finance_no_refund ='') AND b.finance_no!='' THEN 0.00 ELSE IFNULL(b.refund_fee, 0.00) END refund_fee,
        CASE WHEN (b.finance_no!=b.finance_no_refund OR b.finance_no_refund ='') AND b.finance_no!='' THEN 0.00 ELSE format(IFNULL(b.refund_fee,0.00)/100,2)END real_refund_money,
        b.trades_split,
        FORMAT(IFNULL(b.trades_split,0)/100,2)jiaoyiyongjin,
        CASE WHEN b.settlement_type=0 THEN format(IFNULL(b.trades_split, 0.00) / 100,2) END zhixiaoyongjin,
        CASE WHEN b.settlement_type=1 THEN format(IFNULL(b.trades_split, 0.00) / 100,2) END fenxiaoyongjin,

        CASE WHEN b.pay_style = 'cash' OR b.pay_style = 'health_insurance' OR b.finance_no!=b.finance_no_refund OR b.finance_no_refund = '' THEN 0.00 ELSE IFNULL(b.refund_fee, 0.00) END refund_fees,
        CASE WHEN b.pay_style = 'cash' OR b.pay_style = 'health_insurance' OR b.finance_no!=b.finance_no_refund OR b.finance_no_refund = '' THEN 0.00
             ELSE format(IFNULL(b.refund_fee,0.00)/100,2)
        END refund_feess,

        b.settlement_status,
        b.plat_split,
        FORMAT(IFNULL(b.plat_split,0.00)/100,2) shoufei,
        CASE WHEN b.finance_no!=b.finance_no_refund OR b.deal_finish_status=0 THEN 0.00
             ELSE IFNULL(b.O2O_freight, 0)
        END peisongfei,
        CASE WHEN b.finance_no!=b.finance_no_refund OR b.deal_finish_status=0 THEN 0.00
             ELSE FORMAT(IFNULL(b.O2O_freight,0.00)/100,2)
        END daishoupeisongfei,
        round(round(IFNULL((CASE WHEN b.pay_style IN ('cash','health_insurance') THEN 0 ELSE b.real_pay END),0)/100,2)
            -round((CASE WHEN b.finance_no!=b.finance_no_refund OR b.deal_finish_status=0 THEN 0.00 ELSE IFNULL(b.O2O_freight, 0) END)/100,2)
            -round(IFNULL(b.trades_split,0)/100,2)
            -round(IFNULL(b.plat_split,0)/100,2)
            -round(IFNULL(CASE WHEN b.pay_style IN ('cash','health_insurance') OR b.finance_no!=b.finance_no_refund OR b.is_refund!=120 THEN 0 ELSE b.refund_fee END,0)/100,2),2)  lastpay,
        b.settlement_type,

        format(b.real_pay / 100, 2) real_pay_intro,
        b.real_pay real_pay1,
        CASE WHEN b.pay_style = 'cash' OR b.pay_style = 'health_insurance' THEN '0.00'
             ELSE b.real_pay
        END real_pay,
        CASE WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN 0.00
             ELSE format(b.real_pay/100,2)
        END real_payss,
        IFNULL(f.pay_day,'---') pay_day,
        IFNULL(e.`name`,'总部')  fuwuname,
        b.finance_no,
        b.finance_no_refund,
        ifnull(date_format(case when b.is_refund = 120 then b.end_time else null end,'%Y-%m-%d %H:%i:%S'),'---') as refund_time  -- 商家汇总退款时间使用
        FROM
        b_trades b
        LEFT JOIN yb_settlement_detail a ON b.trades_id = a.trades_id
        LEFT JOIN yb_finances f ON b.finance_no = f.finance_no
        LEFT JOIN yb_merchant m ON b.seller_id = m.merchant_id
        LEFT JOIN b_stores e ON b.assigned_stores = e.id AND e.site_id = b.site_id
        <where>
            <include refid="whereForSettlementDetail"/>
            <if test="account_params.financeNo!=null and account_params.financeNo!=''">
                AND b.finance_no = #{account_params.financeNo}
            </if>
        </where>

  UNION ALL

    SELECT
        <include refid="selectInfoForSettlement"/>
        CASE WHEN b.is_refund=120 THEN IFNULL(b.refund_fee,0.00) ELSE 0.00 END refund_fee,
        CASE WHEN b.is_refund=120 THEN format(IFNULL(b.refund_fee,0.00)/100,2) ELSE 0.00 END real_refund_money,

        0.00 trades_split,
        0.00 jiaoyiyongjin,
        0.00 zhixiaoyongjin,
        0.00 fenxiaoyongjin,

        CASE WHEN b.pay_style = 'cash' OR b.pay_style = 'health_insurance' THEN 0.00
             WHEN b.is_refund=120 THEN IFNULL(b.refund_fee,0.00)
             ELSE IFNULL(b.refund_fee, 0.00)
        END refund_fees,
        CASE WHEN b.pay_style='cash' OR b.pay_style='health_insurance' THEN 0.00
             WHEN b.is_refund=120 THEN format(IFNULL(b.refund_fee,0.00)/100,2)
             ELSE format(IFNULL(b.refund_fee,0.00)/100,2)
        END refund_feess,

        b.settlement_status,
        0.00 plat_split,
        0.00 shoufei,
        CASE WHEN b.deal_finish_status=1 THEN IFNULL(b.O2O_freight,0.00) ELSE 0.00 END peisongfei,
        CASE WHEN b.deal_finish_status=1 THEN FORMAT(IFNULL(b.O2O_freight,0)/100,2) ELSE 0.00 END daishoupeisongfei,

        round(-round((CASE WHEN b.deal_finish_status=1 THEN IFNULL(b.O2O_freight, 0.00) ELSE 0.00 END)/100,2)
        -round(IFNULL(CASE WHEN b.pay_style IN ('cash','health_insurance') THEN 0 ELSE IFNULL(b.refund_fee,0) END,0)/100,2),2)  lastpay,

        b.settlement_type,
        0.00 real_pay_intro,
        0.00 real_pay1,

        0.00 real_pay,
        0.00 real_payss,
        IFNULL(f.pay_day,'---') pay_day,
        IFNULL(e.`name`,'总部')  fuwuname,
        b.finance_no_refund finance_no,
        b.finance_no finance_no_refund,
        ifnull(date_format(case when b.is_refund = 120 then b.end_time else null end,'%Y-%m-%d %H:%i:%S'),'---') as refund_time  -- 商家汇总退款时间使用
        FROM
        b_trades b
        LEFT JOIN yb_settlement_detail a ON b.trades_id = a.trades_id
        LEFT JOIN yb_finances f ON b.finance_no = f.finance_no
        LEFT JOIN yb_merchant m ON b.seller_id = m.merchant_id
        LEFT JOIN b_stores e ON b.assigned_stores = e.id
        AND e.site_id = b.site_id
        <where>
            <include refid="whereForSettlementDetail"/>
                AND b.finance_no_refund !=''
                AND b.finance_no_refund != b.finance_no
            <if test="account_params.financeNo!=null and account_params.financeNo!=''">
                AND b.finance_no_refund = #{account_params.financeNo}
            </if>
        </where>
        ) r ORDER BY r.create_times DESC
    </select>
    <select id="getAccountRemitStatic" resultType="java.util.Map">
        select round(sum(real_pay),2) as real_pay,
        round(sum(income_amount),2) as income_amount,
        round(sum(refund_pay_fee),2) as refund_pay_fee,
        round(sum(remit_shouxu_fee),2) as remit_shouxu_fee,
        round(sum(refund_fee),2) as refund_fee,
        round(sum(remit_fee),2) as remit_fee
        from (
        select m.merchant_id,
        m.merchant_name,
        p.trades_id,
        p.business_order_sn as pay_number,
        case  p.pay_style
        WHEN 'wx' THEN '微信'
        when 'ali' then '支付宝'
        ELSE '---'end as pay_style,
        round(t.real_pay/100,2) as real_pay,
        CASE t.trades_status
        WHEN '110' THEN '等待买家付款'
        WHEN '120' THEN '等待卖家发货'
        WHEN '130' THEN '等待买家确认收货'
        WHEN '140' THEN '已签收'
        WHEN '150' THEN '交易成功'
        WHEN '160' THEN '用户未付款主动关闭'
        WHEN '170' THEN '超时关闭'
        WHEN '180' THEN '商家关闭订单'
        WHEN '200' THEN '待自提'
        WHEN '210' THEN '已取货'
        WHEN '900' THEN '已退款'
        WHEN '220' THEN '用户确认收货'
        WHEN '230' THEN '门店确认收货'
        WHEN '800' THEN '系统确认收货'
        WHEN '240' THEN '已取消'
        ELSE '---' end as trades_status,
        date_format(t.create_time,'%Y-%m-%d') as order_time,
        date_format(t.pay_time,'%Y-%m-%d') as pay_time,
        date_format(t.end_time,'%Y-%m-%d') as end_time,
        CASE
        WHEN t.settlement_status = '100' THEN '不结算'
        WHEN t.settlement_status = '150' OR t.settlement_status = '200' THEN '待结算'
        WHEN t.settlement_status = '250' and fi.STATUS > 100 THEN '已结算'
        WHEN t.settlement_status = '250' AND (fi.STATUS <![CDATA[ <= ]]> 100 OR fi.STATUS IS NULL) THEN '待结算'
        ELSE '其他'
        END as settlement_status,
        min(p.pay_time) as huazhang_time,
        round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2) as income_amount,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '交易退款' then p.spending_amount when p.pay_style = 'wx' then p.spending_amount else 0 end)/100,2)) as refund_pay_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '收费' then p.platform_payment_amount when p.pay_style = 'wx' and p.trades_status in ('SUCCESS','REVOKED') then p.platform_payment_amount else 0 end)/100,2)) as remit_shouxu_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '退费' then p.income_amount when p.pay_style = 'wx' and p.trades_status = 'REFUND' then p.platform_payment_amount else 0 end)/100,2)) as refund_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2))
        - abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '交易退款' then p.spending_amount when p.pay_style = 'wx' then p.spending_amount else 0 end)/100,2))
        - abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '收费' then p.platform_payment_amount when p.pay_style = 'wx' and p.trades_status in ('SUCCESS','REVOKED') then p.platform_payment_amount else 0 end)/100,2))
        + abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '退费' then p.income_amount when p.pay_style = 'wx' and p.trades_status = 'REFUND' then p.platform_payment_amount else 0 end)/100,2))
        as remit_fee,
        p.platform_service_fee as fee_rate,
        max(p.create_time) as daoru_time,
        case when round(t.real_pay/100,2) = round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2) then '划账成功'
        when round(t.real_pay/100,2) != round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2) then '划账失败'
        else '未划账' end as huazhang_status,
        CASE when account_status = 1 THEN '是' ELSE '否' END as account_status
        from yb_pay_data_import p
        LEFT JOIN b_trades t on t.trades_id = p.trades_id
        LEFT JOIN yb_merchant m on ifnull(t.site_id,left(p.trades_id,6)) = m.merchant_id
        LEFT JOIN yb_finances fi on t.finance_no = fi.finance_no
        <where>
            <include refid="whereForAccountRemit"/>
        </where>
        GROUP BY m.merchant_id,m.merchant_name,p.trades_id,pay_number,pay_style,real_pay,trades_status,order_time,pay_time,end_time,settlement_status,fee_rate
        ) a
        <where>
            <include refid="whereHuaZhangStatus"/>
        </where>
    </select>
    <select id="getAccountCollectCount" resultType="java.lang.Integer">
        select COUNT(DISTINCT a.site_id)
        from (
        select t.site_id,
        m.merchant_name,
        round(sum(t.real_pay),2) as real_pay,
        round(sum(t.refund_fee),2) as refund_fee,
        round(sum(t.plat_split),2) as plat_split,
        round(sum(t.trades_split),2) as trades_split,
        ifnull(round(sum(case when t.deal_finish_status = 1 then t.O2O_freight else 0 end),2),0) as O2O_freight
        from b_trades t
        LEFT JOIN yb_merchant m on t.site_id = m.merchant_id
        <where>
            <if test="accountCollect.payStartTime!=null and accountCollect.payStartTime!=''">
                AND t.pay_time <![CDATA[ >= ]]> CONCAT( #{accountCollect.payStartTime},' 00:00:00')
            </if>
            <if test="accountCollect.payEndTime!=null and accountCollect.payEndTime!=''">
                AND t.pay_time <![CDATA[ <= ]]> CONCAT( #{accountCollect.payEndTime},' 23:59:59')
            </if>
        </where>
        group by t.site_id,m.merchant_name
        ) a
        LEFT JOIN (
        select seller_id ,
        sum(case when status = 900 then real_pay else 0 end) as pay_fee
        from yb_finances
        <where>
            <if test="accountCollect.payStartTime!=null and accountCollect.payStartTime!=''">
                AND pay_date <![CDATA[ >= ]]> CONCAT( #{accountCollect.payStartTime},' 00:00:00')
            </if>
            <if test="accountCollect.payEndTime!=null and accountCollect.payEndTime!=''">
                AND pay_date <![CDATA[ <= ]]> CONCAT( #{accountCollect.payEndTime},' 23:59:59')
            </if>
        </where>
        group by seller_id
        ) b on a.site_id = b.seller_id
        LEFT JOIN (
        select  merchant_id,
        merchant_name,
        round(sum(real_pay),2) as real_pay,
        round(sum(income_amount),2) as income_amount,
        round(sum(refund_pay_fee),2) as refund_pay_fee,
        round(sum(remit_shouxu_fee),2) as remit_shouxu_fee,
        round(sum(remit_fee),2) as remit_fee
        from (
        select m.merchant_id,
        m.merchant_name,
        p.trades_id,
        p.business_order_sn as pay_number,
        case  p.pay_style
        WHEN 'wx' THEN '微信'
        when 'ali' then '支付宝'
        ELSE '---'end as pay_style,
        round(t.real_pay/100,2) as real_pay,
        CASE t.trades_status
        WHEN '110' THEN '等待买家付款'
        WHEN '120' THEN '等待卖家发货'
        WHEN '130' THEN '等待买家确认收货'
        WHEN '140' THEN '已签收'
        WHEN '150' THEN '交易成功'
        WHEN '160' THEN '用户未付款主动关闭'
        WHEN '170' THEN '超时关闭'
        WHEN '180' THEN '商家关闭订单'
        WHEN '200' THEN '待自提'
        WHEN '210' THEN '已取货'
        WHEN '900' THEN '已退款'
        WHEN '220' THEN '用户确认收货'
        WHEN '230' THEN '门店确认收货'
        WHEN '800' THEN '系统确认收货'
        WHEN '240' THEN '已取消'
        ELSE '---' end as trades_status,
        date_format(t.create_time,'%Y-%m-%d') as order_time,
        date_format(t.pay_time,'%Y-%m-%d') as pay_time,
        date_format(t.end_time,'%Y-%m-%d') as end_time,
        CASE
        WHEN t.settlement_status = '100' THEN '不结算'
        WHEN t.settlement_status = '150' OR t.settlement_status = '200' THEN '待结算'
        WHEN t.settlement_status = '250' and fi.STATUS > 100 THEN '已结算'
        WHEN t.settlement_status = '250' AND (fi.STATUS <![CDATA[ <= ]]> 100 OR fi.STATUS IS NULL) THEN '待结算'
        ELSE '其他'
        END as settlement_status,
        min(p.pay_time) as huazhang_time,
        round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2) as income_amount,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '交易退款' then p.spending_amount when p.pay_style = 'wx' then p.spending_amount else 0 end)/100,2)) as refund_pay_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '收费' then p.platform_payment_amount when p.pay_style = 'wx' and p.trades_status in ('SUCCESS','REVOKED') then p.platform_payment_amount else 0 end)/100,2)) as remit_shouxu_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '退费' then p.income_amount when p.pay_style = 'wx' and p.trades_status = 'REFUND' then p.platform_payment_amount else 0 end)/100,2)) as refund_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2))
        - abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '交易退款' then p.spending_amount when p.pay_style = 'wx' then p.spending_amount else 0 end)/100,2))
        - abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '收费' then p.platform_payment_amount when p.pay_style = 'wx' and p.trades_status in ('SUCCESS','REVOKED') then p.platform_payment_amount else 0 end)/100,2))
        + abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '退费' then p.income_amount when p.pay_style = 'wx' and p.trades_status = 'REFUND' then p.platform_payment_amount else 0 end)/100,2))
        as remit_fee,
        p.platform_service_fee as fee_rate,
        max(p.create_time) as daoru_time,
        case when round(t.real_pay/100,2) = round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2) then '划账成功'
        when round(t.real_pay/100,2) != round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2) then '划账失败'
        else '未划账' end as huazhang_status
        from yb_pay_data_import p
        LEFT JOIN b_trades t on t.trades_id = p.trades_id
        LEFT JOIN yb_merchant m on ifnull(t.site_id,left(p.trades_id,6)) = m.merchant_id
        LEFT JOIN yb_finances fi on t.finance_no = fi.finance_no
        <where>
            1=1 and p.data_type = 3 and p.trades_status in ('在线支付','退费','交易退款','收费','SUCCESS','REFUND','REVOKED')
            <if test="accountCollect.payStartTime!=null and accountCollect.payStartTime!=''">
                AND p.pay_time <![CDATA[ >= ]]> CONCAT( #{accountCollect.payStartTime},' 00:00:00')
            </if>
            <if test="accountCollect.payEndTime!=null and accountCollect.payEndTime!=''">
                AND p.pay_time <![CDATA[ <= ]]> CONCAT( #{accountCollect.payEndTime},' 23:59:59')
            </if>
        </where>
        GROUP BY m.merchant_id,m.merchant_name,p.trades_id,pay_number,pay_style,real_pay,trades_status,order_time,pay_time,end_time,settlement_status,fee_rate
        ) a
        GROUP BY merchant_id,merchant_name
        ) c on a.site_id = c.merchant_id
        <where>
            1 = 1
            <if test="accountCollect.merchantId!=null and accountCollect.merchantId!=''">
                AND a.site_id = #{accountCollect.merchantId}
            </if>
            <if test="accountCollect.merchantName!=null and accountCollect.merchantName!=''">
                AND a.merchant_name like concat('%',#{accountCollect.merchantName},'%')
            </if>
        </where>
    </select>
    <select id="exportAccountRemitList" resultType="java.util.Map">
        select  m.merchant_id,m.merchant_name,
        case p.pay_style when 'wx' then '微信' else '支付宝' end as pay_style,
        round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2) as income_amount,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '交易退款' then p.spending_amount when p.pay_style = 'wx' then p.spending_amount else 0 end)/100,2)) as refund_pay_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '收费' then p.platform_payment_amount when p.pay_style = 'wx' and p.trades_status in ('SUCCESS','REVOKED') then p.platform_payment_amount else 0 end)/100,2)) as remit_shouxu_fee,
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '退费' then p.income_amount when p.pay_style = 'wx' and p.trades_status = 'REFUND' then p.platform_payment_amount else 0 end)/100,2)) as refund_fee,

        round(sum(case when p.pay_style = 'ali' and p.trades_status = '在线支付' then p.income_amount when p.pay_style = 'wx' then p.income_amount else 0 end)/100,2) -
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '交易退款' then p.spending_amount when p.pay_style = 'wx' then p.spending_amount else 0 end)/100,2)) -
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '收费' then p.platform_payment_amount when p.pay_style = 'wx' and p.trades_status in ('SUCCESS','REVOKED') then p.platform_payment_amount else 0 end)/100,2)) +
        abs(round(sum(case when p.pay_style = 'ali' and p.trades_status = '退费' then p.income_amount when p.pay_style = 'wx' and p.trades_status = 'REFUND' then p.platform_payment_amount else 0 end)/100,2)) as remit_fee

        from yb_pay_data_import p
        /*LEFT JOIN b_trades t on p.business_order_sn = t.pay_number*/
        LEFT JOIN yb_merchant m on left(p.trades_id,6) = m.merchant_id
        <where>
            1=1 and p.data_type = 3 and p.trades_status in ('在线支付','退费','交易退款','收费','SUCCESS','REFUND','REVOKED')
            <if test="account_remitsum.payStartTime!=null and account_remitsum.payStartTime!=''">
                AND date_format(p.pay_time,'%Y-%m-%d') <![CDATA[ >= ]]> #{account_remitsum.payStartTime}
            </if>
            <if test="account_remitsum.payEndTime!=null and account_remitsum.payEndTime!=''">
                AND date_format(p.pay_time,'%Y-%m-%d') <![CDATA[ <= ]]> #{account_remitsum.payEndTime}
            </if>
            <if test="account_remitsum.payStyle!=null and account_remitsum.payStyle!=''">
                AND p.pay_style = #{account_remitsum.payStyle}
            </if>
            <if test="account_remitsum.merchantId!=null and account_remitsum.merchantId!=''">
                AND m.merchant_id=#{account_remitsum.merchantId}
            </if>
            <if test="account_remitsum.merchantName!=null and account_remitsum.merchantName!=''">
                AND m.merchant_name like concat('%',#{account_remitsum.merchantName},'%')
            </if>
        </where>
        group by m.merchant_id,m.merchant_name,p.pay_style
        order by m.merchant_id
    </select>
</mapper>
