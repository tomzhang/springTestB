<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jk51.modules.registration.mapper.ServceOrderMapper">
  <resultMap id="BaseResultMap" type="com.jk51.model.registration.models.ServceOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="bso_id" jdbcType="INTEGER" property="id" />
    <id column="bso_site_id" jdbcType="INTEGER" property="siteId" />
    <result column="bso_store_id" jdbcType="INTEGER" property="storeId" />
    <result column="bso_trades_id" jdbcType="VARCHAR" property="tradesId" />
    <result column="booking_no" jdbcType="VARCHAR" property="bookingNo" />
    <result column="bso_use_detail_id" jdbcType="INTEGER" property="useDetailId" />
    <result column="bso_use_count" jdbcType="INTEGER" property="useCount" />
    <result column="bso_amount" jdbcType="INTEGER" property="amount" />
    <result column="bso_serve_status" jdbcType="TINYINT" property="serveStatus" />
    <result column="bso_schedule_person_id" jdbcType="INTEGER" property="schedulePersonId" />
    <result column="bso_goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="bso_diagnose_status" jdbcType="TINYINT" property="diagnoseStatus" />
    <result column="bso_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="bso_update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jk51.model.registration.models.ServceOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="bso_disease_info" jdbcType="LONGVARCHAR" property="diseaseInfo" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    bso.id as bso_id, bso.site_id as bso_site_id, bso.store_id as bso_store_id, bso.trades_id as bso_trades_id, 
    bso.use_detail_id as bso_use_detail_id,bso.booking_no as bso_booking_no, bso.use_count as bso_use_count, bso.amount as bso_amount,
    bso.serve_status as bso_serve_status, bso.schedule_person_id as bso_schedule_person_id, 
    bso.goods_id as bso_goods_id, bso.diagnose_status as bso_diagnose_status, bso.create_time as bso_create_time, 
    bso.update_time as bso_update_time
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    bso.disease_info as bso_disease_info
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_servce_order bso
    where bso.id = #{id,jdbcType=INTEGER}
      and bso.site_id = #{siteId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from b_servce_order
    where id = #{id,jdbcType=INTEGER}
      and site_id = #{siteId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jk51.model.registration.models.ServceOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into b_servce_order (id, site_id, store_id, 
      trades_id, use_detail_id,booking_no, use_count,
      amount, serve_status, schedule_person_id, 
      goods_id, diagnose_status, create_time, 
      update_time, disease_info)
    values (#{id,jdbcType=INTEGER}, #{siteId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{tradesId,jdbcType=VARCHAR}, #{useDetailId,jdbcType=INTEGER}, #{bookingNo,jdbcType=VARCHAR}, #{useCount,jdbcType=INTEGER},
      #{amount,jdbcType=INTEGER}, #{serveStatus,jdbcType=TINYINT}, #{schedulePersonId,jdbcType=INTEGER}, 
      #{goodsId,jdbcType=INTEGER}, #{diagnoseStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{diseaseInfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jk51.model.registration.models.ServceOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into b_servce_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="siteId != null">
        site_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="tradesId != null">
        trades_id,
      </if>
      <if test="useDetailId != null">
        use_detail_id,
      </if>
      <if test="bookingNo != null">
        booking_no,
      </if>
      <if test="useCount != null">
        use_count,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="serveStatus != null">
        serve_status,
      </if>
      <if test="schedulePersonId != null">
        schedule_person_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="diagnoseStatus != null">
        diagnose_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="diseaseInfo != null">
        disease_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="siteId != null">
        #{siteId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="tradesId != null">
        #{tradesId,jdbcType=VARCHAR},
      </if>
      <if test="useDetailId != null">
        #{useDetailId,jdbcType=INTEGER},
      </if>
      <if test="bookingNo != null">
        #{bookingNo,jdbcType=VARCHAR},
      </if>
      <if test="useCount != null">
        #{useCount,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="serveStatus != null">
        #{serveStatus,jdbcType=TINYINT},
      </if>
      <if test="schedulePersonId != null">
        #{schedulePersonId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="diagnoseStatus != null">
        #{diagnoseStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="diseaseInfo != null">
        #{diseaseInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk51.model.registration.models.ServceOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_servce_order
    <set>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="tradesId != null">
        trades_id = #{tradesId,jdbcType=VARCHAR},
      </if>
      <if test="useDetailId != null">
        use_detail_id = #{useDetailId,jdbcType=INTEGER},
      </if>
      <if test="bookingNo != null">
        booking_no = #{bookingNo,jdbcType=VARCHAR},
      </if>
      <if test="useCount != null">
        use_count = #{useCount,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="serveStatus != null">
        serve_status = #{serveStatus,jdbcType=TINYINT},
      </if>
      <if test="schedulePersonId != null">
        schedule_person_id = #{schedulePersonId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="diagnoseStatus != null">
        diagnose_status = #{diagnoseStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="diseaseInfo != null">
        disease_info = #{diseaseInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and site_id = #{siteId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jk51.model.registration.models.ServceOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_servce_order
    set store_id = #{storeId,jdbcType=INTEGER},
      trades_id = #{tradesId,jdbcType=VARCHAR},
      use_detail_id = #{useDetailId,jdbcType=INTEGER},
      booking_no = #{bookingNo,jdbcType=VARCHAR},
      use_count = #{useCount,jdbcType=INTEGER},
      amount = #{amount,jdbcType=INTEGER},
      serve_status = #{serveStatus,jdbcType=TINYINT},
      schedule_person_id = #{schedulePersonId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      diagnose_status = #{diagnoseStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      disease_info = #{diseaseInfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
      and site_id = #{siteId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk51.model.registration.models.ServceOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_servce_order
    set store_id = #{storeId,jdbcType=INTEGER},
      trades_id = #{tradesId,jdbcType=VARCHAR},
      use_detail_id = #{useDetailId,jdbcType=INTEGER},
      booking_no = #{bookingNo,jdbcType=VARCHAR},
      use_count = #{useCount,jdbcType=INTEGER},
      amount = #{amount,jdbcType=INTEGER},
      serve_status = #{serveStatus,jdbcType=TINYINT},
      schedule_person_id = #{schedulePersonId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      diagnose_status = #{diagnoseStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
      and site_id = #{siteId,jdbcType=INTEGER}
  </update>

  <select id="queryAllServceOrder" parameterType="com.jk51.model.registration.requestParams.ServerOrderParams" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_servce_order bso
    where 1=1
    <if test="storeId != null">
      and bso_store_id=#{storeId,jdbcType=INTEGER}
    </if>
    <if test="goodsId != null">
      and bso_goods_id=#{goodsId,jdbcType=INTEGER}
    </if>
    <if test="id != null">
      and id=#{id,jdbcType=INTEGER}
    </if>
  </select>

  <select id="queryAllDaiJiuZhenServceOrder" parameterType="com.jk51.model.registration.requestParams.ServerOrderParams" resultMap="BaseResultMap">
     select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_servce_order bso
    where 1=1
    <if test="storeId != null">
      and store_id=#{storeId,jdbcType=INTEGER}
    </if>
    <if test="goodsId != null">
      and goods_id=#{goodsId,jdbcType=INTEGER}
    </if>
    and serve_status=0
  </select>

  <update id="updateServderOrderServerStatus" parameterType="com.jk51.model.registration.requestParams.ServerOrderParams">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_servce_order
    set
    serve_status = #{serveStatus,jdbcType=TINYINT},
    update_time=CURRENT_TIMESTAMP
    where 1=1
    and goods_id = #{goodsId,jdbcType=INTEGER}
    and serve_status=0
  </update>

  <update id="updateByGoodsId" parameterType="map">
    UPDATE b_servce_order
      SET serve_status = #{status,jdbcType=INTEGER},
      update_time=CURRENT_TIMESTAMP
    WHERE serve_status=0 AND
	  site_id = #{siteId,jdbcType=INTEGER} AND goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <select id="queryMyMingYiYuYueCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">

    select COUNT(1)  FROM(
   select servOrder.id from b_servce_order servOrder INNER JOIN b_contact_person person on servOrder.schedule_person_id=person.id
   where person.member_id=#{memberId,jdbcType=INTEGER} and servOrder.serve_status=0
    ) as count

  </select>

  <select id="queryMyMingYiYuYueDetailList" parameterType="map" resultType="com.jk51.model.registration.models.MyMingYiYuYueDetail">
    select servOrd.id AS servceOrderId,servOrd.disease_info As sickInfo,servOrd.diagnose_status AS diagnoseInfo,stores.address AS storesaddress,
    stores.name AS storesName, date_format(serplate.start_time,'%H:%i:%S') as time2,date_format(serplate.end_time,'%H:%i:%S') as time3,
    date_format(serDetail.use_time,'%Y-%m-%d') as time1,format(bGoods.market_price/100,2) AS price,person.name AS contactPersonName,
    person.mobile AS getContactPersonPhone,bdoctor.doctor_name AS doctorName,servOrd.serve_status AS servstatusInfo

    FROM  b_servce_order servOrd
    INNER JOIN b_contact_person person on(person.id=servOrd.schedule_person_id)
    INNER JOIN b_servce_use_detail serDetail on(serDetail.id=servOrd.use_detail_id)
    INNER JOIN b_servce_template serplate on(serDetail.template_no=serplate.template_no and serDetail.mine_classes_id=serplate.id)
    INNER JOIN b_stores stores on (stores.id=serDetail.store_id)
    LEFT JOIN b_goods bGoods
    on(bGoods.goods_id=serDetail.goods_id)
    LEFT JOIN b_servce_doctor bdoctor
    on(bdoctor.goods_id=serDetail.goods_id)
    where 1=1
    and person.member_id=#{memberId,jdbcType=INTEGER}
    and person.site_id=#{siteId,jdbcType=INTEGER}
    and servOrd.serve_status=0
  </select>

  <select id="findServceOrderDetailPage" parameterType="com.jk51.modules.registration.request.ServceOrderRequestParam"
          resultType="com.jk51.model.goods.PageData">

     select servOrd.id As servceOrderID ,servOrd.trades_id AS  tradesId,servOrd.booking_no As servceNum,
     bGoods.goods_title As serverName, bGoods.goods_title As goodsName,
      bGoods.servce_num As serverTimes,
     bMember.mobile As memberMobile,
    "名医预约" as catryName ,
     format(bGoods.market_price/100,2) AS price,
     date_format(serplate.end_time,'%H:%i') as servOrdertime3,
     date_format(serplate.start_time,'%H:%i') as servOrdertime2,
     date_format(serDetail.use_time,'%Y-%m-%d') as servOrdertime1,
     date_format(bTrad.create_time,'%Y-%m-%d %H:%i:%S') as tradeOrderCreateTime,
     servOrd.serve_status  as servceOrderStatus,servOrd.disease_info as diseaseInfo,
    case  servOrd.serve_status
    when '0' then '待就诊'
    when '1' then '未签到'
    when '2' then '服务暂停'
    when '3' then '已取消'
    WHEN '4' then '已签到'
    WHEN '5' then '退款'
    ELSE '---'end  servOrdStatusInfo

     from b_servce_order servOrd
     INNER  join b_trades bTrad
     ON  (servOrd.trades_id=bTrad.trades_id and servOrd.site_id=bTrad.site_id)
     INNER JOIN b_servce_use_detail serDetail
     on(serDetail.id=servOrd.use_detail_id and serDetail.site_id=servOrd.site_id)
     INNER JOIN b_servce_template serplate
     on(serDetail.template_no=serplate.template_no and serDetail.mine_classes_id=serplate.id)
     INNER  join b_goods bGoods
     on servOrd.goods_id=bGoods.goods_id
     INNER  join b_contact_person bPerson
     on servOrd.schedule_person_id=bPerson.id
     INNER  join b_member bMember
     on bPerson.member_id=bMember.member_id
     where 1=1

    <if test="servceOrdId!=null" >
      and servOrd.id=#{servceOrdId,jdbcType=INTEGER}
    </if>
     <if test="siteId!=null" >
     and servOrd.site_id=#{siteId,jdbcType=INTEGER}
     </if>
    <if test="userCateid!=null" >
      and bGoods.user_cateid=#{userCateid,jdbcType=VARCHAR}
    </if>
    <if test="Status!=null" >
      and servOrd.serve_status=#{Status,jdbcType=INTEGER}
    </if>
      <choose>
          <when test="startServiceDate!=null and endServiceDate!=null">
              AND servOrd.create_time &gt;= #{startServiceDate} AND servOrd.create_time &lt;= #{endServiceDate}
          </when>
          <when test="startServiceDate!=null">
              AND servOrd.create_time &gt;= #{startServiceDate}
          </when>
          <when test="endServiceDate!=null">
              AND servOrd.create_time &lt;= #{endServiceDate}
          </when>
      </choose>
      <choose>
          <when test="startOrderTradeDate!=null and endOrderTradeDate!=null">
              AND bTrad.create_time &gt;= #{startOrderTradeDate} AND bTrad.create_time &lt;= #{endOrderTradeDate}
          </when>
          <when test="startOrderTradeDate!=null">
              AND bTrad.create_time &gt;= #{startOrderTradeDate}
          </when>
          <when test="endOrderTradeDate!=null">
              AND bTrad.create_time &lt;= #{endOrderTradeDate}
          </when>
      </choose>

      <choose>
          <when test="selectType!=null and selectType==1 and selectParam!=null and selectParam!=''">
              AND servOrd.booking_no = #{selectParam}
          </when>
          <when test="selectType!=null and selectType==2 and selectParam!=null and selectParam!=''">
              AND (bMember.mobile = #{selectParam} or bMember.mobile = #{selectParam})
          </when>
          <when test="selectType!=null and selectType==3 and selectParam!=null and selectParam!=''">
              AND (bPerson.name = #{selectParam} or bMember.mobile = #{selectParam})
          </when>
          <when test="selectType!=null and selectType==4 and selectParam!=null and selectParam!=''">
              AND bPerson.mobile = #{selectParam}
          </when>
      </choose>
      order by bTrad.create_time desc
  </select>

  <select id="queryAllDoctorDetailByStorePage" parameterType="com.jk51.modules.registration.request.SubscribeDetailRequestParam"
          resultType="com.jk51.model.goods.PageData">

    select bDoctor.doctor_name As doctorName,category.cate_name AS  categoryName,category.cate_id As catoryId, bDoctor.goods_id,
    bDoctor.id AS doctorId,
    result.servceOrderCount AS servceOrderCount, result.lastChangeTimes AS lastChangeTimes
    from  b_servce_doctor bDoctor
    INNER  join b_goods bGoods
    on bDoctor.goods_id=bGoods.goods_id
    LEFT  JOIN b_category category
    on category.cate_id=bGoods.user_cateid
    left JOIN (
    select count(1) AS servceOrderCount, date_format(max(update_time),'%Y-%m-%d %H:%i:%S') as lastChangeTimes,
    goods_id  AS goodsId
    from b_servce_use_detail
    where 1=1
    <if test="siteId != null">
      and site_id=#{siteId,jdbcType=INTEGER}
    </if>
    <if test="storeId != null">
      and store_id=#{storeId,jdbcType=INTEGER}
    </if>
    and status=0
    group by goods_id
    ) as result
    on bDoctor.goods_id=result.goodsId
    where 1=1
    <if test="status!=null and status==0" >
      and (servceOrderCount=0 or servceOrderCount is null)
    </if>
    <if test="status!=null and status==1" >
      and (servceOrderCount>0)
    </if>
    <if test="doctorName!=null" >
      and bDoctor.doctor_name=#{doctorName}
    </if>
    <if test="userCateid!=null" >
      and category.cate_id=#{userCateid}
    </if>
    <choose>
      <when test="startTime!=null and endTime!=null">
        AND lastChangeTimes &gt;= #{startTime} AND lastChangeTimes &lt;= #{endTime}
      </when>
      <when test="startTime!=null">
        AND lastChangeTimes &gt;= #{startTime}
      </when>
      <when test="endTime!=null">
        AND lastChangeTimes &lt;= #{endTime}
      </when>
    </choose>
  </select>


  <select id="selectByTradesId" resultType="java.util.Map">
    select * from b_servce_order
    where trades_id = #{tradesId} LIMIT 1
  </select>

  <select id="getTradesServceOrdersList" resultType="java.util.Map">
    select site_id, trades_id, use_detail_id, use_count, amount, serve_status, schedule_person_id, diagnose_status, disease_info
    from b_servce_order
    where site_id=#{siteId} AND trades_id IN
    <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>


</mapper>