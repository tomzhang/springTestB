<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jk51.modules.registration.mapper.ServceDoctorMapper">
  <resultMap id="BaseResultMap" type="com.jk51.model.registration.models.ServceDoctor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="bsd_id" jdbcType="INTEGER" property="id" />
    <id column="bsd_site_id" jdbcType="INTEGER" property="siteId" />
    <result column="bsd_goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="bsd_doctor_img" jdbcType="VARCHAR" property="doctorImg" />
    <result column="bsd_doctor_name" jdbcType="VARCHAR" property="doctorName" />
    <result column="bsd_doctor_phone" jdbcType="VARCHAR" property="doctorPhone" />
    <result column="bsd_sex" jdbcType="TINYINT" property="sex" />
    <result column="bsd_doctor_position" jdbcType="VARCHAR" property="doctorPosition" />
    <result column="bsd_status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jk51.model.registration.models.ServceDoctor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="bsd_describe" jdbcType="LONGVARCHAR" property="describe" />
    <result column="bsd_honour" jdbcType="LONGVARCHAR" property="honour" />
    <result column="bsd_introduce" jdbcType="LONGVARCHAR" property="introduce" />
    <result column="bsd_stores" jdbcType="LONGVARCHAR" property="stores" />
    <result column="bsd_remark" jdbcType="LONGVARCHAR" property="remark" />
    <result column="commentFen" jdbcType="LONGVARCHAR" property="commentFen" />
  </resultMap>

  <resultMap extends="ResultMapWithBLOBs" id="DoctorAndGoodsResult" type="com.jk51.modules.registration.request.DoctorAndGoodS">
    <result column="goods_title" jdbcType="VARCHAR" property="goodsTitle" />
    <result column="schedule_time" jdbcType="INTEGER" property="scheduleTime" />
    <result column="servce_num" jdbcType="INTEGER" property="servceNum" />
    <result column="market_price" jdbcType="INTEGER" property="marketPrice" />
    <result column="good_remark" jdbcType="LONGVARCHAR" property="goodRemark" />
    <result column="goods_status" jdbcType="INTEGER" property="goodsStatus" />
  </resultMap>

  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    bsd.id as bsd_id, bsd.site_id as bsd_site_id, bsd.goods_id as bsd_goods_id, bsd.doctor_img as bsd_doctor_img, 
    bsd.doctor_name as bsd_doctor_name, bsd.doctor_phone as bsd_doctor_phone, bsd.sex as bsd_sex, 
    bsd.doctor_position as bsd_doctor_position, bsd.status as bsd_status
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    bsd.describe as bsd_describe, bsd.honour as bsd_honour, bsd.introduce as bsd_introduce, 
    bsd.stores as bsd_stores, bsd.remark as bsd_remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_servce_doctor bsd
    where bsd.id = #{id,jdbcType=INTEGER}
      and bsd.site_id = #{siteId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from b_servce_doctor
    where id = #{id,jdbcType=INTEGER}
      and site_id = #{siteId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jk51.model.registration.models.ServceDoctor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into b_servce_doctor (id, site_id, goods_id, 
      doctor_img, doctor_name, doctor_phone, 
      sex, doctor_position, `status`,
    `describe`, honour, introduce,
      stores, remark)
    values (#{id,jdbcType=INTEGER}, #{siteId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{doctorImg,jdbcType=VARCHAR}, #{doctorName,jdbcType=VARCHAR}, #{doctorPhone,jdbcType=VARCHAR}, 
      #{sex,jdbcType=TINYINT}, #{doctorPosition,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{describe,jdbcType=LONGVARCHAR}, #{honour,jdbcType=LONGVARCHAR}, #{introduce,jdbcType=LONGVARCHAR}, 
      #{stores,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jk51.model.registration.models.ServceDoctor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into b_servce_doctor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="siteId != null">
        site_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="doctorImg != null">
        doctor_img,
      </if>
      <if test="doctorName != null">
        doctor_name,
      </if>
      <if test="doctorPhone != null">
        doctor_phone,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="doctorPosition != null">
        doctor_position,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="describe != null">
        `describe`,
      </if>
      <if test="honour != null">
        honour,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="stores != null">
        stores,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="siteId != null">
        #{siteId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="doctorImg != null">
        #{doctorImg,jdbcType=VARCHAR},
      </if>
      <if test="doctorName != null">
        #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="doctorPhone != null">
        #{doctorPhone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="doctorPosition != null">
        #{doctorPosition,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=LONGVARCHAR},
      </if>
      <if test="honour != null">
        #{honour,jdbcType=LONGVARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=LONGVARCHAR},
      </if>
      <if test="stores != null">
        #{stores,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk51.model.registration.models.ServceDoctor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_servce_doctor
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="doctorImg != null">
        doctor_img = #{doctorImg,jdbcType=VARCHAR},
      </if>
      <if test="doctorName != null">
        doctor_name = #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="doctorPhone != null">
        doctor_phone = #{doctorPhone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="doctorPosition != null">
        doctor_position = #{doctorPosition,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="describe != null">
        `describe` = #{describe,jdbcType=LONGVARCHAR},
      </if>
      <if test="honour != null">
        honour = #{honour,jdbcType=LONGVARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=LONGVARCHAR},
      </if>
      <if test="stores != null">
        stores = #{stores,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and site_id = #{siteId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jk51.model.registration.models.ServceDoctor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_servce_doctor
    set goods_id = #{goodsId,jdbcType=INTEGER},
      doctor_img = #{doctorImg,jdbcType=VARCHAR},
      doctor_name = #{doctorName,jdbcType=VARCHAR},
      doctor_phone = #{doctorPhone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      doctor_position = #{doctorPosition,jdbcType=VARCHAR},
    `status` = #{status,jdbcType=TINYINT},
    `describe` = #{describe,jdbcType=LONGVARCHAR},
      honour = #{honour,jdbcType=LONGVARCHAR},
      introduce = #{introduce,jdbcType=LONGVARCHAR},
      stores = #{stores,jdbcType=LONGVARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
      and site_id = #{siteId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk51.model.registration.models.ServceDoctor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update b_servce_doctor
    set goods_id = #{goodsId,jdbcType=INTEGER},
      doctor_img = #{doctorImg,jdbcType=VARCHAR},
      doctor_name = #{doctorName,jdbcType=VARCHAR},
      doctor_phone = #{doctorPhone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      doctor_position = #{doctorPosition,jdbcType=VARCHAR},
    `status` = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
      and site_id = #{siteId,jdbcType=INTEGER}
  </update>
  <select id="findDoctorInfo" parameterType="com.jk51.model.registration.models.ServceDoctor" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />,
    <include refid="Blob_Column_List" />,
    format(commentResult.commentRank/commentResult.commentCount,2) as commentFen
    from b_servce_doctor bsd
    left Join(
    select sum(comment_rank) As commentRank,count(1) As commentCount ,goods_id As goodsId
    from b_trades_comments
    where 1=1
    <if test="siteId != null">
      and site_id=#{siteId,jdbcType=INTEGER}
    </if>
    group by goods_id
    ) as commentResult
    on commentResult.goodsId=bsd.goods_id
    where 1=1
    <if test="id != null">
     AND bsd.id = #{id,jdbcType=INTEGER}
    </if>
    <if test="siteId != null">
      AND bsd.site_id =#{siteId,jdbcType=INTEGER}
    </if>
    <if test="goodsId != null">
      AND bsd.goods_id = #{goodsId,jdbcType=INTEGER}
    </if>
    <if test="doctorName != null">
      AND bsd.doctor_name = #{doctorName,jdbcType=VARCHAR}
    </if>
    <if test="doctorPhone != null">
      AND bsd.doctor_phone = #{doctorPhone,jdbcType=VARCHAR}
    </if>
    <if test="doctorPosition != null">
      AND bsd.doctor_position = #{doctorPosition,jdbcType=VARCHAR}
    </if>
    <if test="status != null">
      AND bsd.status = #{status,jdbcType=TINYINT}
    </if>
    <if test="stores != null">
      AND bsd.stores = #{stores,jdbcType=LONGVARCHAR}
    </if>
  </select>

  <select id="queryDoctorForServceOrderMsg" parameterType="map" resultType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />,
    result.allUseCount,
    format(commentResult.commentRank/commentResult.commentCount,2) as commentFen
    from b_servce_doctor bsd
    left JOIN (
    select sum(use_count) As allUseCount,sum(account_source) AS allAccountSource,goods_id  AS goodsId
    from b_servce_use_detail
    where 1=1
    <if test="siteId != null">
      and site_id=#{siteId,jdbcType=INTEGER}
    </if>
    and status=0
    group by goods_id
    ) as result
    on bsd.goods_id=result.goodsId
    left Join(
    select sum(comment_rank) As commentRank,count(1) As commentCount ,goods_id As goodsId
    from b_trades_comments
      where 1=1
    <if test="siteId != null">
      and site_id=#{siteId,jdbcType=INTEGER}
    </if>
    group by goods_id
    ) as commentResult
    on  bsd.goods_id=commentResult.goodsId
    where 1=1
    <if test="siteId != null">
      and bsd.site_id=#{siteId,jdbcType=INTEGER}
    </if>
  </select>

  <select id="selectDoctorAndGoods" parameterType="com.jk51.modules.registration.request.DoctorAndGoodS" resultMap="DoctorAndGoodsResult">
    SELECT
      <include refid="Base_Column_List" />,
      <include refid="Blob_Column_List" />,
      B.goods_title,B.schedule_time,B.servce_num,B.market_price,B.remark good_remark,B.goods_status
        FROM b_servce_doctor bsd
           LEFT JOIN b_goods B ON bsd.goods_id=B.goods_id
      WHERE bsd.site_id=#{siteId,jdbcType=INTEGER}
    <if test="stores!=null and stores!='' ">
        AND FIND_IN_SET(stores,bsd.stores)
    </if>
    <if test="id!=null">
      AND bsd.id=#{id,jdbcType=INTEGER}
    </if>
    <if test="goodsId!=null">
      AND bsd.goods_id=#{goodsId,jdbcType=INTEGER}
    </if>
  </select>
</mapper>